{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7","program":"C:\\Users\\victo\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","rulinalg","C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=511b9453afb4abcd","-C","extra-filename=-511b9453afb4abcd","--out-dir","d:\\Pasta_de_arquivos_de_trabalho\\Rust Projects\\Rust-MachineLearning\\Rust-MachineLearning\\rustymachine-regression\\target\\rls\\debug\\deps","-L","dependency=d:\\Pasta_de_arquivos_de_trabalho\\Rust Projects\\Rust-MachineLearning\\Rust-MachineLearning\\rustymachine-regression\\target\\rls\\debug\\deps","--extern","matrixmultiply=d:\\Pasta_de_arquivos_de_trabalho\\Rust Projects\\Rust-MachineLearning\\Rust-MachineLearning\\rustymachine-regression\\target\\rls\\debug\\deps\\libmatrixmultiply-0e05f3fe9eb4a26b.rmeta","--extern","num=d:\\Pasta_de_arquivos_de_trabalho\\Rust Projects\\Rust-MachineLearning\\Rust-MachineLearning\\rustymachine-regression\\target\\rls\\debug\\deps\\libnum-7b73551300b83e44.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\victo\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"d:\\Pasta_de_arquivos_de_trabalho\\Rust Projects\\Rust-MachineLearning\\Rust-MachineLearning\\rustymachine-regression\\target\\rls\\debug\\deps\\librulinalg-511b9453afb4abcd.rmeta"},"prelude":{"crate_id":{"name":"rulinalg","disambiguator":[7796211640319554460,5710444667949624549]},"crate_root":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src","external_crates":[{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[2134305066550747688,1377703208702874155]}},{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[1322159461575500717,8297198428669169011]}},{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[2376346800744392852,12342541482992122530]}},{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[14946502858004023242,6637215598610016319]}},{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[5305136910335682758,6890491777619641650]}},{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[8079093424489733033,9678018066858265018]}},{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[8191054904896780843,65190916132359678]}},{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[17454577518104061478,8473922882117178851]}},{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[14702801963282246562,3385633331338644346]}},{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[4483555191844012602,617965746000623535]}},{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[6496369475756502088,8603909216288097824]}},{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\lib.rs","num":12,"id":{"name":"panic_unwind","disambiguator":[8790568169648576788,8899032378407077408]}},{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\lib.rs","num":13,"id":{"name":"num","disambiguator":[15736810812587234734,5413681368338791210]}},{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\lib.rs","num":14,"id":{"name":"num_traits","disambiguator":[16617902859676556270,13891473265659732766]}},{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\lib.rs","num":15,"id":{"name":"num_integer","disambiguator":[14220897647327859893,10257212298560866452]}},{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\lib.rs","num":16,"id":{"name":"num_iter","disambiguator":[14826228747991017059,607599527392375172]}},{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\lib.rs","num":17,"id":{"name":"matrixmultiply","disambiguator":[1263508735231458886,7807149000311179618]}},{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\lib.rs","num":18,"id":{"name":"rawpointer","disambiguator":[11197942076773611251,6181111145906651827]}}],"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\lib.rs","byte_start":0,"byte_end":3293,"line_start":1,"line_end":112,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":42},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\macros\\mod.rs","byte_start":3425,"byte_end":3454,"line_start":10,"line_end":10,"column_start":5,"column_end":34},"alias_span":null,"name":"elementwise_matrix_comparison","value":"","parent":{"krate":0,"index":5}},{"kind":"Use","ref_id":{"krate":0,"index":47},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\macros\\mod.rs","byte_start":3460,"byte_end":3489,"line_start":11,"line_end":11,"column_start":5,"column_end":34},"alias_span":null,"name":"elementwise_vector_comparison","value":"","parent":{"krate":0,"index":5}},{"kind":"Use","ref_id":{"krate":0,"index":1095},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\macros\\mod.rs","byte_start":3495,"byte_end":3524,"line_start":12,"line_end":12,"column_start":5,"column_end":34},"alias_span":null,"name":"AbsoluteElementwiseComparator","value":"","parent":{"krate":0,"index":5}},{"kind":"Use","ref_id":{"krate":0,"index":1112},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\macros\\mod.rs","byte_start":3530,"byte_end":3556,"line_start":13,"line_end":13,"column_start":5,"column_end":31},"alias_span":null,"name":"ExactElementwiseComparator","value":"","parent":{"krate":0,"index":5}},{"kind":"Use","ref_id":{"krate":0,"index":1113},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\macros\\mod.rs","byte_start":3530,"byte_end":3556,"line_start":13,"line_end":13,"column_start":5,"column_end":31},"alias_span":null,"name":"ExactElementwiseComparator","value":"","parent":{"krate":0,"index":86}},{"kind":"Use","ref_id":{"krate":0,"index":1132},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\macros\\mod.rs","byte_start":3562,"byte_end":3586,"line_start":14,"line_end":14,"column_start":5,"column_end":29},"alias_span":null,"name":"UlpElementwiseComparator","value":"","parent":{"krate":0,"index":5}},{"kind":"Use","ref_id":{"krate":0,"index":1155},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\macros\\mod.rs","byte_start":3592,"byte_end":3618,"line_start":15,"line_end":15,"column_start":5,"column_end":31},"alias_span":null,"name":"FloatElementwiseComparator","value":"","parent":{"krate":0,"index":5}},{"kind":"Use","ref_id":{"krate":0,"index":23},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\macros\\mod.rs","byte_start":3731,"byte_end":3752,"line_start":19,"line_end":19,"column_start":5,"column_end":26},"alias_span":null,"name":"ElementwiseComparator","value":"","parent":{"krate":0,"index":5}},{"kind":"Use","ref_id":{"krate":0,"index":472},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":62509,"byte_end":62519,"line_start":25,"line_end":25,"column_start":23,"column_end":33},"alias_span":null,"name":"BaseMatrix","value":"","parent":{"krate":0,"index":90}},{"kind":"Use","ref_id":{"krate":0,"index":519},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":62521,"byte_end":62534,"line_start":25,"line_end":25,"column_start":35,"column_end":48},"alias_span":null,"name":"BaseMatrixMut","value":"","parent":{"krate":0,"index":90}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\lib.rs","byte_start":0,"byte_end":3293,"line_start":1,"line_end":112,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":90},{"krate":0,"index":651},{"krate":0,"index":673},{"krate":0,"index":689},{"krate":0,"index":725},{"krate":0,"index":960},{"krate":0,"index":965}],"decl_id":null,"docs":" # The rulinalg crate.","sig":null,"attributes":[{"value":"/ # The rulinalg crate.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\lib.rs","byte_start":0,"byte_end":25,"line_start":1,"line_end":1,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\lib.rs","byte_start":26,"byte_end":29,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ A crate that provides high-dimensional linear algebra","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\lib.rs","byte_start":30,"byte_end":87,"line_start":3,"line_end":3,"column_start":1,"column_end":58}},{"value":"/ implemented entirely in Rust.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\lib.rs","byte_start":88,"byte_end":121,"line_start":4,"line_end":4,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\lib.rs","byte_start":122,"byte_end":125,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ ---","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\lib.rs","byte_start":126,"byte_end":133,"line_start":6,"line_end":6,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\lib.rs","byte_start":134,"byte_end":137,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This crate provides two core data structures: `Matrix` and","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\lib.rs","byte_start":138,"byte_end":200,"line_start":8,"line_end":8,"column_start":1,"column_end":63}},{"value":"/ `Vector`. These structs are designed to behave as you would expect","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\lib.rs","byte_start":201,"byte_end":271,"line_start":9,"line_end":9,"column_start":1,"column_end":71}},{"value":"/ with relevant operator overloading.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\lib.rs","byte_start":272,"byte_end":311,"line_start":10,"line_end":10,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\lib.rs","byte_start":312,"byte_end":315,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ The library currently contains (at least) the following linear algebra","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\lib.rs","byte_start":316,"byte_end":390,"line_start":12,"line_end":12,"column_start":1,"column_end":75}},{"value":"/ methods:","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\lib.rs","byte_start":391,"byte_end":403,"line_start":13,"line_end":13,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\lib.rs","byte_start":404,"byte_end":407,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ - Matrix inversion","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\lib.rs","byte_start":408,"byte_end":430,"line_start":15,"line_end":15,"column_start":1,"column_end":23}},{"value":"/ - LUP decomposition","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\lib.rs","byte_start":431,"byte_end":454,"line_start":16,"line_end":16,"column_start":1,"column_end":24}},{"value":"/ - QR decomposition","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\lib.rs","byte_start":455,"byte_end":477,"line_start":17,"line_end":17,"column_start":1,"column_end":23}},{"value":"/ - SVD decomposition","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\lib.rs","byte_start":478,"byte_end":501,"line_start":18,"line_end":18,"column_start":1,"column_end":24}},{"value":"/ - Cholesky decomposition","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\lib.rs","byte_start":502,"byte_end":530,"line_start":19,"line_end":19,"column_start":1,"column_end":29}},{"value":"/ - Eigenvalue decomposition","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\lib.rs","byte_start":531,"byte_end":561,"line_start":20,"line_end":20,"column_start":1,"column_end":31}},{"value":"/ - Upper Hessenberg decomposition","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\lib.rs","byte_start":562,"byte_end":598,"line_start":21,"line_end":21,"column_start":1,"column_end":37}},{"value":"/ - Linear system solver","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\lib.rs","byte_start":599,"byte_end":625,"line_start":22,"line_end":22,"column_start":1,"column_end":27}},{"value":"/ - Other standard transformations, e.g. Transposing, concatenation, etc.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\lib.rs","byte_start":626,"byte_end":701,"line_start":23,"line_end":23,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\lib.rs","byte_start":702,"byte_end":705,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ ---","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\lib.rs","byte_start":706,"byte_end":713,"line_start":25,"line_end":25,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\lib.rs","byte_start":714,"byte_end":717,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ## Usage","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\lib.rs","byte_start":718,"byte_end":730,"line_start":27,"line_end":27,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\lib.rs","byte_start":731,"byte_end":734,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ Specific usage of modules is described within the modules themselves. This section","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\lib.rs","byte_start":735,"byte_end":821,"line_start":29,"line_end":29,"column_start":1,"column_end":87}},{"value":"/ will highlight the basic usage.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\lib.rs","byte_start":822,"byte_end":857,"line_start":30,"line_end":30,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\lib.rs","byte_start":858,"byte_end":861,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ We can create new matrices.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\lib.rs","byte_start":862,"byte_end":893,"line_start":32,"line_end":32,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\lib.rs","byte_start":894,"byte_end":897,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\lib.rs","byte_start":898,"byte_end":905,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/ use rulinalg::matrix::Matrix;","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\lib.rs","byte_start":906,"byte_end":939,"line_start":35,"line_end":35,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\lib.rs","byte_start":940,"byte_end":943,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ // A new matrix with 3 rows and 2 columns.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\lib.rs","byte_start":944,"byte_end":990,"line_start":37,"line_end":37,"column_start":1,"column_end":47}},{"value":"/ let a = Matrix::new(3, 2, vec![1.0, 2.0, 3.0, 4.0, 5.0, 6.0]);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\lib.rs","byte_start":991,"byte_end":1057,"line_start":38,"line_end":38,"column_start":1,"column_end":67}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\lib.rs","byte_start":1058,"byte_end":1065,"line_start":39,"line_end":39,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\lib.rs","byte_start":1066,"byte_end":1069,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ The matrices are stored in row-major order. This means in the example above the top","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\lib.rs","byte_start":1070,"byte_end":1157,"line_start":41,"line_end":41,"column_start":1,"column_end":88}},{"value":"/ row will be [1,2,3].","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\lib.rs","byte_start":1158,"byte_end":1182,"line_start":42,"line_end":42,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\lib.rs","byte_start":1183,"byte_end":1186,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ We can perform operations on matrices.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\lib.rs","byte_start":1187,"byte_end":1229,"line_start":44,"line_end":44,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\lib.rs","byte_start":1230,"byte_end":1233,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\lib.rs","byte_start":1234,"byte_end":1241,"line_start":46,"line_end":46,"column_start":1,"column_end":8}},{"value":"/ use rulinalg::matrix::Matrix;","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\lib.rs","byte_start":1242,"byte_end":1275,"line_start":47,"line_end":47,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\lib.rs","byte_start":1276,"byte_end":1279,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ // A new matrix with 3 rows and 2 columns.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\lib.rs","byte_start":1280,"byte_end":1326,"line_start":49,"line_end":49,"column_start":1,"column_end":47}},{"value":"/ let a = Matrix::new(3, 2, vec![1.0, 2.0, 3.0, 4.0, 5.0, 6.0]);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\lib.rs","byte_start":1327,"byte_end":1393,"line_start":50,"line_end":50,"column_start":1,"column_end":67}},{"value":"/ let b = Matrix::new(3, 2, vec![6.0, 5.0, 4.0, 3.0, 2.0, 1.0]);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\lib.rs","byte_start":1394,"byte_end":1460,"line_start":51,"line_end":51,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\lib.rs","byte_start":1461,"byte_end":1464,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ // Produces a 3x2 matrix filled with sevens.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\lib.rs","byte_start":1465,"byte_end":1513,"line_start":53,"line_end":53,"column_start":1,"column_end":49}},{"value":"/ let c = a + b;","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\lib.rs","byte_start":1514,"byte_end":1532,"line_start":54,"line_end":54,"column_start":1,"column_end":19}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\lib.rs","byte_start":1533,"byte_end":1540,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\lib.rs","byte_start":1541,"byte_end":1544,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ Sometimes we want to construct small matrices by hand, usually for writing unit tests","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\lib.rs","byte_start":1545,"byte_end":1634,"line_start":57,"line_end":57,"column_start":1,"column_end":90}},{"value":"/ or examples. For this purpose, `rulinalg` provides the `matrix!` macro:","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\lib.rs","byte_start":1635,"byte_end":1710,"line_start":58,"line_end":58,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\lib.rs","byte_start":1711,"byte_end":1714,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\lib.rs","byte_start":1715,"byte_end":1722,"line_start":60,"line_end":60,"column_start":1,"column_end":8}},{"value":"/ // Remember to enable macro usage in rulinalg!","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\lib.rs","byte_start":1723,"byte_end":1773,"line_start":61,"line_end":61,"column_start":1,"column_end":51}},{"value":"/ #[macro_use]","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\lib.rs","byte_start":1774,"byte_end":1790,"line_start":62,"line_end":62,"column_start":1,"column_end":17}},{"value":"/ extern crate rulinalg;","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\lib.rs","byte_start":1791,"byte_end":1817,"line_start":63,"line_end":63,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\lib.rs","byte_start":1818,"byte_end":1821,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\lib.rs","byte_start":1822,"byte_end":1839,"line_start":65,"line_end":65,"column_start":1,"column_end":18}},{"value":"/ // Construct a 3x3 matrix of f64","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\lib.rs","byte_start":1840,"byte_end":1876,"line_start":66,"line_end":66,"column_start":1,"column_end":37}},{"value":"/ // Commas separate columns and semi-colons separate rows","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\lib.rs","byte_start":1877,"byte_end":1937,"line_start":67,"line_end":67,"column_start":1,"column_end":61}},{"value":"/ let mat = matrix!(1.0, 2.0, 3.0;","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\lib.rs","byte_start":1938,"byte_end":1974,"line_start":68,"line_end":68,"column_start":1,"column_end":37}},{"value":"/                   4.0, 5.0, 6.0;","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\lib.rs","byte_start":1975,"byte_end":2011,"line_start":69,"line_end":69,"column_start":1,"column_end":37}},{"value":"/                   7.0, 8.0, 9.0);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\lib.rs","byte_start":2012,"byte_end":2049,"line_start":70,"line_end":70,"column_start":1,"column_end":38}},{"value":"/ # }","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\lib.rs","byte_start":2050,"byte_end":2057,"line_start":71,"line_end":71,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\lib.rs","byte_start":2058,"byte_end":2065,"line_start":72,"line_end":72,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\lib.rs","byte_start":2066,"byte_end":2069,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ Of course the library can support more complex operations but you should check the individual","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\lib.rs","byte_start":2070,"byte_end":2167,"line_start":74,"line_end":74,"column_start":1,"column_end":98}},{"value":"/ modules for more information.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\lib.rs","byte_start":2168,"byte_end":2201,"line_start":75,"line_end":75,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\lib.rs","byte_start":2202,"byte_end":2205,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ # Matrix Slices","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\lib.rs","byte_start":2206,"byte_end":2225,"line_start":77,"line_end":77,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\lib.rs","byte_start":2226,"byte_end":2229,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ Often times it is desirable to operate on only a sub-section of a `Matrix` without copying this block.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\lib.rs","byte_start":2230,"byte_end":2336,"line_start":79,"line_end":79,"column_start":1,"column_end":107}},{"value":"/ Rulinalg allows this via the `MatrixSlice` and `MatrixSliceMut` structs. These structs can be created","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\lib.rs","byte_start":2337,"byte_end":2442,"line_start":80,"line_end":80,"column_start":1,"column_end":106}},{"value":"/ from `Matrix` structs and follow all of the borrowing rules of Rust.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\lib.rs","byte_start":2443,"byte_end":2515,"line_start":81,"line_end":81,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\lib.rs","byte_start":2516,"byte_end":2519,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ Note finally that much of the `Matrix`/`MatrixSlice`/`MatrixSliceMut` functionality is contained behind","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\lib.rs","byte_start":2520,"byte_end":2627,"line_start":83,"line_end":83,"column_start":1,"column_end":108}},{"value":"/ the `BaseMatrix`/`BaseMatrixMut` traits. This allows us to be generic over matrices or slices.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\lib.rs","byte_start":2628,"byte_end":2726,"line_start":84,"line_end":84,"column_start":1,"column_end":99}},{"value":"deny(missing_docs)","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\lib.rs","byte_start":2728,"byte_end":2750,"line_start":86,"line_end":86,"column_start":1,"column_end":23}},{"value":"warn(missing_debug_implementations)","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\lib.rs","byte_start":2751,"byte_end":2790,"line_start":87,"line_end":87,"column_start":1,"column_end":40}}]},{"kind":"Mod","id":{"krate":0,"index":5},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\macros\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"macros","qualname":"::macros","value":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\macros\\mod.rs","parent":null,"children":[{"krate":0,"index":6},{"krate":0,"index":8},{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":2756},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":89}],"decl_id":null,"docs":" Macros for the linear algebra modules.\n","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\lib.rs","byte_start":2940,"byte_end":2952,"line_start":93,"line_end":93,"column_start":1,"column_end":13}},{"value":"/ Macros for the linear algebra modules.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\macros\\mod.rs","byte_start":3295,"byte_end":3337,"line_start":1,"line_end":1,"column_start":1,"column_end":43}}]},{"kind":"Trait","id":{"krate":0,"index":17},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\macros\\matrix_eq.rs","byte_start":7285,"byte_end":7302,"line_start":12,"line_end":12,"column_start":11,"column_end":28},"name":"ComparisonFailure","qualname":"::macros::matrix_eq::ComparisonFailure","value":"ComparisonFailure","parent":null,"children":[{"krate":0,"index":18}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":18},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\macros\\matrix_eq.rs","byte_start":7312,"byte_end":7326,"line_start":13,"line_end":13,"column_start":8,"column_end":22},"name":"failure_reason","qualname":"::macros::matrix_eq::ComparisonFailure::failure_reason","value":"pub fn failure_reason(&Self) -> Option<String>","parent":{"krate":0,"index":17},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":968},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\macros\\matrix_eq.rs","byte_start":7423,"byte_end":7453,"line_start":18,"line_end":18,"column_start":12,"column_end":42},"name":"MatrixElementComparisonFailure","qualname":"::macros::matrix_eq::MatrixElementComparisonFailure","value":"MatrixElementComparisonFailure { x, y, error, row, col }","parent":null,"children":[{"krate":0,"index":971},{"krate":0,"index":972},{"krate":0,"index":973},{"krate":0,"index":974},{"krate":0,"index":975}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":971},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\macros\\matrix_eq.rs","byte_start":7497,"byte_end":7498,"line_start":19,"line_end":19,"column_start":9,"column_end":10},"name":"x","qualname":"::macros::matrix_eq::MatrixElementComparisonFailure::x","value":"T","parent":{"krate":0,"index":968},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":972},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\macros\\matrix_eq.rs","byte_start":7511,"byte_end":7512,"line_start":20,"line_end":20,"column_start":9,"column_end":10},"name":"y","qualname":"::macros::matrix_eq::MatrixElementComparisonFailure::y","value":"T","parent":{"krate":0,"index":968},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":973},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\macros\\matrix_eq.rs","byte_start":7525,"byte_end":7530,"line_start":21,"line_end":21,"column_start":9,"column_end":14},"name":"error","qualname":"::macros::matrix_eq::MatrixElementComparisonFailure::error","value":"E","parent":{"krate":0,"index":968},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":974},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\macros\\matrix_eq.rs","byte_start":7543,"byte_end":7546,"line_start":22,"line_end":22,"column_start":9,"column_end":12},"name":"row","qualname":"::macros::matrix_eq::MatrixElementComparisonFailure::row","value":"usize","parent":{"krate":0,"index":968},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":975},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\macros\\matrix_eq.rs","byte_start":7563,"byte_end":7566,"line_start":23,"line_end":23,"column_start":9,"column_end":12},"name":"col","qualname":"::macros::matrix_eq::MatrixElementComparisonFailure::col","value":"usize","parent":{"krate":0,"index":968},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1000},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\macros\\matrix_eq.rs","byte_start":8380,"byte_end":8385,"line_start":49,"line_end":49,"column_start":5,"column_end":10},"name":"Match","qualname":"::macros::matrix_eq::MatrixComparisonResult::Match","value":"MatrixComparisonResult::Match","parent":{"krate":0,"index":996},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":1002},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\macros\\matrix_eq.rs","byte_start":8391,"byte_end":8411,"line_start":50,"line_end":50,"column_start":5,"column_end":25},"name":"MismatchedDimensions","qualname":"::macros::matrix_eq::MatrixComparisonResult::MismatchedDimensions","value":"MatrixComparisonResult::MismatchedDimensions { dim_x, dim_y }","parent":{"krate":0,"index":996},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":1005},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\macros\\matrix_eq.rs","byte_start":8466,"byte_end":8484,"line_start":51,"line_end":51,"column_start":5,"column_end":23},"name":"MismatchedElements","qualname":"::macros::matrix_eq::MatrixComparisonResult::MismatchedElements","value":"MatrixComparisonResult::MismatchedElements { comparator, mismatches }","parent":{"krate":0,"index":996},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":996},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\macros\\matrix_eq.rs","byte_start":8250,"byte_end":8272,"line_start":45,"line_end":45,"column_start":10,"column_end":32},"name":"MatrixComparisonResult","qualname":"::macros::matrix_eq::MatrixComparisonResult","value":"pub enum MatrixComparisonResult<T, C, E> where T: Copy,\n         C: ElementwiseComparator<T, E>, E: ComparisonFailure {\n    Match,\n    MismatchedDimensions {\n        dim_x: (usize, usize),\n        dim_y: (usize, usize),\n    },\n    MismatchedElements {\n        comparator: C,\n        mismatches: Vec<MatrixElementComparisonFailure<T, E>>,\n    },\n}","parent":null,"children":[{"krate":0,"index":1000},{"krate":0,"index":1002},{"krate":0,"index":1005}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":23},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\macros\\matrix_eq.rs","byte_start":8858,"byte_end":8879,"line_start":58,"line_end":58,"column_start":11,"column_end":32},"name":"ElementwiseComparator","qualname":"::macros::matrix_eq::ElementwiseComparator","value":"ElementwiseComparator<T, E>","parent":null,"children":[{"krate":0,"index":26},{"krate":0,"index":27}],"decl_id":null,"docs":" Trait that describes elementwise comparators for [assert_matrix_eq!](../macro.assert_matrix_eq!.html).","sig":null,"attributes":[{"value":"/ Trait that describes elementwise comparators for [assert_matrix_eq!](../macro.assert_matrix_eq!.html).","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\macros\\matrix_eq.rs","byte_start":8561,"byte_end":8667,"line_start":54,"line_end":54,"column_start":1,"column_end":107}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\macros\\matrix_eq.rs","byte_start":8668,"byte_end":8671,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ Usually you should not need to interface with this trait directly. It is a part of the documentation","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\macros\\matrix_eq.rs","byte_start":8672,"byte_end":8776,"line_start":56,"line_end":56,"column_start":1,"column_end":105}},{"value":"/ only so that the trait bounds for the comparators are made public.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\macros\\matrix_eq.rs","byte_start":8777,"byte_end":8847,"line_start":57,"line_end":57,"column_start":1,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":26},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\macros\\matrix_eq.rs","byte_start":9041,"byte_end":9048,"line_start":62,"line_end":62,"column_start":8,"column_end":15},"name":"compare","qualname":"::macros::matrix_eq::ElementwiseComparator::compare","value":"pub fn compare(&Self, T, T) -> Result<(), E>","parent":{"krate":0,"index":23},"children":[],"decl_id":null,"docs":" Compares two elements.","sig":null,"attributes":[{"value":"/ Compares two elements.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\macros\\matrix_eq.rs","byte_start":8928,"byte_end":8954,"line_start":59,"line_end":59,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\macros\\matrix_eq.rs","byte_start":8959,"byte_end":8962,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ Returns the error associated with the comparison if it failed.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\macros\\matrix_eq.rs","byte_start":8967,"byte_end":9033,"line_start":61,"line_end":61,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":27},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\macros\\matrix_eq.rs","byte_start":9135,"byte_end":9146,"line_start":65,"line_end":65,"column_start":8,"column_end":19},"name":"description","qualname":"::macros::matrix_eq::ElementwiseComparator::description","value":"pub fn description(&Self) -> String","parent":{"krate":0,"index":23},"children":[],"decl_id":null,"docs":" A description of the comparator.\n","sig":null,"attributes":[{"value":"/ A description of the comparator.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\macros\\matrix_eq.rs","byte_start":9091,"byte_end":9127,"line_start":64,"line_end":64,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":32},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\macros\\matrix_eq.rs","byte_start":9334,"byte_end":9347,"line_start":72,"line_end":72,"column_start":12,"column_end":25},"name":"panic_message","qualname":"<MatrixComparisonResult<T, C, E>>::panic_message","value":"pub fn panic_message(&Self) -> Option<String>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1023},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\macros\\matrix_eq.rs","byte_start":11377,"byte_end":11407,"line_start":126,"line_end":126,"column_start":12,"column_end":42},"name":"VectorElementComparisonFailure","qualname":"::macros::matrix_eq::VectorElementComparisonFailure","value":"VectorElementComparisonFailure { x, y, error, index }","parent":null,"children":[{"krate":0,"index":1026},{"krate":0,"index":1027},{"krate":0,"index":1028},{"krate":0,"index":1029}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1026},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\macros\\matrix_eq.rs","byte_start":11451,"byte_end":11452,"line_start":127,"line_end":127,"column_start":9,"column_end":10},"name":"x","qualname":"::macros::matrix_eq::VectorElementComparisonFailure::x","value":"T","parent":{"krate":0,"index":1023},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1027},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\macros\\matrix_eq.rs","byte_start":11465,"byte_end":11466,"line_start":128,"line_end":128,"column_start":9,"column_end":10},"name":"y","qualname":"::macros::matrix_eq::VectorElementComparisonFailure::y","value":"T","parent":{"krate":0,"index":1023},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1028},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\macros\\matrix_eq.rs","byte_start":11479,"byte_end":11484,"line_start":129,"line_end":129,"column_start":9,"column_end":14},"name":"error","qualname":"::macros::matrix_eq::VectorElementComparisonFailure::error","value":"E","parent":{"krate":0,"index":1023},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1029},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\macros\\matrix_eq.rs","byte_start":11497,"byte_end":11502,"line_start":130,"line_end":130,"column_start":9,"column_end":14},"name":"index","qualname":"::macros::matrix_eq::VectorElementComparisonFailure::index","value":"usize","parent":{"krate":0,"index":1023},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1054},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\macros\\matrix_eq.rs","byte_start":12281,"byte_end":12286,"line_start":154,"line_end":154,"column_start":5,"column_end":10},"name":"Match","qualname":"::macros::matrix_eq::VectorComparisonResult::Match","value":"VectorComparisonResult::Match","parent":{"krate":0,"index":1050},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":1056},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\macros\\matrix_eq.rs","byte_start":12292,"byte_end":12312,"line_start":155,"line_end":155,"column_start":5,"column_end":25},"name":"MismatchedDimensions","qualname":"::macros::matrix_eq::VectorComparisonResult::MismatchedDimensions","value":"VectorComparisonResult::MismatchedDimensions { dim_x, dim_y }","parent":{"krate":0,"index":1050},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":1059},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\macros\\matrix_eq.rs","byte_start":12369,"byte_end":12387,"line_start":159,"line_end":159,"column_start":5,"column_end":23},"name":"MismatchedElements","qualname":"::macros::matrix_eq::VectorComparisonResult::MismatchedElements","value":"VectorComparisonResult::MismatchedElements { comparator, mismatches }","parent":{"krate":0,"index":1050},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1050},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\macros\\matrix_eq.rs","byte_start":12151,"byte_end":12173,"line_start":150,"line_end":150,"column_start":10,"column_end":32},"name":"VectorComparisonResult","qualname":"::macros::matrix_eq::VectorComparisonResult","value":"pub enum VectorComparisonResult<T, C, E> where T: Copy,\n         C: ElementwiseComparator<T, E>, E: ComparisonFailure {\n    Match,\n    MismatchedDimensions {\n        dim_x: usize,\n        dim_y: usize,\n    },\n    MismatchedElements {\n        comparator: C,\n        mismatches: Vec<VectorElementComparisonFailure<T, E>>,\n    },\n}","parent":null,"children":[{"krate":0,"index":1054},{"krate":0,"index":1056},{"krate":0,"index":1059}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":41},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\macros\\matrix_eq.rs","byte_start":12631,"byte_end":12644,"line_start":167,"line_end":167,"column_start":12,"column_end":25},"name":"panic_message","qualname":"<VectorComparisonResult<T, C, E>>::panic_message","value":"pub fn panic_message(&Self) -> Option<String>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":42},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\macros\\matrix_eq.rs","byte_start":14506,"byte_end":14535,"line_start":218,"line_end":218,"column_start":8,"column_end":37},"name":"elementwise_matrix_comparison","qualname":"::macros::matrix_eq::elementwise_matrix_comparison","value":"pub fn elementwise_matrix_comparison<T, M, C, E>(&M, &M, C)\n-> MatrixComparisonResult<T, C, E> where M: BaseMatrix<T>, T: Copy,\nC: ElementwiseComparator<T, E>, E: ComparisonFailure","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":47},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\macros\\matrix_eq.rs","byte_start":15962,"byte_end":15991,"line_start":261,"line_end":261,"column_start":8,"column_end":37},"name":"elementwise_vector_comparison","qualname":"::macros::matrix_eq::elementwise_vector_comparison","value":"pub fn elementwise_vector_comparison<T, C, E>(&[T], &[T], C)\n-> VectorComparisonResult<T, C, E> where T: Copy,\nC: ElementwiseComparator<T, E>, E: ComparisonFailure","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1095},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\macros\\matrix_eq.rs","byte_start":17519,"byte_end":17548,"line_start":307,"line_end":307,"column_start":12,"column_end":41},"name":"AbsoluteElementwiseComparator","qualname":"::macros::matrix_eq::AbsoluteElementwiseComparator","value":"AbsoluteElementwiseComparator { tol }","parent":null,"children":[{"krate":0,"index":1097}],"decl_id":null,"docs":" The `abs` comparator used with [assert_matrix_eq!](../macro.assert_matrix_eq!.html).\n","sig":null,"attributes":[{"value":"/ The `abs` comparator used with [assert_matrix_eq!](../macro.assert_matrix_eq!.html).","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\macros\\matrix_eq.rs","byte_start":17378,"byte_end":17466,"line_start":305,"line_end":305,"column_start":1,"column_end":89}}]},{"kind":"Field","id":{"krate":0,"index":1097},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\macros\\matrix_eq.rs","byte_start":17625,"byte_end":17628,"line_start":309,"line_end":309,"column_start":9,"column_end":12},"name":"tol","qualname":"::macros::matrix_eq::AbsoluteElementwiseComparator::tol","value":"T","parent":{"krate":0,"index":1095},"children":[],"decl_id":null,"docs":" The maximum absolute difference tolerated (inclusive).\n","sig":null,"attributes":[{"value":"/ The maximum absolute difference tolerated (inclusive).","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\macros\\matrix_eq.rs","byte_start":17558,"byte_end":17616,"line_start":308,"line_end":308,"column_start":5,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":1112},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\macros\\matrix_eq.rs","byte_start":18826,"byte_end":18852,"line_start":349,"line_end":349,"column_start":12,"column_end":38},"name":"ExactElementwiseComparator","qualname":"::macros::matrix_eq::ExactElementwiseComparator","value":"","parent":null,"children":[],"decl_id":null,"docs":" The `exact` comparator used with [assert_matrix_eq!](../macro.assert_matrix_eq!.html).\n","sig":null,"attributes":[{"value":"/ The `exact` comparator used with [assert_matrix_eq!](../macro.assert_matrix_eq!.html).","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\macros\\matrix_eq.rs","byte_start":18683,"byte_end":18773,"line_start":347,"line_end":347,"column_start":1,"column_end":91}}]},{"kind":"Struct","id":{"krate":0,"index":1122},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\macros\\matrix_eq.rs","byte_start":18922,"byte_end":18932,"line_start":353,"line_end":353,"column_start":12,"column_end":22},"name":"ExactError","qualname":"::macros::matrix_eq::ExactError","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1132},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\macros\\matrix_eq.rs","byte_start":19554,"byte_end":19578,"line_start":377,"line_end":377,"column_start":12,"column_end":36},"name":"UlpElementwiseComparator","qualname":"::macros::matrix_eq::UlpElementwiseComparator","value":"UlpElementwiseComparator { tol }","parent":null,"children":[{"krate":0,"index":1133}],"decl_id":null,"docs":" The `ulp` comparator used with [assert_matrix_eq!](../macro.assert_matrix_eq!.html).\n","sig":null,"attributes":[{"value":"/ The `ulp` comparator used with [assert_matrix_eq!](../macro.assert_matrix_eq!.html).","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\macros\\matrix_eq.rs","byte_start":19413,"byte_end":19501,"line_start":375,"line_end":375,"column_start":1,"column_end":89}}]},{"kind":"Field","id":{"krate":0,"index":1133},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\macros\\matrix_eq.rs","byte_start":19656,"byte_end":19659,"line_start":379,"line_end":379,"column_start":9,"column_end":12},"name":"tol","qualname":"::macros::matrix_eq::UlpElementwiseComparator::tol","value":"u64","parent":{"krate":0,"index":1132},"children":[],"decl_id":null,"docs":" The maximum difference in ULP units tolerated (inclusive).\n","sig":null,"attributes":[{"value":"/ The maximum difference in ULP units tolerated (inclusive).","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\macros\\matrix_eq.rs","byte_start":19585,"byte_end":19647,"line_start":378,"line_end":378,"column_start":5,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":1143},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\macros\\matrix_eq.rs","byte_start":19735,"byte_end":19743,"line_start":384,"line_end":384,"column_start":12,"column_end":20},"name":"UlpError","qualname":"::macros::matrix_eq::UlpError","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1145},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\macros\\matrix_eq.rs","byte_start":19744,"byte_end":19772,"line_start":384,"line_end":384,"column_start":21,"column_end":49},"name":"0","qualname":"::macros::matrix_eq::UlpError::0","value":"ulp::UlpComparisonResult","parent":{"krate":0,"index":1143},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1155},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\macros\\matrix_eq.rs","byte_start":20860,"byte_end":20886,"line_start":418,"line_end":418,"column_start":12,"column_end":38},"name":"FloatElementwiseComparator","qualname":"::macros::matrix_eq::FloatElementwiseComparator","value":"FloatElementwiseComparator {  }","parent":null,"children":[{"krate":0,"index":1157},{"krate":0,"index":1158}],"decl_id":null,"docs":" The `float` comparator used with [assert_matrix_eq!](../macro.assert_matrix_eq!.html).\n","sig":null,"attributes":[{"value":"/ The `float` comparator used with [assert_matrix_eq!](../macro.assert_matrix_eq!.html).","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\macros\\matrix_eq.rs","byte_start":20717,"byte_end":20807,"line_start":416,"line_end":416,"column_start":1,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":73},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\macros\\matrix_eq.rs","byte_start":21079,"byte_end":21086,"line_start":426,"line_end":426,"column_start":12,"column_end":19},"name":"default","qualname":"<FloatElementwiseComparator<T>>::default","value":"pub fn default() -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":74},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\macros\\matrix_eq.rs","byte_start":21287,"byte_end":21290,"line_start":433,"line_end":433,"column_start":12,"column_end":15},"name":"eps","qualname":"<FloatElementwiseComparator<T>>::eps","value":"pub fn eps(Self, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":75},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\macros\\matrix_eq.rs","byte_start":21467,"byte_end":21470,"line_start":440,"line_end":440,"column_start":12,"column_end":15},"name":"ulp","qualname":"<FloatElementwiseComparator<T>>::ulp","value":"pub fn ulp(Self, u64) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":90},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"matrix","qualname":"::matrix","value":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","parent":null,"children":[{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":2768},{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":249},{"krate":0,"index":332},{"krate":0,"index":373},{"krate":0,"index":441},{"krate":0,"index":592},{"krate":0,"index":593},{"krate":0,"index":594},{"krate":0,"index":2476},{"krate":0,"index":2484},{"krate":0,"index":2482},{"krate":0,"index":2481},{"krate":0,"index":2486},{"krate":0,"index":2506},{"krate":0,"index":2500},{"krate":0,"index":2502},{"krate":0,"index":2495},{"krate":0,"index":2497},{"krate":0,"index":2491},{"krate":0,"index":2509},{"krate":0,"index":2524},{"krate":0,"index":2520},{"krate":0,"index":2517},{"krate":0,"index":2528},{"krate":0,"index":2536},{"krate":0,"index":2540},{"krate":0,"index":2549},{"krate":0,"index":2553},{"krate":0,"index":2562},{"krate":0,"index":2566},{"krate":0,"index":2579},{"krate":0,"index":2575},{"krate":0,"index":2576},{"krate":0,"index":2581},{"krate":0,"index":2589},{"krate":0,"index":2594},{"krate":0,"index":2602},{"krate":0,"index":595},{"krate":0,"index":604},{"krate":0,"index":607},{"krate":0,"index":611},{"krate":0,"index":614},{"krate":0,"index":617},{"krate":0,"index":621},{"krate":0,"index":626},{"krate":0,"index":629},{"krate":0,"index":633},{"krate":0,"index":637},{"krate":0,"index":642},{"krate":0,"index":645},{"krate":0,"index":648}],"decl_id":null,"docs":" The matrix module.","sig":null,"attributes":[{"value":"/ The matrix module.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":61992,"byte_end":62014,"line_start":1,"line_end":1,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":62015,"byte_end":62018,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Currently contains all code","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":62019,"byte_end":62050,"line_start":3,"line_end":3,"column_start":1,"column_end":32}},{"value":"/ relating to the matrix linear algebra struct.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":62051,"byte_end":62100,"line_start":4,"line_end":4,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":62101,"byte_end":62104,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ Most of the logic for manipulating matrices is generically implemented","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":62105,"byte_end":62179,"line_start":6,"line_end":6,"column_start":1,"column_end":75}},{"value":"/ via `BaseMatrix` and `BaseMatrixMut` trait.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":62180,"byte_end":62227,"line_start":7,"line_end":7,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":118},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\qr.rs","byte_start":95473,"byte_end":95482,"line_start":28,"line_end":28,"column_start":12,"column_end":21},"name":"qr_decomp","qualname":"<Matrix<T>>::qr_decomp","value":"pub fn qr_decomp(Self) -> Result<(Matrix<T>, Matrix<T>), Error>","parent":null,"children":[],"decl_id":null,"docs":" Compute the QR decomposition of the matrix.","sig":null,"attributes":[{"value":"/ Compute the QR decomposition of the matrix.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\qr.rs","byte_start":95056,"byte_end":95103,"line_start":11,"line_end":11,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\qr.rs","byte_start":95108,"byte_end":95111,"line_start":12,"line_end":12,"column_start":5,"column_end":8}},{"value":"/ Returns the tuple (Q,R).","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\qr.rs","byte_start":95116,"byte_end":95144,"line_start":13,"line_end":13,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\qr.rs","byte_start":95149,"byte_end":95152,"line_start":14,"line_end":14,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\qr.rs","byte_start":95157,"byte_end":95171,"line_start":15,"line_end":15,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\qr.rs","byte_start":95176,"byte_end":95179,"line_start":16,"line_end":16,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\qr.rs","byte_start":95184,"byte_end":95191,"line_start":17,"line_end":17,"column_start":5,"column_end":12}},{"value":"/ use rulinalg::matrix::Matrix;","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\qr.rs","byte_start":95196,"byte_end":95229,"line_start":18,"line_end":18,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\qr.rs","byte_start":95234,"byte_end":95237,"line_start":19,"line_end":19,"column_start":5,"column_end":8}},{"value":"/ let m = Matrix::new(3,3, vec![1.0,0.5,0.5,0.5,1.0,0.5,0.5,0.5,1.0]);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\qr.rs","byte_start":95242,"byte_end":95314,"line_start":20,"line_end":20,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\qr.rs","byte_start":95319,"byte_end":95322,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ let (q, r) = m.qr_decomp().unwrap();","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\qr.rs","byte_start":95327,"byte_end":95367,"line_start":22,"line_end":22,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\qr.rs","byte_start":95372,"byte_end":95379,"line_start":23,"line_end":23,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\qr.rs","byte_start":95384,"byte_end":95387,"line_start":24,"line_end":24,"column_start":5,"column_end":8}},{"value":"/ # Failures","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\qr.rs","byte_start":95392,"byte_end":95406,"line_start":25,"line_end":25,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\qr.rs","byte_start":95411,"byte_end":95414,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ - Cannot compute the QR decomposition.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\qr.rs","byte_start":95419,"byte_end":95461,"line_start":27,"line_end":27,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":130},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\cholesky.rs","byte_start":97798,"byte_end":97806,"line_start":32,"line_end":32,"column_start":12,"column_end":20},"name":"cholesky","qualname":"<Matrix<T>>::cholesky","value":"pub fn cholesky(&Self) -> Result<Matrix<T>, Error>","parent":null,"children":[],"decl_id":null,"docs":" Cholesky decomposition","sig":null,"attributes":[{"value":"/ Cholesky decomposition","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\cholesky.rs","byte_start":97311,"byte_end":97337,"line_start":11,"line_end":11,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\cholesky.rs","byte_start":97342,"byte_end":97345,"line_start":12,"line_end":12,"column_start":5,"column_end":8}},{"value":"/ Returns the cholesky decomposition of a positive definite matrix.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\cholesky.rs","byte_start":97350,"byte_end":97419,"line_start":13,"line_end":13,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\cholesky.rs","byte_start":97424,"byte_end":97427,"line_start":14,"line_end":14,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\cholesky.rs","byte_start":97432,"byte_end":97446,"line_start":15,"line_end":15,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\cholesky.rs","byte_start":97451,"byte_end":97454,"line_start":16,"line_end":16,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\cholesky.rs","byte_start":97459,"byte_end":97466,"line_start":17,"line_end":17,"column_start":5,"column_end":12}},{"value":"/ use rulinalg::matrix::Matrix;","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\cholesky.rs","byte_start":97471,"byte_end":97504,"line_start":18,"line_end":18,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\cholesky.rs","byte_start":97509,"byte_end":97512,"line_start":19,"line_end":19,"column_start":5,"column_end":8}},{"value":"/ let m = Matrix::new(3,3, vec![1.0,0.5,0.5,0.5,1.0,0.5,0.5,0.5,1.0]);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\cholesky.rs","byte_start":97517,"byte_end":97589,"line_start":20,"line_end":20,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\cholesky.rs","byte_start":97594,"byte_end":97597,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ let l = m.cholesky();","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\cholesky.rs","byte_start":97602,"byte_end":97627,"line_start":22,"line_end":22,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\cholesky.rs","byte_start":97632,"byte_end":97639,"line_start":23,"line_end":23,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\cholesky.rs","byte_start":97644,"byte_end":97647,"line_start":24,"line_end":24,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\cholesky.rs","byte_start":97652,"byte_end":97664,"line_start":25,"line_end":25,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\cholesky.rs","byte_start":97669,"byte_end":97672,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ - The matrix is not square.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\cholesky.rs","byte_start":97677,"byte_end":97708,"line_start":27,"line_end":27,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\cholesky.rs","byte_start":97713,"byte_end":97716,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ # Failures","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\cholesky.rs","byte_start":97721,"byte_end":97735,"line_start":29,"line_end":29,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\cholesky.rs","byte_start":97740,"byte_end":97743,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ - Matrix is not positive definite.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\cholesky.rs","byte_start":97748,"byte_end":97786,"line_start":31,"line_end":31,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":146},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\bidiagonal.rs","byte_start":99902,"byte_end":99919,"line_start":23,"line_end":23,"column_start":12,"column_end":29},"name":"bidiagonal_decomp","qualname":"<Matrix<T>>::bidiagonal_decomp","value":"pub fn bidiagonal_decomp(Self)\n-> Result<(Matrix<T>, Matrix<T>, Matrix<T>), Error>","parent":null,"children":[],"decl_id":null,"docs":" Converts matrix to bidiagonal form","sig":null,"attributes":[{"value":"/ Converts matrix to bidiagonal form","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\bidiagonal.rs","byte_start":99486,"byte_end":99524,"line_start":12,"line_end":12,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\bidiagonal.rs","byte_start":99529,"byte_end":99532,"line_start":13,"line_end":13,"column_start":5,"column_end":8}},{"value":"/ Returns (B, U, V), where B is bidiagonal and `self = U B V_T`.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\bidiagonal.rs","byte_start":99537,"byte_end":99603,"line_start":14,"line_end":14,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\bidiagonal.rs","byte_start":99608,"byte_end":99611,"line_start":15,"line_end":15,"column_start":5,"column_end":8}},{"value":"/ Note that if `self` has `self.rows() > self.cols()` the matrix will","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\bidiagonal.rs","byte_start":99616,"byte_end":99687,"line_start":16,"line_end":16,"column_start":5,"column_end":76}},{"value":"/ be transposed and then reduced - this will lead to a sub-diagonal instead","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\bidiagonal.rs","byte_start":99692,"byte_end":99769,"line_start":17,"line_end":17,"column_start":5,"column_end":82}},{"value":"/ of super-diagonal.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\bidiagonal.rs","byte_start":99774,"byte_end":99796,"line_start":18,"line_end":18,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\bidiagonal.rs","byte_start":99801,"byte_end":99804,"line_start":19,"line_end":19,"column_start":5,"column_end":8}},{"value":"/ # Failures","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\bidiagonal.rs","byte_start":99809,"byte_end":99823,"line_start":20,"line_end":20,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\bidiagonal.rs","byte_start":99828,"byte_end":99831,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ - The matrix cannot be reduced to bidiagonal form.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\bidiagonal.rs","byte_start":99836,"byte_end":99890,"line_start":22,"line_end":22,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":171},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\svd.rs","byte_start":109940,"byte_end":109943,"line_start":126,"line_end":126,"column_start":12,"column_end":15},"name":"svd","qualname":"<Matrix<T>>::svd","value":"pub fn svd(Self) -> Result<(Matrix<T>, Matrix<T>, Matrix<T>), Error>","parent":null,"children":[],"decl_id":null,"docs":" Singular Value Decomposition","sig":null,"attributes":[{"value":"/ Singular Value Decomposition","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\svd.rs","byte_start":108789,"byte_end":108821,"line_start":96,"line_end":96,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\svd.rs","byte_start":108826,"byte_end":108829,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ Computes the SVD using the Golub-Reinsch algorithm.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\svd.rs","byte_start":108834,"byte_end":108889,"line_start":98,"line_end":98,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\svd.rs","byte_start":108894,"byte_end":108897,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ Returns Σ, U, V, such that `self` = U Σ V<sup>T</sup>. Σ is a diagonal matrix whose elements","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\svd.rs","byte_start":108902,"byte_end":109001,"line_start":100,"line_end":100,"column_start":5,"column_end":101}},{"value":"/ correspond to the non-negative singular values of the matrix. The singular values are ordered in","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\svd.rs","byte_start":109006,"byte_end":109106,"line_start":101,"line_end":101,"column_start":5,"column_end":105}},{"value":"/ non-increasing order. U and V have orthonormal columns, and each column represents the","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\svd.rs","byte_start":109111,"byte_end":109201,"line_start":102,"line_end":102,"column_start":5,"column_end":95}},{"value":"/ left and right singular vectors for the corresponding singular value in Σ, respectively.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\svd.rs","byte_start":109206,"byte_end":109299,"line_start":103,"line_end":103,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\svd.rs","byte_start":109304,"byte_end":109307,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ If `self` has M rows and N columns, the dimensions of the returned matrices","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\svd.rs","byte_start":109312,"byte_end":109391,"line_start":105,"line_end":105,"column_start":5,"column_end":84}},{"value":"/ are as follows.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\svd.rs","byte_start":109396,"byte_end":109415,"line_start":106,"line_end":106,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\svd.rs","byte_start":109420,"byte_end":109423,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ If M >= N:","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\svd.rs","byte_start":109428,"byte_end":109442,"line_start":108,"line_end":108,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\svd.rs","byte_start":109447,"byte_end":109450,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ - `Σ`: N x N","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\svd.rs","byte_start":109455,"byte_end":109472,"line_start":110,"line_end":110,"column_start":5,"column_end":21}},{"value":"/ - `U`: M x N","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\svd.rs","byte_start":109477,"byte_end":109493,"line_start":111,"line_end":111,"column_start":5,"column_end":21}},{"value":"/ - `V`: N x N","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\svd.rs","byte_start":109498,"byte_end":109514,"line_start":112,"line_end":112,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\svd.rs","byte_start":109519,"byte_end":109522,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ If M < N:","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\svd.rs","byte_start":109527,"byte_end":109540,"line_start":114,"line_end":114,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\svd.rs","byte_start":109545,"byte_end":109548,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ - `Σ`: M x M","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\svd.rs","byte_start":109553,"byte_end":109570,"line_start":116,"line_end":116,"column_start":5,"column_end":21}},{"value":"/ - `U`: M x M","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\svd.rs","byte_start":109575,"byte_end":109591,"line_start":117,"line_end":117,"column_start":5,"column_end":21}},{"value":"/ - `V`: N x M","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\svd.rs","byte_start":109596,"byte_end":109612,"line_start":118,"line_end":118,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\svd.rs","byte_start":109617,"byte_end":109620,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ Note: This version of the SVD is sometimes referred to as the 'economy SVD'.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\svd.rs","byte_start":109625,"byte_end":109705,"line_start":120,"line_end":120,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\svd.rs","byte_start":109710,"byte_end":109713,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ # Failures","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\svd.rs","byte_start":109718,"byte_end":109732,"line_start":122,"line_end":122,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\svd.rs","byte_start":109737,"byte_end":109740,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ This function may fail in some cases. The current decomposition whilst being","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\svd.rs","byte_start":109745,"byte_end":109825,"line_start":124,"line_end":124,"column_start":5,"column_end":85}},{"value":"/ efficient is fairly basic. Hopefully the algorithm can be made not to fail in the near future.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\svd.rs","byte_start":109830,"byte_end":109928,"line_start":125,"line_end":125,"column_start":5,"column_end":103}}]},{"kind":"Method","id":{"krate":0,"index":190},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\hessenberg.rs","byte_start":124276,"byte_end":124292,"line_start":32,"line_end":32,"column_start":12,"column_end":28},"name":"upper_hessenberg","qualname":"<Matrix<T>>::upper_hessenberg","value":"pub fn upper_hessenberg(Self) -> Result<Matrix<T>, Error>","parent":null,"children":[],"decl_id":null,"docs":" Returns H, where H is the upper hessenberg form.","sig":null,"attributes":[{"value":"/ Returns H, where H is the upper hessenberg form.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\hessenberg.rs","byte_start":123614,"byte_end":123666,"line_start":9,"line_end":9,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\hessenberg.rs","byte_start":123671,"byte_end":123674,"line_start":10,"line_end":10,"column_start":5,"column_end":8}},{"value":"/ If the transformation matrix is also required, you should","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\hessenberg.rs","byte_start":123679,"byte_end":123740,"line_start":11,"line_end":11,"column_start":5,"column_end":66}},{"value":"/ use `upper_hess_decomp`.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\hessenberg.rs","byte_start":123745,"byte_end":123773,"line_start":12,"line_end":12,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\hessenberg.rs","byte_start":123778,"byte_end":123781,"line_start":13,"line_end":13,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\hessenberg.rs","byte_start":123786,"byte_end":123800,"line_start":14,"line_end":14,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\hessenberg.rs","byte_start":123805,"byte_end":123808,"line_start":15,"line_end":15,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\hessenberg.rs","byte_start":123813,"byte_end":123820,"line_start":16,"line_end":16,"column_start":5,"column_end":12}},{"value":"/ use rulinalg::matrix::Matrix;","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\hessenberg.rs","byte_start":123825,"byte_end":123858,"line_start":17,"line_end":17,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\hessenberg.rs","byte_start":123863,"byte_end":123866,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ let a = Matrix::new(4,4,vec![2.,0.,1.,1.,2.,0.,1.,2.,1.,2.,0.,0.,2.,0.,1.,1.]);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\hessenberg.rs","byte_start":123871,"byte_end":123954,"line_start":19,"line_end":19,"column_start":5,"column_end":88}},{"value":"/ let h = a.upper_hessenberg();","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\hessenberg.rs","byte_start":123959,"byte_end":123992,"line_start":20,"line_end":20,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\hessenberg.rs","byte_start":123997,"byte_end":124000,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", h.expect(\"Could not get upper Hessenberg form.\").data());","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\hessenberg.rs","byte_start":124005,"byte_end":124083,"line_start":22,"line_end":22,"column_start":5,"column_end":83}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\hessenberg.rs","byte_start":124088,"byte_end":124095,"line_start":23,"line_end":23,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\hessenberg.rs","byte_start":124100,"byte_end":124103,"line_start":24,"line_end":24,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\hessenberg.rs","byte_start":124108,"byte_end":124120,"line_start":25,"line_end":25,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\hessenberg.rs","byte_start":124125,"byte_end":124128,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ - The matrix is not square.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\hessenberg.rs","byte_start":124133,"byte_end":124164,"line_start":27,"line_end":27,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\hessenberg.rs","byte_start":124169,"byte_end":124172,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ # Failures","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\hessenberg.rs","byte_start":124177,"byte_end":124191,"line_start":29,"line_end":29,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\hessenberg.rs","byte_start":124196,"byte_end":124199,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ - The matrix cannot be reduced to upper hessenberg form.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\hessenberg.rs","byte_start":124204,"byte_end":124264,"line_start":31,"line_end":31,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":191},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\hessenberg.rs","byte_start":126834,"byte_end":126851,"line_start":106,"line_end":106,"column_start":12,"column_end":29},"name":"upper_hess_decomp","qualname":"<Matrix<T>>::upper_hess_decomp","value":"pub fn upper_hess_decomp(Self) -> Result<(Matrix<T>, Matrix<T>), Error>","parent":null,"children":[],"decl_id":null,"docs":" Returns (U,H), where H is the upper hessenberg form\n and U is the unitary transform matrix.","sig":null,"attributes":[{"value":"/ Returns (U,H), where H is the upper hessenberg form","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\hessenberg.rs","byte_start":126009,"byte_end":126064,"line_start":80,"line_end":80,"column_start":5,"column_end":60}},{"value":"/ and U is the unitary transform matrix.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\hessenberg.rs","byte_start":126069,"byte_end":126111,"line_start":81,"line_end":81,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\hessenberg.rs","byte_start":126116,"byte_end":126119,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ Note: The current transform matrix seems broken...","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\hessenberg.rs","byte_start":126124,"byte_end":126178,"line_start":83,"line_end":83,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\hessenberg.rs","byte_start":126183,"byte_end":126186,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\hessenberg.rs","byte_start":126191,"byte_end":126205,"line_start":85,"line_end":85,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\hessenberg.rs","byte_start":126210,"byte_end":126213,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\hessenberg.rs","byte_start":126218,"byte_end":126225,"line_start":87,"line_end":87,"column_start":5,"column_end":12}},{"value":"/ use rulinalg::matrix::{Matrix, BaseMatrix};","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\hessenberg.rs","byte_start":126230,"byte_end":126277,"line_start":88,"line_end":88,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\hessenberg.rs","byte_start":126282,"byte_end":126285,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ let a = Matrix::new(3,3,vec![1.,2.,3.,4.,5.,6.,7.,8.,9.]);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\hessenberg.rs","byte_start":126290,"byte_end":126352,"line_start":90,"line_end":90,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\hessenberg.rs","byte_start":126357,"byte_end":126360,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ // u is the transform, h is the upper hessenberg form.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\hessenberg.rs","byte_start":126365,"byte_end":126423,"line_start":92,"line_end":92,"column_start":5,"column_end":63}},{"value":"/ let (u,h) = a.clone().upper_hess_decomp().expect(\"This matrix should decompose!\");","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\hessenberg.rs","byte_start":126428,"byte_end":126514,"line_start":93,"line_end":93,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\hessenberg.rs","byte_start":126519,"byte_end":126522,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ println!(\"The hess : {:?}\", h.data());","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\hessenberg.rs","byte_start":126527,"byte_end":126569,"line_start":95,"line_end":95,"column_start":5,"column_end":47}},{"value":"/ println!(\"Manual hess : {:?}\", (u.transpose() * a * u).data());","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\hessenberg.rs","byte_start":126574,"byte_end":126641,"line_start":96,"line_end":96,"column_start":5,"column_end":72}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\hessenberg.rs","byte_start":126646,"byte_end":126653,"line_start":97,"line_end":97,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\hessenberg.rs","byte_start":126658,"byte_end":126661,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\hessenberg.rs","byte_start":126666,"byte_end":126678,"line_start":99,"line_end":99,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\hessenberg.rs","byte_start":126683,"byte_end":126686,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ - The matrix is not square.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\hessenberg.rs","byte_start":126691,"byte_end":126722,"line_start":101,"line_end":101,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\hessenberg.rs","byte_start":126727,"byte_end":126730,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ # Failures","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\hessenberg.rs","byte_start":126735,"byte_end":126749,"line_start":103,"line_end":103,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\hessenberg.rs","byte_start":126754,"byte_end":126757,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ - The matrix cannot be reduced to upper hessenberg form.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\hessenberg.rs","byte_start":126762,"byte_end":126822,"line_start":105,"line_end":105,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":203},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\lu.rs","byte_start":129185,"byte_end":129195,"line_start":33,"line_end":33,"column_start":12,"column_end":22},"name":"lup_decomp","qualname":"<Matrix<T>>::lup_decomp","value":"pub fn lup_decomp(&Self) -> Result<(Matrix<T>, Matrix<T>, Matrix<T>), Error>","parent":null,"children":[],"decl_id":null,"docs":" Computes L, U, and P for LUP decomposition.","sig":null,"attributes":[{"value":"/ Computes L, U, and P for LUP decomposition.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\lu.rs","byte_start":128586,"byte_end":128633,"line_start":10,"line_end":10,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\lu.rs","byte_start":128638,"byte_end":128641,"line_start":11,"line_end":11,"column_start":5,"column_end":8}},{"value":"/ Returns L,U, and P respectively.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\lu.rs","byte_start":128646,"byte_end":128682,"line_start":12,"line_end":12,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\lu.rs","byte_start":128687,"byte_end":128690,"line_start":13,"line_end":13,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\lu.rs","byte_start":128695,"byte_end":128709,"line_start":14,"line_end":14,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\lu.rs","byte_start":128714,"byte_end":128717,"line_start":15,"line_end":15,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\lu.rs","byte_start":128722,"byte_end":128729,"line_start":16,"line_end":16,"column_start":5,"column_end":12}},{"value":"/ use rulinalg::matrix::Matrix;","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\lu.rs","byte_start":128734,"byte_end":128767,"line_start":17,"line_end":17,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\lu.rs","byte_start":128772,"byte_end":128775,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ let a = Matrix::new(3,3, vec![1.0,2.0,0.0,","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\lu.rs","byte_start":128780,"byte_end":128826,"line_start":19,"line_end":19,"column_start":5,"column_end":51}},{"value":"/                               0.0,3.0,4.0,","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\lu.rs","byte_start":128831,"byte_end":128877,"line_start":20,"line_end":20,"column_start":5,"column_end":51}},{"value":"/                               5.0, 1.0, 2.0]);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\lu.rs","byte_start":128882,"byte_end":128932,"line_start":21,"line_end":21,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\lu.rs","byte_start":128937,"byte_end":128940,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ let (l,u,p) = a.lup_decomp().expect(\"This matrix should decompose!\");","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\lu.rs","byte_start":128945,"byte_end":129018,"line_start":23,"line_end":23,"column_start":5,"column_end":78}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\lu.rs","byte_start":129023,"byte_end":129030,"line_start":24,"line_end":24,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\lu.rs","byte_start":129035,"byte_end":129038,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\lu.rs","byte_start":129043,"byte_end":129055,"line_start":26,"line_end":26,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\lu.rs","byte_start":129060,"byte_end":129063,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ - Matrix is not square.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\lu.rs","byte_start":129068,"byte_end":129095,"line_start":28,"line_end":28,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\lu.rs","byte_start":129100,"byte_end":129103,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ # Failures","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\lu.rs","byte_start":129108,"byte_end":129122,"line_start":30,"line_end":30,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\lu.rs","byte_start":129127,"byte_end":129130,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ - Matrix cannot be LUP decomposed.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\lu.rs","byte_start":129135,"byte_end":129173,"line_start":32,"line_end":32,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":227},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\eigen.rs","byte_start":137624,"byte_end":137635,"line_start":186,"line_end":186,"column_start":12,"column_end":23},"name":"eigenvalues","qualname":"<Matrix<T>>::eigenvalues","value":"pub fn eigenvalues(&Self) -> Result<Vec<T>, Error>","parent":null,"children":[],"decl_id":null,"docs":" Eigenvalues of a square matrix.","sig":null,"attributes":[{"value":"/ Eigenvalues of a square matrix.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\eigen.rs","byte_start":137077,"byte_end":137112,"line_start":165,"line_end":165,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\eigen.rs","byte_start":137117,"byte_end":137120,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ Returns a Vec of eigenvalues.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\eigen.rs","byte_start":137125,"byte_end":137158,"line_start":167,"line_end":167,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\eigen.rs","byte_start":137163,"byte_end":137166,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\eigen.rs","byte_start":137171,"byte_end":137185,"line_start":169,"line_end":169,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\eigen.rs","byte_start":137190,"byte_end":137193,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\eigen.rs","byte_start":137198,"byte_end":137205,"line_start":171,"line_end":171,"column_start":5,"column_end":12}},{"value":"/ use rulinalg::matrix::Matrix;","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\eigen.rs","byte_start":137210,"byte_end":137243,"line_start":172,"line_end":172,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\eigen.rs","byte_start":137248,"byte_end":137251,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ let a = Matrix::new(4,4, (1..17).map(|v| v as f64).collect::<Vec<f64>>());","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\eigen.rs","byte_start":137256,"byte_end":137334,"line_start":174,"line_end":174,"column_start":5,"column_end":83}},{"value":"/ let e = a.eigenvalues().expect(\"We should be able to compute these eigenvalues!\");","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\eigen.rs","byte_start":137339,"byte_end":137425,"line_start":175,"line_end":175,"column_start":5,"column_end":91}},{"value":"/ println!(\"{:?}\", e);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\eigen.rs","byte_start":137430,"byte_end":137454,"line_start":176,"line_end":176,"column_start":5,"column_end":29}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\eigen.rs","byte_start":137459,"byte_end":137466,"line_start":177,"line_end":177,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\eigen.rs","byte_start":137471,"byte_end":137474,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\eigen.rs","byte_start":137479,"byte_end":137491,"line_start":179,"line_end":179,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\eigen.rs","byte_start":137496,"byte_end":137499,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ - The matrix is not square.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\eigen.rs","byte_start":137504,"byte_end":137535,"line_start":181,"line_end":181,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\eigen.rs","byte_start":137540,"byte_end":137543,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ # Failures","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\eigen.rs","byte_start":137548,"byte_end":137562,"line_start":183,"line_end":183,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\eigen.rs","byte_start":137567,"byte_end":137570,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ - Eigenvalues cannot be computed.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\eigen.rs","byte_start":137575,"byte_end":137612,"line_start":185,"line_end":185,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":230},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\eigen.rs","byte_start":144007,"byte_end":144018,"line_start":349,"line_end":349,"column_start":12,"column_end":23},"name":"eigendecomp","qualname":"<Matrix<T>>::eigendecomp","value":"pub fn eigendecomp(&Self) -> Result<(Vec<T>, Matrix<T>), Error>","parent":null,"children":[],"decl_id":null,"docs":" Eigendecomposition of a square matrix.","sig":null,"attributes":[{"value":"/ Eigendecomposition of a square matrix.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\eigen.rs","byte_start":143261,"byte_end":143303,"line_start":324,"line_end":324,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\eigen.rs","byte_start":143308,"byte_end":143311,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ Returns a Vec of eigenvalues, and a matrix with eigenvectors as the columns.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\eigen.rs","byte_start":143316,"byte_end":143396,"line_start":326,"line_end":326,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\eigen.rs","byte_start":143401,"byte_end":143404,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ The eigenvectors are only gauranteed to be correct if the matrix is real-symmetric.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\eigen.rs","byte_start":143409,"byte_end":143496,"line_start":328,"line_end":328,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\eigen.rs","byte_start":143501,"byte_end":143504,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\eigen.rs","byte_start":143509,"byte_end":143523,"line_start":330,"line_end":330,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\eigen.rs","byte_start":143528,"byte_end":143531,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\eigen.rs","byte_start":143536,"byte_end":143543,"line_start":332,"line_end":332,"column_start":5,"column_end":12}},{"value":"/ use rulinalg::matrix::Matrix;","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\eigen.rs","byte_start":143548,"byte_end":143581,"line_start":333,"line_end":333,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\eigen.rs","byte_start":143586,"byte_end":143589,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ let a = Matrix::new(3,3,vec![3.,2.,4.,2.,0.,2.,4.,2.,3.]);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\eigen.rs","byte_start":143594,"byte_end":143656,"line_start":335,"line_end":335,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\eigen.rs","byte_start":143661,"byte_end":143664,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ let (e, m) = a.eigendecomp().expect(\"We should be able to compute this eigendecomp!\");","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\eigen.rs","byte_start":143669,"byte_end":143759,"line_start":337,"line_end":337,"column_start":5,"column_end":95}},{"value":"/ println!(\"{:?}\", e);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\eigen.rs","byte_start":143764,"byte_end":143788,"line_start":338,"line_end":338,"column_start":5,"column_end":29}},{"value":"/ println!(\"{:?}\", m.data());","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\eigen.rs","byte_start":143793,"byte_end":143824,"line_start":339,"line_end":339,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\eigen.rs","byte_start":143829,"byte_end":143836,"line_start":340,"line_end":340,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\eigen.rs","byte_start":143841,"byte_end":143844,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\eigen.rs","byte_start":143849,"byte_end":143861,"line_start":342,"line_end":342,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\eigen.rs","byte_start":143866,"byte_end":143869,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ - The matrix is not square.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\eigen.rs","byte_start":143874,"byte_end":143905,"line_start":344,"line_end":344,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\eigen.rs","byte_start":143910,"byte_end":143913,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ # Failures","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\eigen.rs","byte_start":143918,"byte_end":143932,"line_start":346,"line_end":346,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\eigen.rs","byte_start":143937,"byte_end":143940,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ - The eigen decomposition can not be computed.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\eigen.rs","byte_start":143945,"byte_end":143995,"line_start":348,"line_end":348,"column_start":5,"column_end":55}}]},{"kind":"Mod","id":{"krate":0,"index":441},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"slice","qualname":"::matrix::slice","value":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","parent":null,"children":[{"krate":0,"index":442},{"krate":0,"index":443},{"krate":0,"index":444},{"krate":0,"index":445},{"krate":0,"index":446},{"krate":0,"index":447},{"krate":0,"index":448},{"krate":0,"index":449},{"krate":0,"index":450},{"krate":0,"index":451},{"krate":0,"index":452},{"krate":0,"index":453},{"krate":0,"index":454},{"krate":0,"index":455},{"krate":0,"index":456},{"krate":0,"index":457},{"krate":0,"index":458},{"krate":0,"index":459},{"krate":0,"index":460},{"krate":0,"index":461},{"krate":0,"index":462},{"krate":0,"index":463},{"krate":0,"index":464},{"krate":0,"index":3052},{"krate":0,"index":465},{"krate":0,"index":466},{"krate":0,"index":467},{"krate":0,"index":468},{"krate":0,"index":469},{"krate":0,"index":470},{"krate":0,"index":471},{"krate":0,"index":472},{"krate":0,"index":519},{"krate":0,"index":541},{"krate":0,"index":554},{"krate":0,"index":561},{"krate":0,"index":568},{"krate":0,"index":571},{"krate":0,"index":575},{"krate":0,"index":583},{"krate":0,"index":2438},{"krate":0,"index":2448},{"krate":0,"index":2452},{"krate":0,"index":2462},{"krate":0,"index":2466},{"krate":0,"index":2471}],"decl_id":null,"docs":" Traits for matrices operations.","sig":null,"attributes":[{"value":"/ Traits for matrices operations.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":224240,"byte_end":224275,"line_start":1,"line_end":1,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":224276,"byte_end":224279,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ These traits defines operations for structs representing matrices arranged in row-major order.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":224280,"byte_end":224378,"line_start":3,"line_end":3,"column_start":1,"column_end":99}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":224379,"byte_end":224382,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Implementations are provided for","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":224383,"byte_end":224419,"line_start":5,"line_end":5,"column_start":1,"column_end":37}},{"value":"/ - `Matrix`: an owned matrix","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":224420,"byte_end":224451,"line_start":6,"line_end":6,"column_start":1,"column_end":32}},{"value":"/ - `MatrixSlice`: a borrowed immutable block of `Matrix`","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":224452,"byte_end":224511,"line_start":7,"line_end":7,"column_start":1,"column_end":60}},{"value":"/ - `MatrixSliceMut`: a borrowed mutable block of `Matrix`","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":224512,"byte_end":224572,"line_start":8,"line_end":8,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":224573,"byte_end":224576,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":224577,"byte_end":224584,"line_start":10,"line_end":10,"column_start":1,"column_end":8}},{"value":"/ use rulinalg::matrix::{Matrix, BaseMatrix};","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":224585,"byte_end":224632,"line_start":11,"line_end":11,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":224633,"byte_end":224636,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ let a = Matrix::new(3,3, (0..9).collect::<Vec<usize>>());","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":224637,"byte_end":224698,"line_start":13,"line_end":13,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":224699,"byte_end":224702,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ // Manually create our slice - [[4,5],[7,8]].","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":224703,"byte_end":224752,"line_start":15,"line_end":15,"column_start":1,"column_end":50}},{"value":"/ let mat_slice = a.sub_slice([0,1], 3, 2);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":224753,"byte_end":224798,"line_start":16,"line_end":16,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":224799,"byte_end":224802,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ // We can perform arithmetic with mixing owned and borrowed versions","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":224803,"byte_end":224875,"line_start":18,"line_end":18,"column_start":1,"column_end":73}},{"value":"/ let _new_mat = &mat_slice.transpose() * &a;","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":224876,"byte_end":224923,"line_start":19,"line_end":19,"column_start":1,"column_end":48}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":224924,"byte_end":224931,"line_start":20,"line_end":20,"column_start":1,"column_end":8}}]},{"kind":"Trait","id":{"krate":0,"index":472},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":225380,"byte_end":225390,"line_start":39,"line_end":39,"column_start":11,"column_end":21},"name":"BaseMatrix","qualname":"::matrix::slice::BaseMatrix","value":"BaseMatrix<T>: Sized","parent":null,"children":[{"krate":0,"index":474},{"krate":0,"index":475},{"krate":0,"index":476},{"krate":0,"index":477},{"krate":0,"index":478},{"krate":0,"index":479},{"krate":0,"index":480},{"krate":0,"index":482},{"krate":0,"index":483},{"krate":0,"index":484},{"krate":0,"index":486},{"krate":0,"index":487},{"krate":0,"index":488},{"krate":0,"index":491},{"krate":0,"index":493},{"krate":0,"index":495},{"krate":0,"index":496},{"krate":0,"index":499},{"krate":0,"index":502},{"krate":0,"index":503},{"krate":0,"index":504},{"krate":0,"index":505},{"krate":0,"index":507},{"krate":0,"index":509},{"krate":0,"index":510},{"krate":0,"index":511},{"krate":0,"index":513},{"krate":0,"index":514},{"krate":0,"index":515},{"krate":0,"index":516}],"decl_id":null,"docs":" Trait for immutable matrix structs.\n","sig":null,"attributes":[{"value":"/ Trait for immutable matrix structs.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":225330,"byte_end":225369,"line_start":38,"line_end":38,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":474},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":225438,"byte_end":225442,"line_start":41,"line_end":41,"column_start":8,"column_end":12},"name":"rows","qualname":"::matrix::slice::BaseMatrix::rows","value":"pub fn rows(&Self) -> usize","parent":{"krate":0,"index":472},"children":[],"decl_id":null,"docs":" Rows in the matrix.\n","sig":null,"attributes":[{"value":"/ Rows in the matrix.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":225407,"byte_end":225430,"line_start":40,"line_end":40,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":475},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":225499,"byte_end":225503,"line_start":44,"line_end":44,"column_start":8,"column_end":12},"name":"cols","qualname":"::matrix::slice::BaseMatrix::cols","value":"pub fn cols(&Self) -> usize","parent":{"krate":0,"index":472},"children":[],"decl_id":null,"docs":" Columns in the matrix.\n","sig":null,"attributes":[{"value":"/ Columns in the matrix.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":225465,"byte_end":225491,"line_start":43,"line_end":43,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":476},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":225563,"byte_end":225573,"line_start":47,"line_end":47,"column_start":8,"column_end":18},"name":"row_stride","qualname":"::matrix::slice::BaseMatrix::row_stride","value":"pub fn row_stride(&Self) -> usize","parent":{"krate":0,"index":472},"children":[],"decl_id":null,"docs":" Row stride in the matrix.\n","sig":null,"attributes":[{"value":"/ Row stride in the matrix.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":225526,"byte_end":225555,"line_start":46,"line_end":46,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":477},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":225654,"byte_end":225662,"line_start":50,"line_end":50,"column_start":8,"column_end":16},"name":"is_empty","qualname":"::matrix::slice::BaseMatrix::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":{"krate":0,"index":472},"children":[],"decl_id":null,"docs":" Returns true if the matrix contais no elements\n","sig":null,"attributes":[{"value":"/ Returns true if the matrix contais no elements","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":225596,"byte_end":225646,"line_start":49,"line_end":49,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":478},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":225777,"byte_end":225783,"line_start":55,"line_end":55,"column_start":8,"column_end":14},"name":"as_ptr","qualname":"::matrix::slice::BaseMatrix::as_ptr","value":"pub fn as_ptr(&Self) -> *const T","parent":{"krate":0,"index":472},"children":[],"decl_id":null,"docs":" Top left index of the matrix.\n","sig":null,"attributes":[{"value":"/ Top left index of the matrix.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":225736,"byte_end":225769,"line_start":54,"line_end":54,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":479},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":226065,"byte_end":226073,"line_start":67,"line_end":67,"column_start":8,"column_end":16},"name":"as_slice","qualname":"::matrix::slice::BaseMatrix::as_slice","value":"pub fn as_slice(&Self) -> MatrixSlice<, T>","parent":{"krate":0,"index":472},"children":[],"decl_id":null,"docs":" Returns a `MatrixSlice` over the whole matrix.","sig":null,"attributes":[{"value":"/ Returns a `MatrixSlice` over the whole matrix.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":225809,"byte_end":225859,"line_start":57,"line_end":57,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":225864,"byte_end":225867,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":225872,"byte_end":225886,"line_start":59,"line_end":59,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":225891,"byte_end":225894,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":225899,"byte_end":225906,"line_start":61,"line_end":61,"column_start":5,"column_end":12}},{"value":"/ use rulinalg::matrix::{Matrix, BaseMatrix};","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":225911,"byte_end":225958,"line_start":62,"line_end":62,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":225963,"byte_end":225966,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ let a = Matrix::new(3, 3, vec![2.0; 9]);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":225971,"byte_end":226015,"line_start":64,"line_end":64,"column_start":5,"column_end":49}},{"value":"/ let b = a.as_slice();","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":226020,"byte_end":226045,"line_start":65,"line_end":65,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":226050,"byte_end":226057,"line_start":66,"line_end":66,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":480},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":226323,"byte_end":226336,"line_start":74,"line_end":74,"column_start":15,"column_end":28},"name":"get_unchecked","qualname":"::matrix::slice::BaseMatrix::get_unchecked","value":"pub unsafe fn get_unchecked(&Self, [usize; ]) -> &T","parent":{"krate":0,"index":472},"children":[],"decl_id":null,"docs":" Get a reference to a point in the matrix without bounds checking.\n","sig":null,"attributes":[{"value":"/ Get a reference to a point in the matrix without bounds checking.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":226239,"byte_end":226308,"line_start":73,"line_end":73,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":482},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":226967,"byte_end":226974,"line_start":93,"line_end":93,"column_start":8,"column_end":15},"name":"get_row","qualname":"::matrix::slice::BaseMatrix::get_row","value":"pub fn get_row(&Self, usize) -> Option<&[T]>","parent":{"krate":0,"index":472},"children":[],"decl_id":null,"docs":" Returns the row of a matrix at the given index.\n `None` if the index is out of bounds.","sig":null,"attributes":[{"value":"/ Returns the row of a matrix at the given index.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":226467,"byte_end":226518,"line_start":78,"line_end":78,"column_start":5,"column_end":56}},{"value":"/ `None` if the index is out of bounds.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":226523,"byte_end":226564,"line_start":79,"line_end":79,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":226569,"byte_end":226572,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":226577,"byte_end":226591,"line_start":81,"line_end":81,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":226596,"byte_end":226599,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":226604,"byte_end":226611,"line_start":83,"line_end":83,"column_start":5,"column_end":12}},{"value":"/ use rulinalg::matrix::{Matrix, BaseMatrix};","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":226616,"byte_end":226663,"line_start":84,"line_end":84,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":226668,"byte_end":226671,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ let a = Matrix::new(3,3, (0..9).collect::<Vec<usize>>());","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":226676,"byte_end":226737,"line_start":86,"line_end":86,"column_start":5,"column_end":66}},{"value":"/ let slice = a.sub_slice([1,1], 2, 2);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":226742,"byte_end":226783,"line_start":87,"line_end":87,"column_start":5,"column_end":46}},{"value":"/ let row = slice.get_row(1);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":226788,"byte_end":226819,"line_start":88,"line_end":88,"column_start":5,"column_end":36}},{"value":"/ let expected = vec![7usize, 8];","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":226824,"byte_end":226859,"line_start":89,"line_end":89,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(row, Some(&*expected));","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":226864,"byte_end":226902,"line_start":90,"line_end":90,"column_start":5,"column_end":43}},{"value":"/ assert!(slice.get_row(5).is_none());","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":226907,"byte_end":226947,"line_start":91,"line_end":91,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":226952,"byte_end":226959,"line_start":92,"line_end":92,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":483},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":227627,"byte_end":227644,"line_start":114,"line_end":114,"column_start":15,"column_end":32},"name":"get_row_unchecked","qualname":"::matrix::slice::BaseMatrix::get_row_unchecked","value":"pub unsafe fn get_row_unchecked(&Self, usize) -> &[T]","parent":{"krate":0,"index":472},"children":[],"decl_id":null,"docs":" Returns the row of a matrix at the given index without doing unbounds checking","sig":null,"attributes":[{"value":"/ Returns the row of a matrix at the given index without doing unbounds checking","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":227161,"byte_end":227243,"line_start":101,"line_end":101,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":227248,"byte_end":227251,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":227256,"byte_end":227270,"line_start":103,"line_end":103,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":227275,"byte_end":227278,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":227283,"byte_end":227290,"line_start":105,"line_end":105,"column_start":5,"column_end":12}},{"value":"/ use rulinalg::matrix::{Matrix, BaseMatrix};","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":227295,"byte_end":227342,"line_start":106,"line_end":106,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":227347,"byte_end":227350,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ let a = Matrix::new(3,3, (0..9).collect::<Vec<usize>>());","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":227355,"byte_end":227416,"line_start":108,"line_end":108,"column_start":5,"column_end":66}},{"value":"/ let slice = a.sub_slice([1,1], 2, 2);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":227421,"byte_end":227462,"line_start":109,"line_end":109,"column_start":5,"column_end":46}},{"value":"/ let row = unsafe { slice.get_row_unchecked(1) };","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":227467,"byte_end":227519,"line_start":110,"line_end":110,"column_start":5,"column_end":57}},{"value":"/ let mut expected = vec![7usize, 8];","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":227524,"byte_end":227563,"line_start":111,"line_end":111,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(row, &*expected);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":227568,"byte_end":227600,"line_start":112,"line_end":112,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":227605,"byte_end":227612,"line_start":113,"line_end":113,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":484},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":228234,"byte_end":228238,"line_start":132,"line_end":132,"column_start":8,"column_end":12},"name":"iter","qualname":"::matrix::slice::BaseMatrix::iter","value":"pub fn iter<'a>(&Self) -> SliceIter where T: 'a","parent":{"krate":0,"index":472},"children":[],"decl_id":null,"docs":" Returns an iterator over the matrix data.","sig":null,"attributes":[{"value":"/ Returns an iterator over the matrix data.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":227820,"byte_end":227865,"line_start":119,"line_end":119,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":227870,"byte_end":227873,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":227878,"byte_end":227892,"line_start":121,"line_end":121,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":227897,"byte_end":227900,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":227905,"byte_end":227912,"line_start":123,"line_end":123,"column_start":5,"column_end":12}},{"value":"/ use rulinalg::matrix::{Matrix, BaseMatrix};","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":227917,"byte_end":227964,"line_start":124,"line_end":124,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":227969,"byte_end":227972,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ let a = Matrix::new(3,3, (0..9).collect::<Vec<usize>>());","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":227977,"byte_end":228038,"line_start":126,"line_end":126,"column_start":5,"column_end":66}},{"value":"/ let slice = a.sub_slice([1,1], 2, 2);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":228043,"byte_end":228084,"line_start":127,"line_end":127,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":228089,"byte_end":228092,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ let slice_data = slice.iter().map(|v| *v).collect::<Vec<usize>>();","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":228097,"byte_end":228167,"line_start":129,"line_end":129,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(slice_data, vec![4,5,7,8]);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":228172,"byte_end":228214,"line_start":130,"line_end":130,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":228219,"byte_end":228226,"line_start":131,"line_end":131,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":486},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":228943,"byte_end":228952,"line_start":160,"line_end":160,"column_start":8,"column_end":17},"name":"iter_rows","qualname":"::matrix::slice::BaseMatrix::iter_rows","value":"pub fn iter_rows(&Self) -> Rows<, T>","parent":{"krate":0,"index":472},"children":[],"decl_id":null,"docs":" Iterate over the rows of the matrix.","sig":null,"attributes":[{"value":"/ Iterate over the rows of the matrix.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":228582,"byte_end":228622,"line_start":146,"line_end":146,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":228627,"byte_end":228630,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":228635,"byte_end":228649,"line_start":148,"line_end":148,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":228654,"byte_end":228657,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":228662,"byte_end":228669,"line_start":150,"line_end":150,"column_start":5,"column_end":12}},{"value":"/ use rulinalg::matrix::{Matrix, BaseMatrix};","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":228674,"byte_end":228721,"line_start":151,"line_end":151,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":228726,"byte_end":228729,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ let a = Matrix::new(3, 2, (0..6).collect::<Vec<usize>>());","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":228734,"byte_end":228796,"line_start":153,"line_end":153,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":228801,"byte_end":228804,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ // Prints \"2\" three times.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":228809,"byte_end":228839,"line_start":155,"line_end":155,"column_start":5,"column_end":35}},{"value":"/ for row in a.iter_rows() {","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":228844,"byte_end":228874,"line_start":156,"line_end":156,"column_start":5,"column_end":35}},{"value":"/     println!(\"{}\", row.len());","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":228879,"byte_end":228913,"line_start":157,"line_end":157,"column_start":5,"column_end":39}},{"value":"/ }","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":228918,"byte_end":228923,"line_start":158,"line_end":158,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":228928,"byte_end":228935,"line_start":159,"line_end":159,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":487},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":230153,"byte_end":230162,"line_start":204,"line_end":204,"column_start":8,"column_end":17},"name":"iter_diag","qualname":"::matrix::slice::BaseMatrix::iter_diag","value":"pub fn iter_diag(&Self, DiagOffset) -> Diagonal<, T, Self>","parent":{"krate":0,"index":472},"children":[],"decl_id":null,"docs":" Iterate over diagonal entries","sig":null,"attributes":[{"value":"/ Iterate over diagonal entries","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":229239,"byte_end":229272,"line_start":171,"line_end":171,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":229277,"byte_end":229280,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":229285,"byte_end":229299,"line_start":173,"line_end":173,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":229304,"byte_end":229307,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":229312,"byte_end":229319,"line_start":175,"line_end":175,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate rulinalg;","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":229324,"byte_end":229365,"line_start":176,"line_end":176,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":229370,"byte_end":229373,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ # fn main() {","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":229378,"byte_end":229395,"line_start":178,"line_end":178,"column_start":5,"column_end":22}},{"value":"/ use rulinalg::matrix::{DiagOffset, Matrix, BaseMatrix};","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":229400,"byte_end":229459,"line_start":179,"line_end":179,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":229464,"byte_end":229467,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ let a = matrix![0, 1, 2;","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":229472,"byte_end":229500,"line_start":181,"line_end":181,"column_start":5,"column_end":33}},{"value":"/                 3, 4, 5;","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":229505,"byte_end":229533,"line_start":182,"line_end":182,"column_start":5,"column_end":33}},{"value":"/                 6, 7, 8];","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":229538,"byte_end":229567,"line_start":183,"line_end":183,"column_start":5,"column_end":34}},{"value":"/ // Print super diag [1, 5]","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":229572,"byte_end":229602,"line_start":184,"line_end":184,"column_start":5,"column_end":35}},{"value":"/ for d in a.iter_diag(DiagOffset::Above(1)) {","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":229607,"byte_end":229655,"line_start":185,"line_end":185,"column_start":5,"column_end":53}},{"value":"/     println!(\"{}\", d);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":229660,"byte_end":229686,"line_start":186,"line_end":186,"column_start":5,"column_end":31}},{"value":"/ }","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":229691,"byte_end":229696,"line_start":187,"line_end":187,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":229701,"byte_end":229704,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ // Print sub diag [3, 7]","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":229709,"byte_end":229737,"line_start":189,"line_end":189,"column_start":5,"column_end":33}},{"value":"/ // Equivalent to `iter_diag(DiagOffset::Below(1))`","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":229742,"byte_end":229796,"line_start":190,"line_end":190,"column_start":5,"column_end":59}},{"value":"/ for d in a.iter_diag(DiagOffset::from(-1)) {","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":229801,"byte_end":229849,"line_start":191,"line_end":191,"column_start":5,"column_end":53}},{"value":"/     println!(\"{}\", d);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":229854,"byte_end":229880,"line_start":192,"line_end":192,"column_start":5,"column_end":31}},{"value":"/ }","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":229885,"byte_end":229890,"line_start":193,"line_end":193,"column_start":5,"column_end":10}},{"value":"/ # }","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":229895,"byte_end":229902,"line_start":194,"line_end":194,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":229907,"byte_end":229914,"line_start":195,"line_end":195,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":229919,"byte_end":229922,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":229927,"byte_end":229939,"line_start":197,"line_end":197,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":229944,"byte_end":229947,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ If using an `Above` or `Below` offset which is","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":229952,"byte_end":230002,"line_start":199,"line_end":199,"column_start":5,"column_end":55}},{"value":"/ out-of-bounds this function will panic.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":230007,"byte_end":230050,"line_start":200,"line_end":200,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":230055,"byte_end":230058,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ This function will never panic if the `Main` diagonal","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":230063,"byte_end":230120,"line_start":202,"line_end":202,"column_start":5,"column_end":62}},{"value":"/ offset is used. ","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":230125,"byte_end":230145,"line_start":203,"line_end":203,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":488},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":231518,"byte_end":231526,"line_start":242,"line_end":242,"column_start":8,"column_end":16},"name":"sum_rows","qualname":"::matrix::slice::BaseMatrix::sum_rows","value":"pub fn sum_rows(&Self) -> Vector<T> where T: Copy + Zero + Add<T, Output = T>","parent":{"krate":0,"index":472},"children":[],"decl_id":null,"docs":" The sum of the rows of the matrix.","sig":null,"attributes":[{"value":"/ The sum of the rows of the matrix.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":231000,"byte_end":231038,"line_start":225,"line_end":225,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":231043,"byte_end":231046,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ Returns a Vector equal to the sums of elements over the matrices rows.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":231051,"byte_end":231125,"line_start":227,"line_end":227,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":231130,"byte_end":231133,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ Note that the resulting vector is identical to the sums of","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":231138,"byte_end":231200,"line_start":229,"line_end":229,"column_start":5,"column_end":67}},{"value":"/ elements along each column of the matrix.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":231205,"byte_end":231250,"line_start":230,"line_end":230,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":231255,"byte_end":231258,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":231263,"byte_end":231277,"line_start":232,"line_end":232,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":231282,"byte_end":231285,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":231290,"byte_end":231297,"line_start":234,"line_end":234,"column_start":5,"column_end":12}},{"value":"/ use rulinalg::matrix::{Matrix, BaseMatrix};","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":231302,"byte_end":231349,"line_start":235,"line_end":235,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":231354,"byte_end":231357,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ let a = Matrix::new(2,2,vec![1.0,2.0,3.0,4.0]);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":231362,"byte_end":231413,"line_start":237,"line_end":237,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":231418,"byte_end":231421,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ let c = a.sum_rows();","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":231426,"byte_end":231451,"line_start":239,"line_end":239,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(*c.data(), vec![4.0, 6.0]);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":231456,"byte_end":231498,"line_start":240,"line_end":240,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":231503,"byte_end":231510,"line_start":241,"line_end":241,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":491},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":232332,"byte_end":232340,"line_start":268,"line_end":268,"column_start":8,"column_end":16},"name":"sum_cols","qualname":"::matrix::slice::BaseMatrix::sum_cols","value":"pub fn sum_cols(&Self) -> Vector<T> where T: Copy + Zero + Add<T, Output = T>","parent":{"krate":0,"index":472},"children":[],"decl_id":null,"docs":" The sum of the columns of the matrix.","sig":null,"attributes":[{"value":"/ The sum of the columns of the matrix.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":231811,"byte_end":231852,"line_start":251,"line_end":251,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":231857,"byte_end":231860,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ Returns a Vector equal to the sums of elements over the matrices columns.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":231865,"byte_end":231942,"line_start":253,"line_end":253,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":231947,"byte_end":231950,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ Note that the resulting vector is identical to the sums of","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":231955,"byte_end":232017,"line_start":255,"line_end":255,"column_start":5,"column_end":67}},{"value":"/ elements along each row of the matrix.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":232022,"byte_end":232064,"line_start":256,"line_end":256,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":232069,"byte_end":232072,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":232077,"byte_end":232091,"line_start":258,"line_end":258,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":232096,"byte_end":232099,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":232104,"byte_end":232111,"line_start":260,"line_end":260,"column_start":5,"column_end":12}},{"value":"/ use rulinalg::matrix::{Matrix, BaseMatrix};","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":232116,"byte_end":232163,"line_start":261,"line_end":261,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":232168,"byte_end":232171,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ let a = Matrix::new(2,2,vec![1.0,2.0,3.0,4.0]);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":232176,"byte_end":232227,"line_start":263,"line_end":263,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":232232,"byte_end":232235,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ let c = a.sum_cols();","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":232240,"byte_end":232265,"line_start":265,"line_end":265,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(*c.data(), vec![3.0, 7.0]);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":232270,"byte_end":232312,"line_start":266,"line_end":266,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":232317,"byte_end":232324,"line_start":267,"line_end":267,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":493},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":232880,"byte_end":232883,"line_start":288,"line_end":288,"column_start":8,"column_end":11},"name":"sum","qualname":"::matrix::slice::BaseMatrix::sum","value":"pub fn sum(&Self) -> T where T: Copy + Zero + Add<T, Output = T>","parent":{"krate":0,"index":472},"children":[],"decl_id":null,"docs":" The sum of all elements in the matrix","sig":null,"attributes":[{"value":"/ The sum of all elements in the matrix","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":232594,"byte_end":232635,"line_start":276,"line_end":276,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":232640,"byte_end":232643,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":232648,"byte_end":232662,"line_start":278,"line_end":278,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":232667,"byte_end":232670,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":232675,"byte_end":232682,"line_start":280,"line_end":280,"column_start":5,"column_end":12}},{"value":"/ use rulinalg::matrix::{Matrix, BaseMatrix};","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":232687,"byte_end":232734,"line_start":281,"line_end":281,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":232739,"byte_end":232742,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ let a = Matrix::new(2,2,vec![1.0,2.0,3.0,4.0]);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":232747,"byte_end":232798,"line_start":283,"line_end":283,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":232803,"byte_end":232806,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ let c = a.sum();","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":232811,"byte_end":232831,"line_start":285,"line_end":285,"column_start":5,"column_end":25}},{"value":"/ assert_eq!(c, 10.0);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":232836,"byte_end":232860,"line_start":286,"line_end":286,"column_start":5,"column_end":29}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":232865,"byte_end":232872,"line_start":287,"line_end":287,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":495},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":233118,"byte_end":233129,"line_start":296,"line_end":296,"column_start":8,"column_end":19},"name":"into_matrix","qualname":"::matrix::slice::BaseMatrix::into_matrix","value":"pub fn into_matrix(Self) -> Matrix<T> where T: Copy","parent":{"krate":0,"index":472},"children":[],"decl_id":null,"docs":" Convert the matrix struct into a owned Matrix.\n","sig":null,"attributes":[{"value":"/ Convert the matrix struct into a owned Matrix.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":233060,"byte_end":233110,"line_start":295,"line_end":295,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":496},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":233740,"byte_end":233751,"line_start":323,"line_end":323,"column_start":8,"column_end":19},"name":"select_rows","qualname":"::matrix::slice::BaseMatrix::select_rows","value":"pub fn select_rows<'a, I>(&Self, I) -> Matrix<T> where T: Copy,\nI: IntoIterator<Item = &'a usize>, I::IntoIter: ExactSizeIterator + Clone","parent":{"krate":0,"index":472},"children":[],"decl_id":null,"docs":" Select rows from matrix","sig":null,"attributes":[{"value":"/ Select rows from matrix","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":233223,"byte_end":233250,"line_start":302,"line_end":302,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":233255,"byte_end":233258,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":233263,"byte_end":233277,"line_start":304,"line_end":304,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":233282,"byte_end":233285,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":233290,"byte_end":233297,"line_start":306,"line_end":306,"column_start":5,"column_end":12}},{"value":"/ use rulinalg::matrix::{Matrix, BaseMatrix};","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":233302,"byte_end":233349,"line_start":307,"line_end":307,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":233354,"byte_end":233357,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ let a = Matrix::<f64>::ones(3,3);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":233362,"byte_end":233399,"line_start":309,"line_end":309,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":233404,"byte_end":233407,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ let b = &a.select_rows(&[2]);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":233412,"byte_end":233445,"line_start":311,"line_end":311,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(b.rows(), 1);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":233450,"byte_end":233478,"line_start":312,"line_end":312,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(b.cols(), 3);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":233483,"byte_end":233511,"line_start":313,"line_end":313,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":233516,"byte_end":233519,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ let c = &a.select_rows(&[1,2]);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":233524,"byte_end":233559,"line_start":315,"line_end":315,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(c.rows(), 2);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":233564,"byte_end":233592,"line_start":316,"line_end":316,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(c.cols(), 3);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":233597,"byte_end":233625,"line_start":317,"line_end":317,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":233630,"byte_end":233637,"line_start":318,"line_end":318,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":233642,"byte_end":233645,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":233650,"byte_end":233662,"line_start":320,"line_end":320,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":233667,"byte_end":233670,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ - Panics if row indices exceed the matrix dimensions.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":233675,"byte_end":233732,"line_start":322,"line_end":322,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":499},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":235029,"byte_end":235040,"line_start":370,"line_end":370,"column_start":8,"column_end":19},"name":"select_cols","qualname":"::matrix::slice::BaseMatrix::select_cols","value":"pub fn select_cols<'a, I>(&Self, I) -> Matrix<T> where T: Copy,\nI: IntoIterator<Item = &'a usize>, I::IntoIter: ExactSizeIterator + Clone","parent":{"krate":0,"index":472},"children":[],"decl_id":null,"docs":" Select columns from matrix","sig":null,"attributes":[{"value":"/ Select columns from matrix","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":234514,"byte_end":234544,"line_start":350,"line_end":350,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":234549,"byte_end":234552,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":234557,"byte_end":234571,"line_start":352,"line_end":352,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":234576,"byte_end":234579,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":234584,"byte_end":234591,"line_start":354,"line_end":354,"column_start":5,"column_end":12}},{"value":"/ use rulinalg::matrix::{Matrix, BaseMatrix};","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":234596,"byte_end":234643,"line_start":355,"line_end":355,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":234648,"byte_end":234651,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ let a = Matrix::<f64>::ones(3,3);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":234656,"byte_end":234693,"line_start":357,"line_end":357,"column_start":5,"column_end":42}},{"value":"/ let b = &a.select_cols(&[2]);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":234698,"byte_end":234731,"line_start":358,"line_end":358,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(b.rows(), 3);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":234736,"byte_end":234764,"line_start":359,"line_end":359,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(b.cols(), 1);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":234769,"byte_end":234797,"line_start":360,"line_end":360,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":234802,"byte_end":234805,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ let c = &a.select_cols(&[1,2]);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":234810,"byte_end":234845,"line_start":362,"line_end":362,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(c.rows(), 3);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":234850,"byte_end":234878,"line_start":363,"line_end":363,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(c.cols(), 2);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":234883,"byte_end":234911,"line_start":364,"line_end":364,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":234916,"byte_end":234923,"line_start":365,"line_end":365,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":234928,"byte_end":234931,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":234936,"byte_end":234948,"line_start":367,"line_end":367,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":234953,"byte_end":234956,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ - Panics if column indices exceed the matrix dimensions.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":234961,"byte_end":235021,"line_start":369,"line_end":369,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":502},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":236343,"byte_end":236349,"line_start":416,"line_end":416,"column_start":8,"column_end":14},"name":"elemul","qualname":"::matrix::slice::BaseMatrix::elemul","value":"pub fn elemul(&Self, &Self) -> Matrix<T> where T: Copy + Mul<T, Output = T>","parent":{"krate":0,"index":472},"children":[],"decl_id":null,"docs":" The elementwise product of two matrices.","sig":null,"attributes":[{"value":"/ The elementwise product of two matrices.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":235827,"byte_end":235871,"line_start":398,"line_end":398,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":235876,"byte_end":235879,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":235884,"byte_end":235898,"line_start":400,"line_end":400,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":235903,"byte_end":235906,"line_start":401,"line_end":401,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":235911,"byte_end":235918,"line_start":402,"line_end":402,"column_start":5,"column_end":12}},{"value":"/ use rulinalg::matrix::{Matrix, BaseMatrix};","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":235923,"byte_end":235970,"line_start":403,"line_end":403,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":235975,"byte_end":235978,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ let a = Matrix::new(2,2,vec![1.0,2.0,3.0,4.0]);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":235983,"byte_end":236034,"line_start":405,"line_end":405,"column_start":5,"column_end":56}},{"value":"/ let b = Matrix::new(2,2,vec![1.0,2.0,3.0,4.0]);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":236039,"byte_end":236090,"line_start":406,"line_end":406,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":236095,"byte_end":236098,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ let c = &a.elemul(&b);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":236103,"byte_end":236129,"line_start":408,"line_end":408,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(*c.data(), vec![1.0, 4.0, 9.0, 16.0]);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":236134,"byte_end":236187,"line_start":409,"line_end":409,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":236192,"byte_end":236199,"line_start":410,"line_end":410,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":236204,"byte_end":236207,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":236212,"byte_end":236224,"line_start":412,"line_end":412,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":236229,"byte_end":236232,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ - The matrices have different row counts.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":236237,"byte_end":236282,"line_start":414,"line_end":414,"column_start":5,"column_end":50}},{"value":"/ - The matrices have different column counts.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":236287,"byte_end":236335,"line_start":415,"line_end":415,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":503},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":237372,"byte_end":237378,"line_start":447,"line_end":447,"column_start":8,"column_end":14},"name":"elediv","qualname":"::matrix::slice::BaseMatrix::elediv","value":"pub fn elediv(&Self, &Self) -> Matrix<T> where T: Copy + Div<T, Output = T>","parent":{"krate":0,"index":472},"children":[],"decl_id":null,"docs":" The elementwise division of two matrices.","sig":null,"attributes":[{"value":"/ The elementwise division of two matrices.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":236868,"byte_end":236913,"line_start":429,"line_end":429,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":236918,"byte_end":236921,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":236926,"byte_end":236940,"line_start":431,"line_end":431,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":236945,"byte_end":236948,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":236953,"byte_end":236960,"line_start":433,"line_end":433,"column_start":5,"column_end":12}},{"value":"/ use rulinalg::matrix::{Matrix, BaseMatrix};","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":236965,"byte_end":237012,"line_start":434,"line_end":434,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":237017,"byte_end":237020,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ let a = Matrix::new(2,2,vec![1.0,2.0,3.0,4.0]);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":237025,"byte_end":237076,"line_start":436,"line_end":436,"column_start":5,"column_end":56}},{"value":"/ let b = Matrix::new(2,2,vec![1.0,2.0,3.0,4.0]);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":237081,"byte_end":237132,"line_start":437,"line_end":437,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":237137,"byte_end":237140,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ let c = &a.elediv(&b);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":237145,"byte_end":237171,"line_start":439,"line_end":439,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(*c.data(), vec![1.0; 4]);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":237176,"byte_end":237216,"line_start":440,"line_end":440,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":237221,"byte_end":237228,"line_start":441,"line_end":441,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":237233,"byte_end":237236,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":237241,"byte_end":237253,"line_start":443,"line_end":443,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":237258,"byte_end":237261,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ - The matrices have different row counts.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":237266,"byte_end":237311,"line_start":445,"line_end":445,"column_start":5,"column_end":50}},{"value":"/ - The matrices have different column counts.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":237316,"byte_end":237364,"line_start":446,"line_end":446,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":504},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":238463,"byte_end":238469,"line_start":481,"line_end":481,"column_start":8,"column_end":14},"name":"select","qualname":"::matrix::slice::BaseMatrix::select","value":"pub fn select(&Self, &[usize], &[usize]) -> Matrix<T> where T: Copy","parent":{"krate":0,"index":472},"children":[],"decl_id":null,"docs":" Select block matrix from matrix","sig":null,"attributes":[{"value":"/ Select block matrix from matrix","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":237897,"byte_end":237932,"line_start":460,"line_end":460,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":237937,"byte_end":237940,"line_start":461,"line_end":461,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":237945,"byte_end":237959,"line_start":462,"line_end":462,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":237964,"byte_end":237967,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":237972,"byte_end":237979,"line_start":464,"line_end":464,"column_start":5,"column_end":12}},{"value":"/ use rulinalg::matrix::{Matrix, BaseMatrix};","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":237984,"byte_end":238031,"line_start":465,"line_end":465,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":238036,"byte_end":238039,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ let a = Matrix::<f64>::identity(3);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":238044,"byte_end":238083,"line_start":467,"line_end":467,"column_start":5,"column_end":44}},{"value":"/ let b = &a.select(&[0,1], &[1,2]);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":238088,"byte_end":238126,"line_start":468,"line_end":468,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":238131,"byte_end":238134,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ // We get the 2x2 block matrix in the upper right corner.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":238139,"byte_end":238200,"line_start":470,"line_end":470,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(b.rows(), 2);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":238205,"byte_end":238233,"line_start":471,"line_end":471,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(b.cols(), 2);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":238238,"byte_end":238266,"line_start":472,"line_end":472,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":238271,"byte_end":238274,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ // Prints [0,0,1,0]","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":238279,"byte_end":238302,"line_start":474,"line_end":474,"column_start":5,"column_end":28}},{"value":"/ println!(\"{:?}\", b.data());","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":238307,"byte_end":238338,"line_start":475,"line_end":475,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":238343,"byte_end":238350,"line_start":476,"line_end":476,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":238355,"byte_end":238358,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":238363,"byte_end":238375,"line_start":478,"line_end":478,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":238380,"byte_end":238383,"line_start":479,"line_end":479,"column_start":5,"column_end":8}},{"value":"/ - Panics if row or column indices exceed the matrix dimensions.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":238388,"byte_end":238455,"line_start":480,"line_end":480,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":505},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":239752,"byte_end":239756,"line_start":530,"line_end":530,"column_start":8,"column_end":12},"name":"hcat","qualname":"::matrix::slice::BaseMatrix::hcat","value":"pub fn hcat<S>(&Self, &S) -> Matrix<T> where T: Copy, S: BaseMatrix<T>","parent":{"krate":0,"index":472},"children":[],"decl_id":null,"docs":" Horizontally concatenates two matrices. With self on the left.","sig":null,"attributes":[{"value":"/ Horizontally concatenates two matrices. With self on the left.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":239236,"byte_end":239302,"line_start":512,"line_end":512,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":239307,"byte_end":239310,"line_start":513,"line_end":513,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":239315,"byte_end":239329,"line_start":514,"line_end":514,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":239334,"byte_end":239337,"line_start":515,"line_end":515,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":239342,"byte_end":239349,"line_start":516,"line_end":516,"column_start":5,"column_end":12}},{"value":"/ use rulinalg::matrix::{Matrix, BaseMatrix};","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":239354,"byte_end":239401,"line_start":517,"line_end":517,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":239406,"byte_end":239409,"line_start":518,"line_end":518,"column_start":5,"column_end":8}},{"value":"/ let a = Matrix::new(3,2, vec![1.0,2.0,3.0,4.0,5.0,6.0]);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":239414,"byte_end":239474,"line_start":519,"line_end":519,"column_start":5,"column_end":65}},{"value":"/ let b = Matrix::new(3,1, vec![4.0,5.0,6.0]);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":239479,"byte_end":239527,"line_start":520,"line_end":520,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":239532,"byte_end":239535,"line_start":521,"line_end":521,"column_start":5,"column_end":8}},{"value":"/ let c = &a.hcat(&b);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":239540,"byte_end":239564,"line_start":522,"line_end":522,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(c.cols(), a.cols() + b.cols());","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":239569,"byte_end":239615,"line_start":523,"line_end":523,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(c[[1, 2]], 5.0);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":239620,"byte_end":239651,"line_start":524,"line_end":524,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":239656,"byte_end":239663,"line_start":525,"line_end":525,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":239668,"byte_end":239671,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":239676,"byte_end":239688,"line_start":527,"line_end":527,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":239693,"byte_end":239696,"line_start":528,"line_end":528,"column_start":5,"column_end":8}},{"value":"/ - Self and m have different row counts.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":239701,"byte_end":239744,"line_start":529,"line_end":529,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":507},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":240846,"byte_end":240850,"line_start":568,"line_end":568,"column_start":8,"column_end":12},"name":"vcat","qualname":"::matrix::slice::BaseMatrix::vcat","value":"pub fn vcat<S>(&Self, &S) -> Matrix<T> where T: Copy, S: BaseMatrix<T>","parent":{"krate":0,"index":472},"children":[],"decl_id":null,"docs":" Vertically concatenates two matrices. With self on top.","sig":null,"attributes":[{"value":"/ Vertically concatenates two matrices. With self on top.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":240334,"byte_end":240393,"line_start":550,"line_end":550,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":240398,"byte_end":240401,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":240406,"byte_end":240420,"line_start":552,"line_end":552,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":240425,"byte_end":240428,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":240433,"byte_end":240440,"line_start":554,"line_end":554,"column_start":5,"column_end":12}},{"value":"/ use rulinalg::matrix::{Matrix, BaseMatrix};","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":240445,"byte_end":240492,"line_start":555,"line_end":555,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":240497,"byte_end":240500,"line_start":556,"line_end":556,"column_start":5,"column_end":8}},{"value":"/ let a = Matrix::new(2,3, vec![1.0,2.0,3.0,4.0,5.0,6.0]);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":240505,"byte_end":240565,"line_start":557,"line_end":557,"column_start":5,"column_end":65}},{"value":"/ let b = Matrix::new(1,3, vec![4.0,5.0,6.0]);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":240570,"byte_end":240618,"line_start":558,"line_end":558,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":240623,"byte_end":240626,"line_start":559,"line_end":559,"column_start":5,"column_end":8}},{"value":"/ let c = &a.vcat(&b);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":240631,"byte_end":240655,"line_start":560,"line_end":560,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(c.rows(), a.rows() + b.rows());","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":240660,"byte_end":240706,"line_start":561,"line_end":561,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(c[[2, 2]], 6.0);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":240711,"byte_end":240742,"line_start":562,"line_end":562,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":240747,"byte_end":240754,"line_start":563,"line_end":563,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":240759,"byte_end":240762,"line_start":564,"line_end":564,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":240767,"byte_end":240779,"line_start":565,"line_end":565,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":240784,"byte_end":240787,"line_start":566,"line_end":566,"column_start":5,"column_end":8}},{"value":"/ - Self and m have different column counts.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":240792,"byte_end":240838,"line_start":567,"line_end":567,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":509},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":241994,"byte_end":241998,"line_start":608,"line_end":608,"column_start":8,"column_end":12},"name":"diag","qualname":"::matrix::slice::BaseMatrix::diag","value":"pub fn diag(&Self) -> Vector<T> where T: Copy","parent":{"krate":0,"index":472},"children":[],"decl_id":null,"docs":" Extract the diagonal of the matrix","sig":null,"attributes":[{"value":"/ Extract the diagonal of the matrix","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":241383,"byte_end":241421,"line_start":588,"line_end":588,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":241426,"byte_end":241429,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ Examples","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":241434,"byte_end":241446,"line_start":590,"line_end":590,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":241451,"byte_end":241454,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":241459,"byte_end":241466,"line_start":592,"line_end":592,"column_start":5,"column_end":12}},{"value":"/ use rulinalg::vector::Vector;","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":241471,"byte_end":241504,"line_start":593,"line_end":593,"column_start":5,"column_end":38}},{"value":"/ use rulinalg::matrix::{Matrix, BaseMatrix};","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":241509,"byte_end":241556,"line_start":594,"line_end":594,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":241561,"byte_end":241564,"line_start":595,"line_end":595,"column_start":5,"column_end":8}},{"value":"/ let a = Matrix::new(3,3,vec![1,2,3,4,5,6,7,8,9]);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":241569,"byte_end":241622,"line_start":596,"line_end":596,"column_start":5,"column_end":58}},{"value":"/ let b = Matrix::new(3,2,vec![1,2,3,4,5,6]);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":241627,"byte_end":241674,"line_start":597,"line_end":597,"column_start":5,"column_end":52}},{"value":"/ let c = Matrix::new(2,3,vec![1,2,3,4,5,6]);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":241679,"byte_end":241726,"line_start":598,"line_end":598,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":241731,"byte_end":241734,"line_start":599,"line_end":599,"column_start":5,"column_end":8}},{"value":"/ let d = &a.diag(); // 1,5,9","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":241739,"byte_end":241770,"line_start":600,"line_end":600,"column_start":5,"column_end":36}},{"value":"/ let e = &b.diag(); // 1,4","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":241775,"byte_end":241804,"line_start":601,"line_end":601,"column_start":5,"column_end":34}},{"value":"/ let f = &c.diag(); // 1,5","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":241809,"byte_end":241838,"line_start":602,"line_end":602,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":241843,"byte_end":241846,"line_start":603,"line_end":603,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(*d.data(), vec![1,5,9]);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":241851,"byte_end":241890,"line_start":604,"line_end":604,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(*e.data(), vec![1,4]);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":241895,"byte_end":241932,"line_start":605,"line_end":605,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(*f.data(), vec![1,5]);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":241937,"byte_end":241974,"line_start":606,"line_end":606,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":241979,"byte_end":241986,"line_start":607,"line_end":607,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":510},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":242401,"byte_end":242410,"line_start":625,"line_end":625,"column_start":8,"column_end":17},"name":"transpose","qualname":"::matrix::slice::BaseMatrix::transpose","value":"pub fn transpose(&Self) -> Matrix<T> where T: Copy","parent":{"krate":0,"index":472},"children":[],"decl_id":null,"docs":" Tranposes the given matrix","sig":null,"attributes":[{"value":"/ Tranposes the given matrix","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":242135,"byte_end":242165,"line_start":614,"line_end":614,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":242170,"byte_end":242173,"line_start":615,"line_end":615,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":242178,"byte_end":242192,"line_start":616,"line_end":616,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":242197,"byte_end":242200,"line_start":617,"line_end":617,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":242205,"byte_end":242212,"line_start":618,"line_end":618,"column_start":5,"column_end":12}},{"value":"/ use rulinalg::matrix::{Matrix, BaseMatrix};","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":242217,"byte_end":242264,"line_start":619,"line_end":619,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":242269,"byte_end":242272,"line_start":620,"line_end":620,"column_start":5,"column_end":8}},{"value":"/ let mat = Matrix::new(2,3, vec![1.0,2.0,3.0,4.0,5.0,6.0]);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":242277,"byte_end":242339,"line_start":621,"line_end":621,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":242344,"byte_end":242347,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ let mt = mat.transpose();","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":242352,"byte_end":242381,"line_start":623,"line_end":623,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":242386,"byte_end":242393,"line_start":624,"line_end":624,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":511},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":243394,"byte_end":243401,"line_start":663,"line_end":663,"column_start":8,"column_end":15},"name":"is_diag","qualname":"::matrix::slice::BaseMatrix::is_diag","value":"pub fn is_diag(&Self) -> bool where T: Zero + PartialEq","parent":{"krate":0,"index":472},"children":[],"decl_id":null,"docs":" Checks if matrix is diagonal.","sig":null,"attributes":[{"value":"/ Checks if matrix is diagonal.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":242959,"byte_end":242992,"line_start":646,"line_end":646,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":242997,"byte_end":243000,"line_start":647,"line_end":647,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":243005,"byte_end":243019,"line_start":648,"line_end":648,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":243024,"byte_end":243027,"line_start":649,"line_end":649,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":243032,"byte_end":243039,"line_start":650,"line_end":650,"column_start":5,"column_end":12}},{"value":"/ use rulinalg::matrix::{Matrix, BaseMatrix};","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":243044,"byte_end":243091,"line_start":651,"line_end":651,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":243096,"byte_end":243099,"line_start":652,"line_end":652,"column_start":5,"column_end":8}},{"value":"/ let a = Matrix::new(2,2, vec![1.0,0.0,0.0,1.0]);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":243104,"byte_end":243156,"line_start":653,"line_end":653,"column_start":5,"column_end":57}},{"value":"/ let a_diag = a.is_diag();","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":243161,"byte_end":243190,"line_start":654,"line_end":654,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":243195,"byte_end":243198,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a_diag, true);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":243203,"byte_end":243232,"line_start":656,"line_end":656,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":243237,"byte_end":243240,"line_start":657,"line_end":657,"column_start":5,"column_end":8}},{"value":"/ let b = Matrix::new(2,2, vec![1.0,0.0,1.0,0.0]);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":243245,"byte_end":243297,"line_start":658,"line_end":658,"column_start":5,"column_end":57}},{"value":"/ let b_diag = b.is_diag();","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":243302,"byte_end":243331,"line_start":659,"line_end":659,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":243336,"byte_end":243339,"line_start":660,"line_end":660,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(b_diag, false);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":243344,"byte_end":243374,"line_start":661,"line_end":661,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":243379,"byte_end":243386,"line_start":662,"line_end":662,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":513},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":244628,"byte_end":244646,"line_start":704,"line_end":704,"column_start":8,"column_end":26},"name":"solve_u_triangular","qualname":"::matrix::slice::BaseMatrix::solve_u_triangular","value":"pub fn solve_u_triangular(&Self, Vector<T>) -> Result<Vector<T>, Error> where\nT: Any + Float","parent":{"krate":0,"index":472},"children":[],"decl_id":null,"docs":" Solves an upper triangular linear system.","sig":null,"attributes":[{"value":"/ Solves an upper triangular linear system.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":243690,"byte_end":243735,"line_start":675,"line_end":675,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":243740,"byte_end":243743,"line_start":676,"line_end":676,"column_start":5,"column_end":8}},{"value":"/ Given a matrix `A` and a vector `b`, this function returns the","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":243748,"byte_end":243814,"line_start":677,"line_end":677,"column_start":5,"column_end":71}},{"value":"/ solution of the upper triangular system `Ux = b`, where `U` is","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":243819,"byte_end":243885,"line_start":678,"line_end":678,"column_start":5,"column_end":71}},{"value":"/ the upper triangular part of `A`.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":243890,"byte_end":243927,"line_start":679,"line_end":679,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":243932,"byte_end":243935,"line_start":680,"line_end":680,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":243940,"byte_end":243954,"line_start":681,"line_end":681,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":243959,"byte_end":243962,"line_start":682,"line_end":682,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":243967,"byte_end":243974,"line_start":683,"line_end":683,"column_start":5,"column_end":12}},{"value":"/ use rulinalg::matrix::{Matrix, BaseMatrix};","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":243979,"byte_end":244026,"line_start":684,"line_end":684,"column_start":5,"column_end":52}},{"value":"/ use rulinalg::vector::Vector;","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":244031,"byte_end":244064,"line_start":685,"line_end":685,"column_start":5,"column_end":38}},{"value":"/ use std::f32;","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":244069,"byte_end":244086,"line_start":686,"line_end":686,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":244091,"byte_end":244094,"line_start":687,"line_end":687,"column_start":5,"column_end":8}},{"value":"/ let u = Matrix::new(2,2, vec![1.0, 2.0, 0.0, 1.0]);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":244099,"byte_end":244154,"line_start":688,"line_end":688,"column_start":5,"column_end":60}},{"value":"/ let y = Vector::new(vec![3.0, 1.0]);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":244159,"byte_end":244199,"line_start":689,"line_end":689,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":244204,"byte_end":244207,"line_start":690,"line_end":690,"column_start":5,"column_end":8}},{"value":"/ let x = u.solve_u_triangular(y).expect(\"A solution should exist!\");","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":244212,"byte_end":244283,"line_start":691,"line_end":691,"column_start":5,"column_end":76}},{"value":"/ assert!((x[0] - 1.0) < f32::EPSILON);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":244288,"byte_end":244329,"line_start":692,"line_end":692,"column_start":5,"column_end":46}},{"value":"/ assert!((x[1] - 1.0) < f32::EPSILON);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":244334,"byte_end":244375,"line_start":693,"line_end":693,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":244380,"byte_end":244387,"line_start":694,"line_end":694,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":244392,"byte_end":244395,"line_start":695,"line_end":695,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":244400,"byte_end":244412,"line_start":696,"line_end":696,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":244417,"byte_end":244420,"line_start":697,"line_end":697,"column_start":5,"column_end":8}},{"value":"/ - Vector size and matrix column count are not equal.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":244425,"byte_end":244481,"line_start":698,"line_end":698,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":244486,"byte_end":244489,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ # Failures","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":244494,"byte_end":244508,"line_start":700,"line_end":700,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":244513,"byte_end":244516,"line_start":701,"line_end":701,"column_start":5,"column_end":8}},{"value":"/ - There is no valid solution to the system (matrix is singular).","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":244521,"byte_end":244589,"line_start":702,"line_end":702,"column_start":5,"column_end":73}},{"value":"/ - The matrix is empty.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":244594,"byte_end":244620,"line_start":703,"line_end":703,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":514},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":245929,"byte_end":245947,"line_start":745,"line_end":745,"column_start":8,"column_end":26},"name":"solve_l_triangular","qualname":"::matrix::slice::BaseMatrix::solve_l_triangular","value":"pub fn solve_l_triangular(&Self, Vector<T>) -> Result<Vector<T>, Error> where\nT: Any + Float","parent":{"krate":0,"index":472},"children":[],"decl_id":null,"docs":" Solves a lower triangular linear system.","sig":null,"attributes":[{"value":"/ Solves a lower triangular linear system.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":244963,"byte_end":245007,"line_start":715,"line_end":715,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":245012,"byte_end":245015,"line_start":716,"line_end":716,"column_start":5,"column_end":8}},{"value":"/ Given a matrix `A` and a vector `b`, this function returns the","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":245020,"byte_end":245086,"line_start":717,"line_end":717,"column_start":5,"column_end":71}},{"value":"/ solution of the lower triangular system `Lx = b`, where `L` is","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":245091,"byte_end":245157,"line_start":718,"line_end":718,"column_start":5,"column_end":71}},{"value":"/ the lower triangular part of `A`.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":245162,"byte_end":245199,"line_start":719,"line_end":719,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":245204,"byte_end":245207,"line_start":720,"line_end":720,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":245212,"byte_end":245226,"line_start":721,"line_end":721,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":245231,"byte_end":245234,"line_start":722,"line_end":722,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":245239,"byte_end":245246,"line_start":723,"line_end":723,"column_start":5,"column_end":12}},{"value":"/ use rulinalg::matrix::{Matrix, BaseMatrix};","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":245251,"byte_end":245298,"line_start":724,"line_end":724,"column_start":5,"column_end":52}},{"value":"/ use rulinalg::vector::Vector;","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":245303,"byte_end":245336,"line_start":725,"line_end":725,"column_start":5,"column_end":38}},{"value":"/ use std::f32;","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":245341,"byte_end":245358,"line_start":726,"line_end":726,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":245363,"byte_end":245366,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ let l = Matrix::new(2,2, vec![1.0, 0.0, 2.0, 1.0]);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":245371,"byte_end":245426,"line_start":728,"line_end":728,"column_start":5,"column_end":60}},{"value":"/ let y = Vector::new(vec![1.0, 3.0]);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":245431,"byte_end":245471,"line_start":729,"line_end":729,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":245476,"byte_end":245479,"line_start":730,"line_end":730,"column_start":5,"column_end":8}},{"value":"/ let x = l.solve_l_triangular(y).expect(\"A solution should exist!\");","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":245484,"byte_end":245555,"line_start":731,"line_end":731,"column_start":5,"column_end":76}},{"value":"/ println!(\"{:?}\", x);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":245560,"byte_end":245584,"line_start":732,"line_end":732,"column_start":5,"column_end":29}},{"value":"/ assert!((x[0] - 1.0) < f32::EPSILON);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":245589,"byte_end":245630,"line_start":733,"line_end":733,"column_start":5,"column_end":46}},{"value":"/ assert!((x[1] - 1.0) < f32::EPSILON);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":245635,"byte_end":245676,"line_start":734,"line_end":734,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":245681,"byte_end":245688,"line_start":735,"line_end":735,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":245693,"byte_end":245696,"line_start":736,"line_end":736,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":245701,"byte_end":245713,"line_start":737,"line_end":737,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":245718,"byte_end":245721,"line_start":738,"line_end":738,"column_start":5,"column_end":8}},{"value":"/ - Vector size and matrix column count are not equal.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":245726,"byte_end":245782,"line_start":739,"line_end":739,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":245787,"byte_end":245790,"line_start":740,"line_end":740,"column_start":5,"column_end":8}},{"value":"/ # Failures","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":245795,"byte_end":245809,"line_start":741,"line_end":741,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":245814,"byte_end":245817,"line_start":742,"line_end":742,"column_start":5,"column_end":8}},{"value":"/ - There is no valid solution to the system (matrix is singular).","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":245822,"byte_end":245890,"line_start":743,"line_end":743,"column_start":5,"column_end":73}},{"value":"/ - The matrix is empty.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":245895,"byte_end":245921,"line_start":744,"line_end":744,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":515},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":246574,"byte_end":246582,"line_start":766,"line_end":766,"column_start":8,"column_end":16},"name":"split_at","qualname":"::matrix::slice::BaseMatrix::split_at","value":"pub fn split_at(&Self, usize, Axes) -> (MatrixSlice<, T>, MatrixSlice<, T>)","parent":{"krate":0,"index":472},"children":[],"decl_id":null,"docs":" Split the matrix at the specified axis returning two `MatrixSlice`s.","sig":null,"attributes":[{"value":"/ Split the matrix at the specified axis returning two `MatrixSlice`s.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":246275,"byte_end":246347,"line_start":756,"line_end":756,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":246352,"byte_end":246355,"line_start":757,"line_end":757,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":246360,"byte_end":246374,"line_start":758,"line_end":758,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":246379,"byte_end":246382,"line_start":759,"line_end":759,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":246387,"byte_end":246394,"line_start":760,"line_end":760,"column_start":5,"column_end":12}},{"value":"/ use rulinalg::matrix::{Axes, Matrix, BaseMatrix};","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":246399,"byte_end":246452,"line_start":761,"line_end":761,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":246457,"byte_end":246460,"line_start":762,"line_end":762,"column_start":5,"column_end":8}},{"value":"/ let a = Matrix::new(3,3, vec![2.0; 9]);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":246465,"byte_end":246508,"line_start":763,"line_end":763,"column_start":5,"column_end":48}},{"value":"/ let (b,c) = a.split_at(1, Axes::Row);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":246513,"byte_end":246554,"line_start":764,"line_end":764,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":246559,"byte_end":246566,"line_start":765,"line_end":765,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":516},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":248535,"byte_end":248544,"line_start":812,"line_end":812,"column_start":8,"column_end":17},"name":"sub_slice","qualname":"::matrix::slice::BaseMatrix::sub_slice","value":"pub fn sub_slice<'a>(&Self, [usize; ], usize, usize) -> MatrixSlice where\nT: 'a","parent":{"krate":0,"index":472},"children":[],"decl_id":null,"docs":" Produce a `MatrixSlice` from an existing matrix.","sig":null,"attributes":[{"value":"/ Produce a `MatrixSlice` from an existing matrix.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":248160,"byte_end":248212,"line_start":801,"line_end":801,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":248217,"byte_end":248220,"line_start":802,"line_end":802,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":248225,"byte_end":248239,"line_start":803,"line_end":803,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":248244,"byte_end":248247,"line_start":804,"line_end":804,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":248252,"byte_end":248259,"line_start":805,"line_end":805,"column_start":5,"column_end":12}},{"value":"/ use rulinalg::matrix::{Matrix, BaseMatrix, MatrixSlice};","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":248264,"byte_end":248324,"line_start":806,"line_end":806,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":248329,"byte_end":248332,"line_start":807,"line_end":807,"column_start":5,"column_end":8}},{"value":"/ let a = Matrix::new(3,3, (0..9).collect::<Vec<usize>>());","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":248337,"byte_end":248398,"line_start":808,"line_end":808,"column_start":5,"column_end":66}},{"value":"/ let slice = MatrixSlice::from_matrix(&a, [1,1], 2, 2);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":248403,"byte_end":248461,"line_start":809,"line_end":809,"column_start":5,"column_end":63}},{"value":"/ let new_slice = slice.sub_slice([0,0], 1, 1);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":248466,"byte_end":248515,"line_start":810,"line_end":810,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":248520,"byte_end":248527,"line_start":811,"line_end":811,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":519},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":249133,"byte_end":249146,"line_start":828,"line_end":828,"column_start":11,"column_end":24},"name":"BaseMatrixMut","qualname":"::matrix::slice::BaseMatrixMut","value":"BaseMatrixMut<T>: BaseMatrix<T>","parent":null,"children":[{"krate":0,"index":521},{"krate":0,"index":522},{"krate":0,"index":523},{"krate":0,"index":525},{"krate":0,"index":527},{"krate":0,"index":528},{"krate":0,"index":529},{"krate":0,"index":530},{"krate":0,"index":531},{"krate":0,"index":532},{"krate":0,"index":533},{"krate":0,"index":536},{"krate":0,"index":537},{"krate":0,"index":538}],"decl_id":null,"docs":" Trait for mutable matrices.\n","sig":null,"attributes":[{"value":"/ Trait for mutable matrices.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":249091,"byte_end":249122,"line_start":827,"line_end":827,"column_start":1,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":521},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":249211,"byte_end":249221,"line_start":830,"line_end":830,"column_start":8,"column_end":18},"name":"as_mut_ptr","qualname":"::matrix::slice::BaseMatrixMut::as_mut_ptr","value":"pub fn as_mut_ptr(&mut Self) -> *mut T","parent":{"krate":0,"index":519},"children":[],"decl_id":null,"docs":" Top left index of the slice.\n","sig":null,"attributes":[{"value":"/ Top left index of the slice.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":249171,"byte_end":249203,"line_start":829,"line_end":829,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":522},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":249519,"byte_end":249531,"line_start":842,"line_end":842,"column_start":8,"column_end":20},"name":"as_mut_slice","qualname":"::matrix::slice::BaseMatrixMut::as_mut_slice","value":"pub fn as_mut_slice(&mut Self) -> MatrixSliceMut<, T>","parent":{"krate":0,"index":519},"children":[],"decl_id":null,"docs":" Returns a `MatrixSliceMut` over the whole matrix.","sig":null,"attributes":[{"value":"/ Returns a `MatrixSliceMut` over the whole matrix.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":249249,"byte_end":249302,"line_start":832,"line_end":832,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":249307,"byte_end":249310,"line_start":833,"line_end":833,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":249315,"byte_end":249329,"line_start":834,"line_end":834,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":249334,"byte_end":249337,"line_start":835,"line_end":835,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":249342,"byte_end":249349,"line_start":836,"line_end":836,"column_start":5,"column_end":12}},{"value":"/ use rulinalg::matrix::{Matrix, BaseMatrixMut};","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":249354,"byte_end":249404,"line_start":837,"line_end":837,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":249409,"byte_end":249412,"line_start":838,"line_end":838,"column_start":5,"column_end":8}},{"value":"/ let mut a = Matrix::new(3, 3, vec![2.0; 9]);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":249417,"byte_end":249465,"line_start":839,"line_end":839,"column_start":5,"column_end":53}},{"value":"/ let b = a.as_mut_slice();","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":249470,"byte_end":249499,"line_start":840,"line_end":840,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":249504,"byte_end":249511,"line_start":841,"line_end":841,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":523},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":249930,"byte_end":249947,"line_start":852,"line_end":852,"column_start":15,"column_end":32},"name":"get_unchecked_mut","qualname":"::matrix::slice::BaseMatrixMut::get_unchecked_mut","value":"pub unsafe fn get_unchecked_mut(&mut Self, [usize; ]) -> &mut T","parent":{"krate":0,"index":519},"children":[],"decl_id":null,"docs":" Get a mutable reference to a point in the matrix without bounds checks.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to a point in the matrix without bounds checks.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":249840,"byte_end":249915,"line_start":851,"line_end":851,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":525},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":250631,"byte_end":250639,"line_start":876,"line_end":876,"column_start":8,"column_end":16},"name":"iter_mut","qualname":"::matrix::slice::BaseMatrixMut::iter_mut","value":"pub fn iter_mut<'a>(&mut Self) -> SliceIterMut where T: 'a","parent":{"krate":0,"index":519},"children":[],"decl_id":null,"docs":" Returns a mutable iterator over the matrix.","sig":null,"attributes":[{"value":"/ Returns a mutable iterator over the matrix.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":250094,"byte_end":250141,"line_start":856,"line_end":856,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":250146,"byte_end":250149,"line_start":857,"line_end":857,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":250154,"byte_end":250168,"line_start":858,"line_end":858,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":250173,"byte_end":250176,"line_start":859,"line_end":859,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":250181,"byte_end":250188,"line_start":860,"line_end":860,"column_start":5,"column_end":12}},{"value":"/ use rulinalg::matrix::{Matrix, BaseMatrixMut};","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":250193,"byte_end":250243,"line_start":861,"line_end":861,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":250248,"byte_end":250251,"line_start":862,"line_end":862,"column_start":5,"column_end":8}},{"value":"/ let mut a = Matrix::new(3,3, (0..9).collect::<Vec<usize>>());","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":250256,"byte_end":250321,"line_start":863,"line_end":863,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":250326,"byte_end":250329,"line_start":864,"line_end":864,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":250334,"byte_end":250339,"line_start":865,"line_end":865,"column_start":5,"column_end":10}},{"value":"/     let mut slice = a.sub_slice_mut([1,1], 2, 2);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":250344,"byte_end":250397,"line_start":866,"line_end":866,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":250402,"byte_end":250405,"line_start":867,"line_end":867,"column_start":5,"column_end":8}},{"value":"/     for d in slice.iter_mut() {","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":250410,"byte_end":250445,"line_start":868,"line_end":868,"column_start":5,"column_end":40}},{"value":"/         *d = *d + 2;","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":250450,"byte_end":250474,"line_start":869,"line_end":869,"column_start":5,"column_end":29}},{"value":"/     }","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":250479,"byte_end":250488,"line_start":870,"line_end":870,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":250493,"byte_end":250498,"line_start":871,"line_end":871,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":250503,"byte_end":250506,"line_start":872,"line_end":872,"column_start":5,"column_end":8}},{"value":"/ // Only the matrix slice is updated.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":250511,"byte_end":250551,"line_start":873,"line_end":873,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(a.into_vec(), vec![0,1,2,3,6,7,6,9,10]);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":250556,"byte_end":250611,"line_start":874,"line_end":874,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":250616,"byte_end":250623,"line_start":875,"line_end":875,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":527},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":251587,"byte_end":251598,"line_start":907,"line_end":907,"column_start":8,"column_end":19},"name":"get_row_mut","qualname":"::matrix::slice::BaseMatrixMut::get_row_mut","value":"pub fn get_row_mut(&mut Self, usize) -> Option<&mut [T]>","parent":{"krate":0,"index":519},"children":[],"decl_id":null,"docs":" Returns a mutable reference to the row of a matrix at the given index.\n `None` if the index is out of bounds.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the row of a matrix at the given index.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":251001,"byte_end":251075,"line_start":890,"line_end":890,"column_start":5,"column_end":79}},{"value":"/ `None` if the index is out of bounds.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":251080,"byte_end":251121,"line_start":891,"line_end":891,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":251126,"byte_end":251129,"line_start":892,"line_end":892,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":251134,"byte_end":251148,"line_start":893,"line_end":893,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":251153,"byte_end":251156,"line_start":894,"line_end":894,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":251161,"byte_end":251168,"line_start":895,"line_end":895,"column_start":5,"column_end":12}},{"value":"/ use rulinalg::matrix::{Matrix, BaseMatrixMut};","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":251173,"byte_end":251223,"line_start":896,"line_end":896,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":251228,"byte_end":251231,"line_start":897,"line_end":897,"column_start":5,"column_end":8}},{"value":"/ let mut a = Matrix::new(3,3, (0..9).collect::<Vec<usize>>());","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":251236,"byte_end":251301,"line_start":898,"line_end":898,"column_start":5,"column_end":70}},{"value":"/ let mut slice = a.sub_slice_mut([1,1], 2, 2);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":251306,"byte_end":251355,"line_start":899,"line_end":899,"column_start":5,"column_end":54}},{"value":"/ {","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":251360,"byte_end":251365,"line_start":900,"line_end":900,"column_start":5,"column_end":10}},{"value":"/     let row = slice.get_row_mut(1);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":251370,"byte_end":251409,"line_start":901,"line_end":901,"column_start":5,"column_end":44}},{"value":"/     let mut expected = vec![7usize, 8];","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":251414,"byte_end":251457,"line_start":902,"line_end":902,"column_start":5,"column_end":48}},{"value":"/     assert_eq!(row, Some(&mut *expected));","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":251462,"byte_end":251508,"line_start":903,"line_end":903,"column_start":5,"column_end":51}},{"value":"/ }","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":251513,"byte_end":251518,"line_start":904,"line_end":904,"column_start":5,"column_end":10}},{"value":"/ assert!(slice.get_row_mut(5).is_none());","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":251523,"byte_end":251567,"line_start":905,"line_end":905,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":251572,"byte_end":251579,"line_start":906,"line_end":906,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":528},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":252317,"byte_end":252338,"line_start":929,"line_end":929,"column_start":15,"column_end":36},"name":"get_row_unchecked_mut","qualname":"::matrix::slice::BaseMatrixMut::get_row_unchecked_mut","value":"pub unsafe fn get_row_unchecked_mut(&mut Self, usize) -> &mut [T]","parent":{"krate":0,"index":519},"children":[],"decl_id":null,"docs":" Returns a mutable reference to the row of a matrix at the given index\n without doing unbounds checking","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the row of a matrix at the given index","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":251797,"byte_end":251870,"line_start":915,"line_end":915,"column_start":5,"column_end":78}},{"value":"/ without doing unbounds checking","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":251875,"byte_end":251910,"line_start":916,"line_end":916,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":251915,"byte_end":251918,"line_start":917,"line_end":917,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":251923,"byte_end":251937,"line_start":918,"line_end":918,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":251942,"byte_end":251945,"line_start":919,"line_end":919,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":251950,"byte_end":251957,"line_start":920,"line_end":920,"column_start":5,"column_end":12}},{"value":"/ use rulinalg::matrix::{Matrix, BaseMatrixMut};","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":251962,"byte_end":252012,"line_start":921,"line_end":921,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":252017,"byte_end":252020,"line_start":922,"line_end":922,"column_start":5,"column_end":8}},{"value":"/ let mut a = Matrix::new(3,3, (0..9).collect::<Vec<usize>>());","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":252025,"byte_end":252090,"line_start":923,"line_end":923,"column_start":5,"column_end":70}},{"value":"/ let mut slice = a.sub_slice_mut([1,1], 2, 2);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":252095,"byte_end":252144,"line_start":924,"line_end":924,"column_start":5,"column_end":54}},{"value":"/ let row = unsafe { slice.get_row_unchecked_mut(1) };","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":252149,"byte_end":252205,"line_start":925,"line_end":925,"column_start":5,"column_end":61}},{"value":"/ let mut expected = vec![7usize, 8];","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":252210,"byte_end":252249,"line_start":926,"line_end":926,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(row, &mut *expected);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":252254,"byte_end":252290,"line_start":927,"line_end":927,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":252295,"byte_end":252302,"line_start":928,"line_end":928,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":529},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":252923,"byte_end":252932,"line_start":949,"line_end":949,"column_start":8,"column_end":17},"name":"swap_rows","qualname":"::matrix::slice::BaseMatrixMut::swap_rows","value":"pub fn swap_rows(&mut Self, usize, usize)","parent":{"krate":0,"index":519},"children":[],"decl_id":null,"docs":" Swaps two rows in a matrix.","sig":null,"attributes":[{"value":"/ Swaps two rows in a matrix.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":252530,"byte_end":252561,"line_start":934,"line_end":934,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":252566,"byte_end":252569,"line_start":935,"line_end":935,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":252574,"byte_end":252588,"line_start":936,"line_end":936,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":252593,"byte_end":252596,"line_start":937,"line_end":937,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":252601,"byte_end":252608,"line_start":938,"line_end":938,"column_start":5,"column_end":12}},{"value":"/ use rulinalg::matrix::{Matrix, BaseMatrixMut};","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":252613,"byte_end":252663,"line_start":939,"line_end":939,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":252668,"byte_end":252671,"line_start":940,"line_end":940,"column_start":5,"column_end":8}},{"value":"/ let mut a = Matrix::new(4, 2, (0..8).collect::<Vec<_>>());","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":252676,"byte_end":252738,"line_start":941,"line_end":941,"column_start":5,"column_end":67}},{"value":"/ a.swap_rows(1, 3);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":252743,"byte_end":252765,"line_start":942,"line_end":942,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(a.into_vec(), vec![0,1,6,7,4,5,2,3]);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":252770,"byte_end":252822,"line_start":943,"line_end":943,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":252827,"byte_end":252834,"line_start":944,"line_end":944,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":252839,"byte_end":252842,"line_start":945,"line_end":945,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":252847,"byte_end":252859,"line_start":946,"line_end":946,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":252864,"byte_end":252867,"line_start":947,"line_end":947,"column_start":5,"column_end":8}},{"value":"/ Panics if `a` or `b` are out of bounds.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":252872,"byte_end":252915,"line_start":948,"line_end":948,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":530},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":254212,"byte_end":254221,"line_start":984,"line_end":984,"column_start":8,"column_end":17},"name":"swap_cols","qualname":"::matrix::slice::BaseMatrixMut::swap_cols","value":"pub fn swap_cols(&mut Self, usize, usize)","parent":{"krate":0,"index":519},"children":[],"decl_id":null,"docs":" Swaps two columns in a matrix.","sig":null,"attributes":[{"value":"/ Swaps two columns in a matrix.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":253816,"byte_end":253850,"line_start":969,"line_end":969,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":253855,"byte_end":253858,"line_start":970,"line_end":970,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":253863,"byte_end":253877,"line_start":971,"line_end":971,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":253882,"byte_end":253885,"line_start":972,"line_end":972,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":253890,"byte_end":253897,"line_start":973,"line_end":973,"column_start":5,"column_end":12}},{"value":"/ use rulinalg::matrix::{Matrix, BaseMatrixMut};","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":253902,"byte_end":253952,"line_start":974,"line_end":974,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":253957,"byte_end":253960,"line_start":975,"line_end":975,"column_start":5,"column_end":8}},{"value":"/ let mut a = Matrix::new(4, 2, (0..8).collect::<Vec<_>>());","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":253965,"byte_end":254027,"line_start":976,"line_end":976,"column_start":5,"column_end":67}},{"value":"/ a.swap_cols(0, 1);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":254032,"byte_end":254054,"line_start":977,"line_end":977,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(a.into_vec(), vec![1,0,3,2,5,4,7,6]);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":254059,"byte_end":254111,"line_start":978,"line_end":978,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":254116,"byte_end":254123,"line_start":979,"line_end":979,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":254128,"byte_end":254131,"line_start":980,"line_end":980,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":254136,"byte_end":254148,"line_start":981,"line_end":981,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":254153,"byte_end":254156,"line_start":982,"line_end":982,"column_start":5,"column_end":8}},{"value":"/ Panics if `a` or `b` are out of bounds.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":254161,"byte_end":254204,"line_start":983,"line_end":983,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":531},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":255211,"byte_end":255224,"line_start":1017,"line_end":1017,"column_start":8,"column_end":21},"name":"iter_rows_mut","qualname":"::matrix::slice::BaseMatrixMut::iter_rows_mut","value":"pub fn iter_rows_mut(&mut Self) -> RowsMut<, T>","parent":{"krate":0,"index":519},"children":[],"decl_id":null,"docs":" Iterate over the mutable rows of the matrix.","sig":null,"attributes":[{"value":"/ Iterate over the mutable rows of the matrix.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":254761,"byte_end":254809,"line_start":999,"line_end":999,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":254814,"byte_end":254817,"line_start":1000,"line_end":1000,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":254822,"byte_end":254836,"line_start":1001,"line_end":1001,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":254841,"byte_end":254844,"line_start":1002,"line_end":1002,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":254849,"byte_end":254856,"line_start":1003,"line_end":1003,"column_start":5,"column_end":12}},{"value":"/ use rulinalg::matrix::{Matrix, BaseMatrixMut};","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":254861,"byte_end":254911,"line_start":1004,"line_end":1004,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":254916,"byte_end":254919,"line_start":1005,"line_end":1005,"column_start":5,"column_end":8}},{"value":"/ let mut a = Matrix::new(3, 2, (0..6).collect::<Vec<usize>>());","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":254924,"byte_end":254990,"line_start":1006,"line_end":1006,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":254995,"byte_end":254998,"line_start":1007,"line_end":1007,"column_start":5,"column_end":8}},{"value":"/ for row in a.iter_rows_mut() {","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":255003,"byte_end":255037,"line_start":1008,"line_end":1008,"column_start":5,"column_end":39}},{"value":"/     for r in row {","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":255042,"byte_end":255064,"line_start":1009,"line_end":1009,"column_start":5,"column_end":27}},{"value":"/         *r = *r + 1;","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":255069,"byte_end":255093,"line_start":1010,"line_end":1010,"column_start":5,"column_end":29}},{"value":"/     }","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":255098,"byte_end":255107,"line_start":1011,"line_end":1011,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":255112,"byte_end":255117,"line_start":1012,"line_end":1012,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":255122,"byte_end":255125,"line_start":1013,"line_end":1013,"column_start":5,"column_end":8}},{"value":"/ // Now contains the range 1..7","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":255130,"byte_end":255164,"line_start":1014,"line_end":1014,"column_start":5,"column_end":39}},{"value":"/ println!(\"{}\", a);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":255169,"byte_end":255191,"line_start":1015,"line_end":1015,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":255196,"byte_end":255203,"line_start":1016,"line_end":1016,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":532},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":256528,"byte_end":256541,"line_start":1064,"line_end":1064,"column_start":8,"column_end":21},"name":"iter_diag_mut","qualname":"::matrix::slice::BaseMatrixMut::iter_diag_mut","value":"pub fn iter_diag_mut(&mut Self, DiagOffset) -> DiagonalMut<, T, Self>","parent":{"krate":0,"index":519},"children":[],"decl_id":null,"docs":" Iterate over diagonal entries mutably","sig":null,"attributes":[{"value":"/ Iterate over diagonal entries mutably","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":255529,"byte_end":255570,"line_start":1028,"line_end":1028,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":255575,"byte_end":255578,"line_start":1029,"line_end":1029,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":255583,"byte_end":255597,"line_start":1030,"line_end":1030,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":255602,"byte_end":255605,"line_start":1031,"line_end":1031,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":255610,"byte_end":255617,"line_start":1032,"line_end":1032,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate rulinalg;","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":255622,"byte_end":255663,"line_start":1033,"line_end":1033,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":255668,"byte_end":255671,"line_start":1034,"line_end":1034,"column_start":5,"column_end":8}},{"value":"/ # fn main() {","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":255676,"byte_end":255693,"line_start":1035,"line_end":1035,"column_start":5,"column_end":22}},{"value":"/ use rulinalg::matrix::{Matrix, BaseMatrixMut, DiagOffset};","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":255698,"byte_end":255760,"line_start":1036,"line_end":1036,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":255765,"byte_end":255768,"line_start":1037,"line_end":1037,"column_start":5,"column_end":8}},{"value":"/ let mut a = matrix![0, 1, 2;","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":255773,"byte_end":255805,"line_start":1038,"line_end":1038,"column_start":5,"column_end":37}},{"value":"/                     3, 4, 5;","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":255810,"byte_end":255842,"line_start":1039,"line_end":1039,"column_start":5,"column_end":37}},{"value":"/                     6, 7, 8];","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":255847,"byte_end":255880,"line_start":1040,"line_end":1040,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":255885,"byte_end":255888,"line_start":1041,"line_end":1041,"column_start":5,"column_end":8}},{"value":"/ // Increment super diag","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":255893,"byte_end":255920,"line_start":1042,"line_end":1042,"column_start":5,"column_end":32}},{"value":"/ for d in a.iter_diag_mut(DiagOffset::Above(1)) {","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":255925,"byte_end":255977,"line_start":1043,"line_end":1043,"column_start":5,"column_end":57}},{"value":"/     *d = *d + 1;","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":255982,"byte_end":256002,"line_start":1044,"line_end":1044,"column_start":5,"column_end":25}},{"value":"/ }","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":256007,"byte_end":256012,"line_start":1045,"line_end":1045,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":256017,"byte_end":256020,"line_start":1046,"line_end":1046,"column_start":5,"column_end":8}},{"value":"/ // Zero the sub-diagonal (sets 3 and 7 to 0)","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":256025,"byte_end":256073,"line_start":1047,"line_end":1047,"column_start":5,"column_end":53}},{"value":"/ // Equivalent to `iter_diag(DiagOffset::Below(1))`","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":256078,"byte_end":256132,"line_start":1048,"line_end":1048,"column_start":5,"column_end":59}},{"value":"/ for sub_d in a.iter_diag_mut(DiagOffset::from(-1)) {","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":256137,"byte_end":256193,"line_start":1049,"line_end":1049,"column_start":5,"column_end":61}},{"value":"/     *sub_d = 0;   ","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":256198,"byte_end":256220,"line_start":1050,"line_end":1050,"column_start":5,"column_end":27}},{"value":"/ }","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":256225,"byte_end":256230,"line_start":1051,"line_end":1051,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":256235,"byte_end":256238,"line_start":1052,"line_end":1052,"column_start":5,"column_end":8}},{"value":"/ println!(\"{}\", a);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":256243,"byte_end":256265,"line_start":1053,"line_end":1053,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":256270,"byte_end":256277,"line_start":1054,"line_end":1054,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":256282,"byte_end":256289,"line_start":1055,"line_end":1055,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":256294,"byte_end":256297,"line_start":1056,"line_end":1056,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":256302,"byte_end":256314,"line_start":1057,"line_end":1057,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":256319,"byte_end":256322,"line_start":1058,"line_end":1058,"column_start":5,"column_end":8}},{"value":"/ If using an `Above` or `Below` offset which is","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":256327,"byte_end":256377,"line_start":1059,"line_end":1059,"column_start":5,"column_end":55}},{"value":"/ out-of-bounds this function will panic.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":256382,"byte_end":256425,"line_start":1060,"line_end":1060,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":256430,"byte_end":256433,"line_start":1061,"line_end":1061,"column_start":5,"column_end":8}},{"value":"/ This function will never panic if the `Main` diagonal","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":256438,"byte_end":256495,"line_start":1062,"line_end":1062,"column_start":5,"column_end":62}},{"value":"/ offset is used. ","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":256500,"byte_end":256520,"line_start":1063,"line_end":1063,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":533},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":258027,"byte_end":258033,"line_start":1107,"line_end":1107,"column_start":8,"column_end":14},"name":"set_to","qualname":"::matrix::slice::BaseMatrixMut::set_to","value":"pub fn set_to<M: BaseMatrix<T>>(Self, M) where T: Copy","parent":{"krate":0,"index":519},"children":[],"decl_id":null,"docs":" Sets the underlying matrix data to the target data.","sig":null,"attributes":[{"value":"/ Sets the underlying matrix data to the target data.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":257415,"byte_end":257470,"line_start":1087,"line_end":1087,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":257475,"byte_end":257478,"line_start":1088,"line_end":1088,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":257483,"byte_end":257497,"line_start":1089,"line_end":1089,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":257502,"byte_end":257505,"line_start":1090,"line_end":1090,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":257510,"byte_end":257517,"line_start":1091,"line_end":1091,"column_start":5,"column_end":12}},{"value":"/ use rulinalg::matrix::{Matrix, BaseMatrixMut};","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":257522,"byte_end":257572,"line_start":1092,"line_end":1092,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":257577,"byte_end":257580,"line_start":1093,"line_end":1093,"column_start":5,"column_end":8}},{"value":"/ let mut mat = Matrix::<f32>::zeros(4,4);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":257585,"byte_end":257629,"line_start":1094,"line_end":1094,"column_start":5,"column_end":49}},{"value":"/ let one_block = Matrix::<f32>::ones(2,2);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":257634,"byte_end":257679,"line_start":1095,"line_end":1095,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":257684,"byte_end":257687,"line_start":1096,"line_end":1096,"column_start":5,"column_end":8}},{"value":"/ // Get a mutable slice of the upper left 2x2 block.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":257692,"byte_end":257747,"line_start":1097,"line_end":1097,"column_start":5,"column_end":60}},{"value":"/ let mat_block = mat.sub_slice_mut([0,0], 2, 2);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":257752,"byte_end":257803,"line_start":1098,"line_end":1098,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":257808,"byte_end":257811,"line_start":1099,"line_end":1099,"column_start":5,"column_end":8}},{"value":"/ // Set the upper left 2x2 block to be ones.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":257816,"byte_end":257863,"line_start":1100,"line_end":1100,"column_start":5,"column_end":52}},{"value":"/ mat_block.set_to(one_block);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":257868,"byte_end":257900,"line_start":1101,"line_end":1101,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":257905,"byte_end":257912,"line_start":1102,"line_end":1102,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":257917,"byte_end":257920,"line_start":1103,"line_end":1103,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":257925,"byte_end":257937,"line_start":1104,"line_end":1104,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":257942,"byte_end":257945,"line_start":1105,"line_end":1105,"column_start":5,"column_end":8}},{"value":"/ Panics if the dimensions of `self` and `target` are not the same.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":257950,"byte_end":258019,"line_start":1106,"line_end":1106,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":536},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":258915,"byte_end":258920,"line_start":1137,"line_end":1137,"column_start":8,"column_end":13},"name":"apply","qualname":"::matrix::slice::BaseMatrixMut::apply","value":"pub fn apply(Self, &Fn(T) -> T) -> Self where T: Copy","parent":{"krate":0,"index":519},"children":[],"decl_id":null,"docs":" Applies a function to each element in the matrix.","sig":null,"attributes":[{"value":"/ Applies a function to each element in the matrix.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":258514,"byte_end":258567,"line_start":1120,"line_end":1120,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":258572,"byte_end":258575,"line_start":1121,"line_end":1121,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":258580,"byte_end":258594,"line_start":1122,"line_end":1122,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":258599,"byte_end":258602,"line_start":1123,"line_end":1123,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":258607,"byte_end":258614,"line_start":1124,"line_end":1124,"column_start":5,"column_end":12}},{"value":"/ use rulinalg::matrix::{Matrix, BaseMatrixMut};","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":258619,"byte_end":258669,"line_start":1125,"line_end":1125,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":258674,"byte_end":258677,"line_start":1126,"line_end":1126,"column_start":5,"column_end":8}},{"value":"/ fn add_two(a: f64) -> f64 {","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":258682,"byte_end":258713,"line_start":1127,"line_end":1127,"column_start":5,"column_end":36}},{"value":"/     a + 2f64","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":258718,"byte_end":258734,"line_start":1128,"line_end":1128,"column_start":5,"column_end":21}},{"value":"/ }","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":258739,"byte_end":258744,"line_start":1129,"line_end":1129,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":258749,"byte_end":258752,"line_start":1130,"line_end":1130,"column_start":5,"column_end":8}},{"value":"/ let a = Matrix::new(2, 2, vec![0.;4]);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":258757,"byte_end":258799,"line_start":1131,"line_end":1131,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":258804,"byte_end":258807,"line_start":1132,"line_end":1132,"column_start":5,"column_end":8}},{"value":"/ let b = a.apply(&add_two);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":258812,"byte_end":258842,"line_start":1133,"line_end":1133,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":258847,"byte_end":258850,"line_start":1134,"line_end":1134,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(*b.data(), vec![2.0; 4]);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":258855,"byte_end":258895,"line_start":1135,"line_end":1135,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":258900,"byte_end":258907,"line_start":1136,"line_end":1136,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":537},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":259395,"byte_end":259407,"line_start":1156,"line_end":1156,"column_start":8,"column_end":20},"name":"split_at_mut","qualname":"::matrix::slice::BaseMatrixMut::split_at_mut","value":"pub fn split_at_mut(&mut Self, usize, Axes)\n-> (MatrixSliceMut<, T>, MatrixSliceMut<, T>)","parent":{"krate":0,"index":519},"children":[],"decl_id":null,"docs":" Split the matrix at the specified axis returning two `MatrixSliceMut`s.","sig":null,"attributes":[{"value":"/ Split the matrix at the specified axis returning two `MatrixSliceMut`s.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":259082,"byte_end":259157,"line_start":1146,"line_end":1146,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":259162,"byte_end":259165,"line_start":1147,"line_end":1147,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":259170,"byte_end":259184,"line_start":1148,"line_end":1148,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":259189,"byte_end":259192,"line_start":1149,"line_end":1149,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":259197,"byte_end":259204,"line_start":1150,"line_end":1150,"column_start":5,"column_end":12}},{"value":"/ use rulinalg::matrix::{Axes, Matrix, BaseMatrixMut};","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":259209,"byte_end":259265,"line_start":1151,"line_end":1151,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":259270,"byte_end":259273,"line_start":1152,"line_end":1152,"column_start":5,"column_end":8}},{"value":"/ let mut a = Matrix::new(3,3, vec![2.0; 9]);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":259278,"byte_end":259325,"line_start":1153,"line_end":1153,"column_start":5,"column_end":52}},{"value":"/ let (b,c) = a.split_at_mut(1, Axes::Col);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":259330,"byte_end":259375,"line_start":1154,"line_end":1154,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":259380,"byte_end":259387,"line_start":1155,"line_end":1155,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":538},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":261526,"byte_end":261539,"line_start":1204,"line_end":1204,"column_start":8,"column_end":21},"name":"sub_slice_mut","qualname":"::matrix::slice::BaseMatrixMut::sub_slice_mut","value":"pub fn sub_slice_mut<'a>(&mut Self, [usize; ], usize, usize) -> MatrixSliceMut\nwhere T: 'a","parent":{"krate":0,"index":519},"children":[],"decl_id":null,"docs":" Produce a `MatrixSliceMut` from an existing matrix.","sig":null,"attributes":[{"value":"/ Produce a `MatrixSliceMut` from an existing matrix.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":261123,"byte_end":261178,"line_start":1193,"line_end":1193,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":261183,"byte_end":261186,"line_start":1194,"line_end":1194,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":261191,"byte_end":261205,"line_start":1195,"line_end":1195,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":261210,"byte_end":261213,"line_start":1196,"line_end":1196,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":261218,"byte_end":261225,"line_start":1197,"line_end":1197,"column_start":5,"column_end":12}},{"value":"/ use rulinalg::matrix::{Matrix, MatrixSliceMut, BaseMatrixMut};","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":261230,"byte_end":261296,"line_start":1198,"line_end":1198,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":261301,"byte_end":261304,"line_start":1199,"line_end":1199,"column_start":5,"column_end":8}},{"value":"/ let mut a = Matrix::new(3,3, (0..9).collect::<Vec<usize>>());","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":261309,"byte_end":261374,"line_start":1200,"line_end":1200,"column_start":5,"column_end":70}},{"value":"/ let mut slice = MatrixSliceMut::from_matrix(&mut a, [1,1], 2, 2);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":261379,"byte_end":261448,"line_start":1201,"line_end":1201,"column_start":5,"column_end":74}},{"value":"/ let new_slice = slice.sub_slice_mut([0,0], 1, 1);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":261453,"byte_end":261506,"line_start":1202,"line_end":1202,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":261511,"byte_end":261518,"line_start":1203,"line_end":1203,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":578},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":265311,"byte_end":265322,"line_start":1349,"line_end":1349,"column_start":12,"column_end":23},"name":"from_matrix","qualname":"<MatrixSlice>::from_matrix","value":"pub fn from_matrix(&'a Matrix<T>, [usize; ], usize, usize) -> MatrixSlice<, T>","parent":null,"children":[],"decl_id":null,"docs":" Produce a `MatrixSlice` from a `Matrix`","sig":null,"attributes":[{"value":"/ Produce a `MatrixSlice` from a `Matrix`","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":265007,"byte_end":265050,"line_start":1339,"line_end":1339,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":265055,"byte_end":265058,"line_start":1340,"line_end":1340,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":265063,"byte_end":265077,"line_start":1341,"line_end":1341,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":265082,"byte_end":265085,"line_start":1342,"line_end":1342,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":265090,"byte_end":265097,"line_start":1343,"line_end":1343,"column_start":5,"column_end":12}},{"value":"/ use rulinalg::matrix::{Matrix, MatrixSlice};","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":265102,"byte_end":265150,"line_start":1344,"line_end":1344,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":265155,"byte_end":265158,"line_start":1345,"line_end":1345,"column_start":5,"column_end":8}},{"value":"/ let a = Matrix::new(3,3, (0..9).collect::<Vec<usize>>());","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":265163,"byte_end":265224,"line_start":1346,"line_end":1346,"column_start":5,"column_end":66}},{"value":"/ let slice = MatrixSlice::from_matrix(&a, [1,1], 2, 2);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":265229,"byte_end":265287,"line_start":1347,"line_end":1347,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":265292,"byte_end":265299,"line_start":1348,"line_end":1348,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":580},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":266941,"byte_end":266955,"line_start":1393,"line_end":1393,"column_start":19,"column_end":33},"name":"from_raw_parts","qualname":"<MatrixSlice>::from_raw_parts","value":"pub unsafe fn from_raw_parts(*const T, usize, usize, usize) -> MatrixSlice","parent":null,"children":[],"decl_id":null,"docs":" Creates a `MatrixSlice` from raw parts.","sig":null,"attributes":[{"value":"/ Creates a `MatrixSlice` from raw parts.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":266027,"byte_end":266070,"line_start":1369,"line_end":1369,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":266075,"byte_end":266078,"line_start":1370,"line_end":1370,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":266083,"byte_end":266097,"line_start":1371,"line_end":1371,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":266102,"byte_end":266105,"line_start":1372,"line_end":1372,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":266110,"byte_end":266117,"line_start":1373,"line_end":1373,"column_start":5,"column_end":12}},{"value":"/ use rulinalg::matrix::MatrixSlice;","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":266122,"byte_end":266160,"line_start":1374,"line_end":1374,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":266165,"byte_end":266168,"line_start":1375,"line_end":1375,"column_start":5,"column_end":8}},{"value":"/ let mut a = vec![4.0; 16];","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":266173,"byte_end":266203,"line_start":1376,"line_end":1376,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":266208,"byte_end":266211,"line_start":1377,"line_end":1377,"column_start":5,"column_end":8}},{"value":"/ unsafe {","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":266216,"byte_end":266228,"line_start":1378,"line_end":1378,"column_start":5,"column_end":17}},{"value":"/     // Create a matrix slice with 3 rows, and 3 cols","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":266233,"byte_end":266289,"line_start":1379,"line_end":1379,"column_start":5,"column_end":61}},{"value":"/     // The row stride of 4 specifies the distance between the start of each row in the data.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":266294,"byte_end":266390,"line_start":1380,"line_end":1380,"column_start":5,"column_end":101}},{"value":"/     let b = MatrixSlice::from_raw_parts(a.as_ptr(), 3, 3, 4);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":266395,"byte_end":266460,"line_start":1381,"line_end":1381,"column_start":5,"column_end":70}},{"value":"/ }","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":266465,"byte_end":266470,"line_start":1382,"line_end":1382,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":266475,"byte_end":266482,"line_start":1383,"line_end":1383,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":266487,"byte_end":266490,"line_start":1384,"line_end":1384,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":266495,"byte_end":266507,"line_start":1385,"line_end":1385,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":266512,"byte_end":266515,"line_start":1386,"line_end":1386,"column_start":5,"column_end":8}},{"value":"/ The pointer must be followed by a contiguous slice of data larger than `row_stride * rows`.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":266520,"byte_end":266615,"line_start":1387,"line_end":1387,"column_start":5,"column_end":100}},{"value":"/ If not then other operations will produce undefined behaviour.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":266620,"byte_end":266686,"line_start":1388,"line_end":1388,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":266691,"byte_end":266694,"line_start":1389,"line_end":1389,"column_start":5,"column_end":8}},{"value":"/ Additionally `cols` should be less than the `row_stride`. It is possible to use this","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":266699,"byte_end":266787,"line_start":1390,"line_end":1390,"column_start":5,"column_end":93}},{"value":"/ function safely whilst violating this condition. So long as","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":266792,"byte_end":266855,"line_start":1391,"line_end":1391,"column_start":5,"column_end":68}},{"value":"/ `max(cols, row_stride) * rows` is less than the data size.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":266860,"byte_end":266922,"line_start":1392,"line_end":1392,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":581},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":267823,"byte_end":267830,"line_start":1420,"line_end":1420,"column_start":12,"column_end":19},"name":"reslice","qualname":"<MatrixSlice>::reslice","value":"pub fn reslice(Self, [usize; ], usize, usize) -> MatrixSlice","parent":null,"children":[],"decl_id":null,"docs":" Produce a `MatrixSlice` from an existing `MatrixSlice`.","sig":null,"attributes":[{"value":"/ Produce a `MatrixSlice` from an existing `MatrixSlice`.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":267363,"byte_end":267422,"line_start":1407,"line_end":1407,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":267427,"byte_end":267430,"line_start":1408,"line_end":1408,"column_start":5,"column_end":8}},{"value":"/ This function will be deprecated. Prefer using `BaseMatrix::sub_slice`.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":267435,"byte_end":267510,"line_start":1409,"line_end":1409,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":267515,"byte_end":267518,"line_start":1410,"line_end":1410,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":267523,"byte_end":267537,"line_start":1411,"line_end":1411,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":267542,"byte_end":267545,"line_start":1412,"line_end":1412,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":267550,"byte_end":267557,"line_start":1413,"line_end":1413,"column_start":5,"column_end":12}},{"value":"/ use rulinalg::matrix::{Matrix, MatrixSlice};","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":267562,"byte_end":267610,"line_start":1414,"line_end":1414,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":267615,"byte_end":267618,"line_start":1415,"line_end":1415,"column_start":5,"column_end":8}},{"value":"/ let a = Matrix::new(3,3, (0..9).collect::<Vec<usize>>());","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":267623,"byte_end":267684,"line_start":1416,"line_end":1416,"column_start":5,"column_end":66}},{"value":"/ let slice = MatrixSlice::from_matrix(&a, [1,1], 2, 2);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":267689,"byte_end":267747,"line_start":1417,"line_end":1417,"column_start":5,"column_end":63}},{"value":"/ let new_slice = slice.reslice([0,0], 1, 1);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":267752,"byte_end":267799,"line_start":1418,"line_end":1418,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":267804,"byte_end":267811,"line_start":1419,"line_end":1419,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":586},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":268326,"byte_end":268337,"line_start":1436,"line_end":1436,"column_start":12,"column_end":23},"name":"from_matrix","qualname":"<MatrixSliceMut>::from_matrix","value":"pub fn from_matrix(&'a mut Matrix<T>, [usize; ], usize, usize)\n-> MatrixSliceMut<, T>","parent":null,"children":[],"decl_id":null,"docs":" Produce a `MatrixSliceMut` from a mutable `Matrix`","sig":null,"attributes":[{"value":"/ Produce a `MatrixSliceMut` from a mutable `Matrix`","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":267997,"byte_end":268051,"line_start":1426,"line_end":1426,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":268056,"byte_end":268059,"line_start":1427,"line_end":1427,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":268064,"byte_end":268078,"line_start":1428,"line_end":1428,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":268083,"byte_end":268086,"line_start":1429,"line_end":1429,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":268091,"byte_end":268098,"line_start":1430,"line_end":1430,"column_start":5,"column_end":12}},{"value":"/ use rulinalg::matrix::{Matrix, MatrixSliceMut};","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":268103,"byte_end":268154,"line_start":1431,"line_end":1431,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":268159,"byte_end":268162,"line_start":1432,"line_end":1432,"column_start":5,"column_end":8}},{"value":"/ let mut a = Matrix::new(3,3, (0..9).collect::<Vec<usize>>());","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":268167,"byte_end":268232,"line_start":1433,"line_end":1433,"column_start":5,"column_end":70}},{"value":"/ let slice = MatrixSliceMut::from_matrix(&mut a, [1,1], 2, 2);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":268237,"byte_end":268302,"line_start":1434,"line_end":1434,"column_start":5,"column_end":70}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":268307,"byte_end":268314,"line_start":1435,"line_end":1435,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":588},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":270034,"byte_end":270048,"line_start":1483,"line_end":1483,"column_start":19,"column_end":33},"name":"from_raw_parts","qualname":"<MatrixSliceMut>::from_raw_parts","value":"pub unsafe fn from_raw_parts(*mut T, usize, usize, usize) -> MatrixSliceMut","parent":null,"children":[],"decl_id":null,"docs":" Creates a `MatrixSliceMut` from raw parts.","sig":null,"attributes":[{"value":"/ Creates a `MatrixSliceMut` from raw parts.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":269099,"byte_end":269145,"line_start":1459,"line_end":1459,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":269150,"byte_end":269153,"line_start":1460,"line_end":1460,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":269158,"byte_end":269172,"line_start":1461,"line_end":1461,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":269177,"byte_end":269180,"line_start":1462,"line_end":1462,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":269185,"byte_end":269192,"line_start":1463,"line_end":1463,"column_start":5,"column_end":12}},{"value":"/ use rulinalg::matrix::MatrixSliceMut;","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":269197,"byte_end":269238,"line_start":1464,"line_end":1464,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":269243,"byte_end":269246,"line_start":1465,"line_end":1465,"column_start":5,"column_end":8}},{"value":"/ let mut a = vec![4.0; 16];","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":269251,"byte_end":269281,"line_start":1466,"line_end":1466,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":269286,"byte_end":269289,"line_start":1467,"line_end":1467,"column_start":5,"column_end":8}},{"value":"/ unsafe {","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":269294,"byte_end":269306,"line_start":1468,"line_end":1468,"column_start":5,"column_end":17}},{"value":"/     // Create a mutable matrix slice with 3 rows, and 3 cols","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":269311,"byte_end":269375,"line_start":1469,"line_end":1469,"column_start":5,"column_end":69}},{"value":"/     // The row stride of 4 specifies the distance between the start of each row in the data.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":269380,"byte_end":269476,"line_start":1470,"line_end":1470,"column_start":5,"column_end":101}},{"value":"/     let b = MatrixSliceMut::from_raw_parts(a.as_mut_ptr(), 3, 3, 4);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":269481,"byte_end":269553,"line_start":1471,"line_end":1471,"column_start":5,"column_end":77}},{"value":"/ }","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":269558,"byte_end":269563,"line_start":1472,"line_end":1472,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":269568,"byte_end":269575,"line_start":1473,"line_end":1473,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":269580,"byte_end":269583,"line_start":1474,"line_end":1474,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":269588,"byte_end":269600,"line_start":1475,"line_end":1475,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":269605,"byte_end":269608,"line_start":1476,"line_end":1476,"column_start":5,"column_end":8}},{"value":"/ The pointer must be followed by a contiguous slice of data larger than `row_stride * rows`.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":269613,"byte_end":269708,"line_start":1477,"line_end":1477,"column_start":5,"column_end":100}},{"value":"/ If not then other operations will produce undefined behaviour.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":269713,"byte_end":269779,"line_start":1478,"line_end":1478,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":269784,"byte_end":269787,"line_start":1479,"line_end":1479,"column_start":5,"column_end":8}},{"value":"/ Additionally `cols` should be less than the `row_stride`. It is possible to use this","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":269792,"byte_end":269880,"line_start":1480,"line_end":1480,"column_start":5,"column_end":93}},{"value":"/ function safely whilst violating this condition. So long as","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":269885,"byte_end":269948,"line_start":1481,"line_end":1481,"column_start":5,"column_end":68}},{"value":"/ `max(cols, row_stride) * rows` is less than the data size.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":269953,"byte_end":270015,"line_start":1482,"line_end":1482,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":589},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":270959,"byte_end":270966,"line_start":1510,"line_end":1510,"column_start":12,"column_end":19},"name":"reslice","qualname":"<MatrixSliceMut>::reslice","value":"pub fn reslice(Self, [usize; ], usize, usize) -> MatrixSliceMut","parent":null,"children":[],"decl_id":null,"docs":" Produce a `MatrixSliceMut` from an existing `MatrixSliceMut`.","sig":null,"attributes":[{"value":"/ Produce a `MatrixSliceMut` from an existing `MatrixSliceMut`.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":270464,"byte_end":270529,"line_start":1497,"line_end":1497,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":270534,"byte_end":270537,"line_start":1498,"line_end":1498,"column_start":5,"column_end":8}},{"value":"/ This function will be deprecated. Prefer using `BaseMatrixMut::sub_slice_mut` instead;","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":270542,"byte_end":270632,"line_start":1499,"line_end":1499,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":270637,"byte_end":270640,"line_start":1500,"line_end":1500,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":270645,"byte_end":270659,"line_start":1501,"line_end":1501,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":270664,"byte_end":270667,"line_start":1502,"line_end":1502,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":270672,"byte_end":270679,"line_start":1503,"line_end":1503,"column_start":5,"column_end":12}},{"value":"/ use rulinalg::matrix::{Matrix, MatrixSliceMut};","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":270684,"byte_end":270735,"line_start":1504,"line_end":1504,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":270740,"byte_end":270743,"line_start":1505,"line_end":1505,"column_start":5,"column_end":8}},{"value":"/ let mut a = Matrix::new(3,3, (0..9).collect::<Vec<usize>>());","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":270748,"byte_end":270813,"line_start":1506,"line_end":1506,"column_start":5,"column_end":70}},{"value":"/ let slice = MatrixSliceMut::from_matrix(&mut a, [1,1], 2, 2);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":270818,"byte_end":270883,"line_start":1507,"line_end":1507,"column_start":5,"column_end":70}},{"value":"/ let new_slice = slice.reslice([0,0], 1, 1);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":270888,"byte_end":270935,"line_start":1508,"line_end":1508,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":270940,"byte_end":270947,"line_start":1509,"line_end":1509,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":2438},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":271229,"byte_end":271238,"line_start":1520,"line_end":1520,"column_start":12,"column_end":21},"name":"SliceIter","qualname":"::matrix::slice::SliceIter","value":"SliceIter {  }","parent":null,"children":[{"krate":0,"index":2441},{"krate":0,"index":2442},{"krate":0,"index":2443},{"krate":0,"index":2444},{"krate":0,"index":2445},{"krate":0,"index":2446},{"krate":0,"index":2447}],"decl_id":null,"docs":" Iterator for matrix.","sig":null,"attributes":[{"value":"/ Iterator for matrix.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":271104,"byte_end":271128,"line_start":1515,"line_end":1515,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":271129,"byte_end":271132,"line_start":1516,"line_end":1516,"column_start":1,"column_end":4}},{"value":"/ Iterates over the underlying slice data","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":271133,"byte_end":271176,"line_start":1517,"line_end":1517,"column_start":1,"column_end":44}},{"value":"/ in row-major order.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":271177,"byte_end":271200,"line_start":1518,"line_end":1518,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":2452},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":271557,"byte_end":271569,"line_start":1535,"line_end":1535,"column_start":12,"column_end":24},"name":"SliceIterMut","qualname":"::matrix::slice::SliceIterMut","value":"SliceIterMut {  }","parent":null,"children":[{"krate":0,"index":2455},{"krate":0,"index":2456},{"krate":0,"index":2457},{"krate":0,"index":2458},{"krate":0,"index":2459},{"krate":0,"index":2460},{"krate":0,"index":2461}],"decl_id":null,"docs":" Iterator for mutable matrix.","sig":null,"attributes":[{"value":"/ Iterator for mutable matrix.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":271424,"byte_end":271456,"line_start":1530,"line_end":1530,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":271457,"byte_end":271460,"line_start":1531,"line_end":1531,"column_start":1,"column_end":4}},{"value":"/ Iterates over the underlying slice data","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":271461,"byte_end":271504,"line_start":1532,"line_end":1532,"column_start":1,"column_end":44}},{"value":"/ in row-major order.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":271505,"byte_end":271528,"line_start":1533,"line_end":1533,"column_start":1,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2477},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":62632,"byte_end":62635,"line_start":31,"line_end":31,"column_start":5,"column_end":8},"name":"Row","qualname":"::matrix::Axes::Row","value":"Axes::Row","parent":{"krate":0,"index":2476},"children":[],"decl_id":null,"docs":" The row axis.\n","sig":null,"attributes":[{"value":"/ The row axis.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":62610,"byte_end":62627,"line_start":30,"line_end":30,"column_start":5,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2479},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":62666,"byte_end":62669,"line_start":33,"line_end":33,"column_start":5,"column_end":8},"name":"Col","qualname":"::matrix::Axes::Col","value":"Axes::Col","parent":{"krate":0,"index":2476},"children":[],"decl_id":null,"docs":" The column axis.\n","sig":null,"attributes":[{"value":"/ The column axis.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":62641,"byte_end":62661,"line_start":32,"line_end":32,"column_start":5,"column_end":25}}]},{"kind":"Enum","id":{"krate":0,"index":2476},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":62599,"byte_end":62603,"line_start":29,"line_end":29,"column_start":10,"column_end":14},"name":"Axes","qualname":"::matrix::Axes","value":"pub enum Axes {\n\n    /// The row axis.\n    Row,\n\n    /// The column axis.\n    Col,\n}","parent":null,"children":[{"krate":0,"index":2477},{"krate":0,"index":2479}],"decl_id":null,"docs":" Matrix dimensions\n","sig":null,"attributes":[{"value":"/ Matrix dimensions","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":62538,"byte_end":62559,"line_start":27,"line_end":27,"column_start":1,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":2486},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":62791,"byte_end":62797,"line_start":40,"line_end":40,"column_start":12,"column_end":18},"name":"Matrix","qualname":"::matrix::Matrix","value":"Matrix {  }","parent":null,"children":[{"krate":0,"index":2488},{"krate":0,"index":2489},{"krate":0,"index":2490}],"decl_id":null,"docs":" The `Matrix` struct.","sig":null,"attributes":[{"value":"/ The `Matrix` struct.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":62674,"byte_end":62698,"line_start":36,"line_end":36,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":62699,"byte_end":62702,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Can be instantiated with any type.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":62703,"byte_end":62741,"line_start":38,"line_end":38,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":2509},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":63076,"byte_end":63087,"line_start":53,"line_end":53,"column_start":12,"column_end":23},"name":"MatrixSlice","qualname":"::matrix::MatrixSlice","value":"MatrixSlice {  }","parent":null,"children":[{"krate":0,"index":2512},{"krate":0,"index":2513},{"krate":0,"index":2514},{"krate":0,"index":2515},{"krate":0,"index":2516}],"decl_id":null,"docs":" A `MatrixSlice`","sig":null,"attributes":[{"value":"/ A `MatrixSlice`","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":62858,"byte_end":62877,"line_start":46,"line_end":46,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":62878,"byte_end":62881,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ This struct provides a slice into a matrix.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":62882,"byte_end":62929,"line_start":48,"line_end":48,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":62930,"byte_end":62933,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ The struct contains the upper left point of the slice","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":62934,"byte_end":62991,"line_start":50,"line_end":50,"column_start":1,"column_end":58}},{"value":"/ and the width and height of the slice.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":62992,"byte_end":63034,"line_start":51,"line_end":51,"column_start":1,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":2528},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":63436,"byte_end":63450,"line_start":68,"line_end":68,"column_start":12,"column_end":26},"name":"MatrixSliceMut","qualname":"::matrix::MatrixSliceMut","value":"MatrixSliceMut {  }","parent":null,"children":[{"krate":0,"index":2531},{"krate":0,"index":2532},{"krate":0,"index":2533},{"krate":0,"index":2534},{"krate":0,"index":2535}],"decl_id":null,"docs":" A mutable `MatrixSliceMut`","sig":null,"attributes":[{"value":"/ A mutable `MatrixSliceMut`","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":63212,"byte_end":63242,"line_start":61,"line_end":61,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":63243,"byte_end":63246,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ This struct provides a mutable slice into a matrix.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":63247,"byte_end":63302,"line_start":63,"line_end":63,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":63303,"byte_end":63306,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ The struct contains the upper left point of the slice","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":63307,"byte_end":63364,"line_start":65,"line_end":65,"column_start":1,"column_end":58}},{"value":"/ and the width and height of the slice.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":63365,"byte_end":63407,"line_start":66,"line_end":66,"column_start":1,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":2540},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":63623,"byte_end":63627,"line_start":78,"line_end":78,"column_start":12,"column_end":16},"name":"Rows","qualname":"::matrix::Rows","value":"Rows {  }","parent":null,"children":[{"krate":0,"index":2543},{"krate":0,"index":2544},{"krate":0,"index":2545},{"krate":0,"index":2546},{"krate":0,"index":2547},{"krate":0,"index":2548}],"decl_id":null,"docs":" Row iterator.\n","sig":null,"attributes":[{"value":"/ Row iterator.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":63577,"byte_end":63594,"line_start":76,"line_end":76,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":2553},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":63847,"byte_end":63854,"line_start":89,"line_end":89,"column_start":12,"column_end":19},"name":"RowsMut","qualname":"::matrix::RowsMut","value":"RowsMut {  }","parent":null,"children":[{"krate":0,"index":2556},{"krate":0,"index":2557},{"krate":0,"index":2558},{"krate":0,"index":2559},{"krate":0,"index":2560},{"krate":0,"index":2561}],"decl_id":null,"docs":" Mutable row iterator.\n","sig":null,"attributes":[{"value":"/ Mutable row iterator.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":63793,"byte_end":63818,"line_start":87,"line_end":87,"column_start":1,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2567},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":64166,"byte_end":64170,"line_start":102,"line_end":102,"column_start":5,"column_end":9},"name":"Main","qualname":"::matrix::DiagOffset::Main","value":"DiagOffset::Main","parent":{"krate":0,"index":2566},"children":[],"decl_id":null,"docs":" The main diagonal of the matrix.\n","sig":null,"attributes":[{"value":"/ The main diagonal of the matrix.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":64125,"byte_end":64161,"line_start":101,"line_end":101,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2569},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":64219,"byte_end":64224,"line_start":104,"line_end":104,"column_start":5,"column_end":10},"name":"Above","qualname":"::matrix::DiagOffset::Above","value":"DiagOffset::Above(usize)","parent":{"krate":0,"index":2566},"children":[],"decl_id":null,"docs":" An offset above the main diagonal.\n","sig":null,"attributes":[{"value":"/ An offset above the main diagonal.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":64176,"byte_end":64214,"line_start":103,"line_end":103,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2572},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":64280,"byte_end":64285,"line_start":106,"line_end":106,"column_start":5,"column_end":10},"name":"Below","qualname":"::matrix::DiagOffset::Below","value":"DiagOffset::Below(usize)","parent":{"krate":0,"index":2566},"children":[],"decl_id":null,"docs":" An offset below the main diagonal.\n","sig":null,"attributes":[{"value":"/ An offset below the main diagonal.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":64237,"byte_end":64275,"line_start":105,"line_end":105,"column_start":5,"column_end":43}}]},{"kind":"Enum","id":{"krate":0,"index":2566},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":64108,"byte_end":64118,"line_start":100,"line_end":100,"column_start":10,"column_end":20},"name":"DiagOffset","qualname":"::matrix::DiagOffset","value":"pub enum DiagOffset {\n\n    /// The main diagonal of the matrix.\n    Main,\n\n    /// An offset above the main diagonal.\n    Above(usize),\n\n    /// An offset below the main diagonal.\n    Below(usize),\n}","parent":null,"children":[{"krate":0,"index":2567},{"krate":0,"index":2569},{"krate":0,"index":2572}],"decl_id":null,"docs":" Diagonal offset (used by Diagonal iterator).\n","sig":null,"attributes":[{"value":"/ Diagonal offset (used by Diagonal iterator).","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":64022,"byte_end":64070,"line_start":98,"line_end":98,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":2581},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":64381,"byte_end":64389,"line_start":111,"line_end":111,"column_start":12,"column_end":20},"name":"Diagonal","qualname":"::matrix::Diagonal","value":"Diagonal {  }","parent":null,"children":[{"krate":0,"index":2585},{"krate":0,"index":2586},{"krate":0,"index":2587},{"krate":0,"index":2588}],"decl_id":null,"docs":" An iterator over the diagonal elements of a matrix.\n","sig":null,"attributes":[{"value":"/ An iterator over the diagonal elements of a matrix.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":64297,"byte_end":64352,"line_start":109,"line_end":109,"column_start":1,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":2594},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":64615,"byte_end":64626,"line_start":120,"line_end":120,"column_start":12,"column_end":23},"name":"DiagonalMut","qualname":"::matrix::DiagonalMut","value":"DiagonalMut {  }","parent":null,"children":[{"krate":0,"index":2598},{"krate":0,"index":2599},{"krate":0,"index":2600},{"krate":0,"index":2601}],"decl_id":null,"docs":" An iterator over the mutable diagonal elements of a matrix.\n","sig":null,"attributes":[{"value":"/ An iterator over the mutable diagonal elements of a matrix.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":64523,"byte_end":64586,"line_start":118,"line_end":118,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":597},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":65253,"byte_end":65256,"line_start":146,"line_end":146,"column_start":12,"column_end":15},"name":"new","qualname":"<Matrix<T>>::new","value":"pub fn new<U: Into<Vec<T>>>(usize, usize, U) -> Matrix<T>","parent":null,"children":[],"decl_id":null,"docs":" Constructor for Matrix struct.","sig":null,"attributes":[{"value":"/ Constructor for Matrix struct.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":64795,"byte_end":64829,"line_start":128,"line_end":128,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":64834,"byte_end":64837,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ Requires both the row and column dimensions.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":64842,"byte_end":64890,"line_start":130,"line_end":130,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":64895,"byte_end":64898,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":64903,"byte_end":64917,"line_start":132,"line_end":132,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":64922,"byte_end":64925,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":64930,"byte_end":64937,"line_start":134,"line_end":134,"column_start":5,"column_end":12}},{"value":"/ use rulinalg::matrix::{Matrix, BaseMatrix};","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":64942,"byte_end":64989,"line_start":135,"line_end":135,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":64994,"byte_end":64997,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ let mat = Matrix::new(2,2, vec![1.0,2.0,3.0,4.0]);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":65002,"byte_end":65056,"line_start":137,"line_end":137,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":65061,"byte_end":65064,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(mat.rows(), 2);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":65069,"byte_end":65099,"line_start":139,"line_end":139,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(mat.cols(), 2);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":65104,"byte_end":65134,"line_start":140,"line_end":140,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":65139,"byte_end":65146,"line_start":141,"line_end":141,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":65151,"byte_end":65154,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":65159,"byte_end":65171,"line_start":143,"line_end":143,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":65176,"byte_end":65179,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ - The input data does not match the given dimensions.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":65184,"byte_end":65241,"line_start":145,"line_end":145,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":599},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":66540,"byte_end":66547,"line_start":185,"line_end":185,"column_start":12,"column_end":19},"name":"from_fn","qualname":"<Matrix<T>>::from_fn","value":"pub fn from_fn<F>(usize, usize, F) -> Matrix<T> where F: FnMut(usize, usize)\n-> T","parent":null,"children":[],"decl_id":null,"docs":" Constructor for Matrix struct that takes a function `f`\n and constructs a new matrix such that `A_ij = f(i, j)`,\n where `i` is the row index and `j` the column index.","sig":null,"attributes":[{"value":"/ Constructor for Matrix struct that takes a function `f`","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":65580,"byte_end":65639,"line_start":158,"line_end":158,"column_start":5,"column_end":64}},{"value":"/ and constructs a new matrix such that `A_ij = f(i, j)`,","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":65644,"byte_end":65703,"line_start":159,"line_end":159,"column_start":5,"column_end":64}},{"value":"/ where `i` is the row index and `j` the column index.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":65708,"byte_end":65764,"line_start":160,"line_end":160,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":65769,"byte_end":65772,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ Requires both the row and column dimensions","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":65777,"byte_end":65824,"line_start":162,"line_end":162,"column_start":5,"column_end":52}},{"value":"/ as well as a generating function.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":65829,"byte_end":65866,"line_start":163,"line_end":163,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":65871,"byte_end":65874,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":65879,"byte_end":65893,"line_start":165,"line_end":165,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":65898,"byte_end":65901,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":65906,"byte_end":65913,"line_start":167,"line_end":167,"column_start":5,"column_end":12}},{"value":"/ use rulinalg::matrix::{Matrix, BaseMatrix};","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":65918,"byte_end":65965,"line_start":168,"line_end":168,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":65970,"byte_end":65973,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ // Let's assume you have an array of \"things\" for","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":65978,"byte_end":66031,"line_start":170,"line_end":170,"column_start":5,"column_end":58}},{"value":"/ // which you want to generate a distance matrix:","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":66036,"byte_end":66088,"line_start":171,"line_end":171,"column_start":5,"column_end":57}},{"value":"/ let things: [i32; 3] = [1, 2, 3];","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":66093,"byte_end":66130,"line_start":172,"line_end":172,"column_start":5,"column_end":42}},{"value":"/ let distances: Matrix<f64> = Matrix::from_fn(things.len(), things.len(), |col, row| {","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":66135,"byte_end":66224,"line_start":173,"line_end":173,"column_start":5,"column_end":94}},{"value":"/     (things[col] - things[row]).abs().into()","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":66229,"byte_end":66277,"line_start":174,"line_end":174,"column_start":5,"column_end":53}},{"value":"/ });","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":66282,"byte_end":66289,"line_start":175,"line_end":175,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":66294,"byte_end":66297,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(distances.rows(), 3);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":66302,"byte_end":66338,"line_start":177,"line_end":177,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(distances.cols(), 3);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":66343,"byte_end":66379,"line_start":178,"line_end":178,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(distances.data(), &vec![","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":66384,"byte_end":66423,"line_start":179,"line_end":179,"column_start":5,"column_end":44}},{"value":"/     0.0, 1.0, 2.0,","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":66428,"byte_end":66450,"line_start":180,"line_end":180,"column_start":5,"column_end":27}},{"value":"/     1.0, 0.0, 1.0,","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":66455,"byte_end":66477,"line_start":181,"line_end":181,"column_start":5,"column_end":27}},{"value":"/     2.0, 1.0, 0.0,","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":66482,"byte_end":66504,"line_start":182,"line_end":182,"column_start":5,"column_end":27}},{"value":"/ ]);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":66509,"byte_end":66516,"line_start":183,"line_end":183,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":66521,"byte_end":66528,"line_start":184,"line_end":184,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":601},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":66950,"byte_end":66954,"line_start":198,"line_end":198,"column_start":12,"column_end":16},"name":"data","qualname":"<Matrix<T>>::data","value":"pub fn data(&Self) -> &Vec<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a non-mutable reference to the underlying data.\n","sig":null,"attributes":[{"value":"/ Returns a non-mutable reference to the underlying data.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":66879,"byte_end":66938,"line_start":197,"line_end":197,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":602},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":67068,"byte_end":67076,"line_start":203,"line_end":203,"column_start":12,"column_end":20},"name":"mut_data","qualname":"<Matrix<T>>::mut_data","value":"pub fn mut_data(&mut Self) -> &mut [T]","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable slice of the underlying data.\n","sig":null,"attributes":[{"value":"/ Returns a mutable slice of the underlying data.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":67005,"byte_end":67056,"line_start":202,"line_end":202,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":603},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":67200,"byte_end":67208,"line_start":208,"line_end":208,"column_start":12,"column_end":20},"name":"into_vec","qualname":"<Matrix<T>>::into_vec","value":"pub fn into_vec(Self) -> Vec<T>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the Matrix and returns the Vec of data.\n","sig":null,"attributes":[{"value":"/ Consumes the Matrix and returns the Vec of data.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":67136,"byte_end":67188,"line_start":207,"line_end":207,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":609},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":67784,"byte_end":67789,"line_start":236,"line_end":236,"column_start":12,"column_end":17},"name":"zeros","qualname":"<Matrix<T>>::zeros","value":"pub fn zeros(usize, usize) -> Matrix<T>","parent":null,"children":[],"decl_id":null,"docs":" Constructs matrix of all zeros.","sig":null,"attributes":[{"value":"/ Constructs matrix of all zeros.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":67522,"byte_end":67557,"line_start":225,"line_end":225,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":67562,"byte_end":67565,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ Requires both the row and the column dimensions.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":67570,"byte_end":67622,"line_start":227,"line_end":227,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":67627,"byte_end":67630,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":67635,"byte_end":67649,"line_start":229,"line_end":229,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":67654,"byte_end":67657,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":67662,"byte_end":67669,"line_start":231,"line_end":231,"column_start":5,"column_end":12}},{"value":"/ use rulinalg::matrix::Matrix;","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":67674,"byte_end":67707,"line_start":232,"line_end":232,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":67712,"byte_end":67715,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ let mat = Matrix::<f64>::zeros(2,3);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":67720,"byte_end":67760,"line_start":234,"line_end":234,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":67765,"byte_end":67772,"line_start":235,"line_end":235,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":610},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":68236,"byte_end":68245,"line_start":255,"line_end":255,"column_start":12,"column_end":21},"name":"from_diag","qualname":"<Matrix<T>>::from_diag","value":"pub fn from_diag(&[T]) -> Matrix<T>","parent":null,"children":[],"decl_id":null,"docs":" Constructs matrix with given diagonal.","sig":null,"attributes":[{"value":"/ Constructs matrix with given diagonal.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":67963,"byte_end":68005,"line_start":244,"line_end":244,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":68010,"byte_end":68013,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ Requires slice of diagonal elements.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":68018,"byte_end":68058,"line_start":246,"line_end":246,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":68063,"byte_end":68066,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":68071,"byte_end":68085,"line_start":248,"line_end":248,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":68090,"byte_end":68093,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":68098,"byte_end":68105,"line_start":250,"line_end":250,"column_start":5,"column_end":12}},{"value":"/ use rulinalg::matrix::Matrix;","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":68110,"byte_end":68143,"line_start":251,"line_end":251,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":68148,"byte_end":68151,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ let mat = Matrix::from_diag(&vec![1.0,2.0,3.0,4.0]);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":68156,"byte_end":68212,"line_start":253,"line_end":253,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":68217,"byte_end":68224,"line_start":254,"line_end":254,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":613},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":68890,"byte_end":68894,"line_start":283,"line_end":283,"column_start":12,"column_end":16},"name":"ones","qualname":"<Matrix<T>>::ones","value":"pub fn ones(usize, usize) -> Matrix<T>","parent":null,"children":[],"decl_id":null,"docs":" Constructs matrix of all ones.","sig":null,"attributes":[{"value":"/ Constructs matrix of all ones.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":68630,"byte_end":68664,"line_start":272,"line_end":272,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":68669,"byte_end":68672,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ Requires both the row and the column dimensions.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":68677,"byte_end":68729,"line_start":274,"line_end":274,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":68734,"byte_end":68737,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":68742,"byte_end":68756,"line_start":276,"line_end":276,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":68761,"byte_end":68764,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":68769,"byte_end":68776,"line_start":278,"line_end":278,"column_start":5,"column_end":12}},{"value":"/ use rulinalg::matrix::Matrix;","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":68781,"byte_end":68814,"line_start":279,"line_end":279,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":68819,"byte_end":68822,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ let mat = Matrix::<f64>::ones(2,3);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":68827,"byte_end":68866,"line_start":281,"line_end":281,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":68871,"byte_end":68878,"line_start":282,"line_end":282,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":616},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":69354,"byte_end":69362,"line_start":304,"line_end":304,"column_start":12,"column_end":20},"name":"identity","qualname":"<Matrix<T>>::identity","value":"pub fn identity(usize) -> Matrix<T>","parent":null,"children":[],"decl_id":null,"docs":" Constructs the identity matrix.","sig":null,"attributes":[{"value":"/ Constructs the identity matrix.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":69109,"byte_end":69144,"line_start":293,"line_end":293,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":69149,"byte_end":69152,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ Requires the size of the matrix.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":69157,"byte_end":69193,"line_start":295,"line_end":295,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":69198,"byte_end":69201,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":69206,"byte_end":69220,"line_start":297,"line_end":297,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":69225,"byte_end":69228,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":69233,"byte_end":69240,"line_start":299,"line_end":299,"column_start":5,"column_end":12}},{"value":"/ use rulinalg::matrix::Matrix;","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":69245,"byte_end":69278,"line_start":300,"line_end":300,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":69283,"byte_end":69286,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ let I = Matrix::<f64>::identity(4);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":69291,"byte_end":69330,"line_start":302,"line_end":302,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":69335,"byte_end":69342,"line_start":303,"line_end":303,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":619},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":70299,"byte_end":70303,"line_start":340,"line_end":340,"column_start":12,"column_end":16},"name":"mean","qualname":"<Matrix<T>>::mean","value":"pub fn mean(&Self, Axes) -> Vector<T>","parent":null,"children":[],"decl_id":null,"docs":" The mean of the matrix along the specified axis.","sig":null,"attributes":[{"value":"/ The mean of the matrix along the specified axis.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":69694,"byte_end":69746,"line_start":320,"line_end":320,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":69751,"byte_end":69754,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ - Axis Row - Arithmetic mean of rows.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":69759,"byte_end":69800,"line_start":322,"line_end":322,"column_start":5,"column_end":46}},{"value":"/ - Axis Col - Arithmetic mean of columns.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":69805,"byte_end":69849,"line_start":323,"line_end":323,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":69854,"byte_end":69857,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ Calling `mean()` on an empty matrix will return an empty matrix.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":69862,"byte_end":69930,"line_start":325,"line_end":325,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":69935,"byte_end":69938,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":69943,"byte_end":69957,"line_start":327,"line_end":327,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":69962,"byte_end":69965,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":69970,"byte_end":69977,"line_start":329,"line_end":329,"column_start":5,"column_end":12}},{"value":"/ use rulinalg::matrix::{Matrix, Axes};","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":69982,"byte_end":70023,"line_start":330,"line_end":330,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":70028,"byte_end":70031,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ let a = Matrix::<f64>::new(2,2, vec![1.0,2.0,3.0,4.0]);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":70036,"byte_end":70095,"line_start":332,"line_end":332,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":70100,"byte_end":70103,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ let c = a.mean(Axes::Row);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":70108,"byte_end":70138,"line_start":334,"line_end":334,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(*c.data(), vec![2.0, 3.0]);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":70143,"byte_end":70185,"line_start":335,"line_end":335,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":70190,"byte_end":70193,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ let d = a.mean(Axes::Col);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":70198,"byte_end":70228,"line_start":337,"line_end":337,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(*d.data(), vec![1.5, 3.5]);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":70233,"byte_end":70275,"line_start":338,"line_end":338,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":70280,"byte_end":70287,"line_start":339,"line_end":339,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":620},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":71539,"byte_end":71547,"line_start":383,"line_end":383,"column_start":12,"column_end":20},"name":"variance","qualname":"<Matrix<T>>::variance","value":"pub fn variance(&Self, Axes) -> Result<Vector<T>, Error>","parent":null,"children":[],"decl_id":null,"docs":" The variance of the matrix along the specified axis.","sig":null,"attributes":[{"value":"/ The variance of the matrix along the specified axis.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":70885,"byte_end":70941,"line_start":361,"line_end":361,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":70946,"byte_end":70949,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ - Axis Row - Sample variance of rows.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":70954,"byte_end":70995,"line_start":363,"line_end":363,"column_start":5,"column_end":46}},{"value":"/ - Axis Col - Sample variance of columns.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":71000,"byte_end":71044,"line_start":364,"line_end":364,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":71049,"byte_end":71052,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":71057,"byte_end":71071,"line_start":366,"line_end":366,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":71076,"byte_end":71079,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":71084,"byte_end":71091,"line_start":368,"line_end":368,"column_start":5,"column_end":12}},{"value":"/ use rulinalg::matrix::{Matrix, Axes};","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":71096,"byte_end":71137,"line_start":369,"line_end":369,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":71142,"byte_end":71145,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ let a = Matrix::<f32>::new(2,2,vec![1.0,2.0,3.0,4.0]);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":71150,"byte_end":71208,"line_start":371,"line_end":371,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":71213,"byte_end":71216,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ let c = a.variance(Axes::Row).unwrap();","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":71221,"byte_end":71264,"line_start":373,"line_end":373,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(*c.data(), vec![2.0, 2.0]);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":71269,"byte_end":71311,"line_start":374,"line_end":374,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":71316,"byte_end":71319,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ let d = a.variance(Axes::Col).unwrap();","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":71324,"byte_end":71367,"line_start":376,"line_end":376,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(*d.data(), vec![0.5, 0.5]);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":71372,"byte_end":71414,"line_start":377,"line_end":377,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":71419,"byte_end":71426,"line_start":378,"line_end":378,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":71431,"byte_end":71434,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ # Failures","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":71439,"byte_end":71453,"line_start":380,"line_end":380,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":71458,"byte_end":71461,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ - There are one or fewer row/columns in the working axis.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":71466,"byte_end":71527,"line_start":382,"line_end":382,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":623},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":73601,"byte_end":73606,"line_start":461,"line_end":461,"column_start":12,"column_end":17},"name":"solve","qualname":"<Matrix<T>>::solve","value":"pub fn solve(&Self, Vector<T>) -> Result<Vector<T>, Error>","parent":null,"children":[],"decl_id":null,"docs":" Solves the equation `Ax = y`.","sig":null,"attributes":[{"value":"/ Solves the equation `Ax = y`.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":72861,"byte_end":72894,"line_start":434,"line_end":434,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":72899,"byte_end":72902,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ Requires a Vector `y` as input.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":72907,"byte_end":72942,"line_start":436,"line_end":436,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":72947,"byte_end":72950,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":72955,"byte_end":72969,"line_start":438,"line_end":438,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":72974,"byte_end":72977,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":72982,"byte_end":72989,"line_start":440,"line_end":440,"column_start":5,"column_end":12}},{"value":"/ use rulinalg::matrix::Matrix;","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":72994,"byte_end":73027,"line_start":441,"line_end":441,"column_start":5,"column_end":38}},{"value":"/ use rulinalg::vector::Vector;","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":73032,"byte_end":73065,"line_start":442,"line_end":442,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":73070,"byte_end":73073,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ let a = Matrix::new(2,2, vec![2.0,3.0,1.0,2.0]);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":73078,"byte_end":73130,"line_start":444,"line_end":444,"column_start":5,"column_end":57}},{"value":"/ let y = Vector::new(vec![13.0,8.0]);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":73135,"byte_end":73175,"line_start":445,"line_end":445,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":73180,"byte_end":73183,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ let x = a.solve(y).unwrap();","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":73188,"byte_end":73220,"line_start":447,"line_end":447,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":73225,"byte_end":73228,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(*x.data(), vec![2.0, 3.0]);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":73233,"byte_end":73275,"line_start":449,"line_end":449,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":73280,"byte_end":73287,"line_start":450,"line_end":450,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":73292,"byte_end":73295,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":73300,"byte_end":73312,"line_start":452,"line_end":452,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":73317,"byte_end":73320,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ - The matrix column count and vector size are different.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":73325,"byte_end":73385,"line_start":454,"line_end":454,"column_start":5,"column_end":65}},{"value":"/ - The matrix is not square.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":73390,"byte_end":73421,"line_start":455,"line_end":455,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":73426,"byte_end":73429,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ # Failures","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":73434,"byte_end":73448,"line_start":457,"line_end":457,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":73453,"byte_end":73456,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ - The matrix cannot be decomposed into an LUP form to solve.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":73461,"byte_end":73525,"line_start":459,"line_end":459,"column_start":5,"column_end":69}},{"value":"/ - There is no valid solution as the matrix is singular.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":73530,"byte_end":73589,"line_start":460,"line_end":460,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":624},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":74385,"byte_end":74392,"line_start":491,"line_end":491,"column_start":12,"column_end":19},"name":"inverse","qualname":"<Matrix<T>>::inverse","value":"pub fn inverse(&Self) -> Result<Matrix<T>, Error>","parent":null,"children":[],"decl_id":null,"docs":" Computes the inverse of the matrix.","sig":null,"attributes":[{"value":"/ Computes the inverse of the matrix.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":73807,"byte_end":73846,"line_start":468,"line_end":468,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":73851,"byte_end":73854,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":73859,"byte_end":73873,"line_start":470,"line_end":470,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":73878,"byte_end":73881,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":73886,"byte_end":73893,"line_start":472,"line_end":472,"column_start":5,"column_end":12}},{"value":"/ use rulinalg::matrix::Matrix;","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":73898,"byte_end":73931,"line_start":473,"line_end":473,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":73936,"byte_end":73939,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ let a = Matrix::new(2,2, vec![2.,3.,1.,2.]);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":73944,"byte_end":73992,"line_start":475,"line_end":475,"column_start":5,"column_end":53}},{"value":"/ let inv = a.inverse().expect(\"This matrix should have an inverse!\");","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":73997,"byte_end":74069,"line_start":476,"line_end":476,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":74074,"byte_end":74077,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ let I = a * inv;","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":74082,"byte_end":74102,"line_start":478,"line_end":478,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":74107,"byte_end":74110,"line_start":479,"line_end":479,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(*I.data(), vec![1.0,0.0,0.0,1.0]);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":74115,"byte_end":74164,"line_start":480,"line_end":480,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":74169,"byte_end":74176,"line_start":481,"line_end":481,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":74181,"byte_end":74184,"line_start":482,"line_end":482,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":74189,"byte_end":74201,"line_start":483,"line_end":483,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":74206,"byte_end":74209,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/ - The matrix is not square.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":74214,"byte_end":74245,"line_start":485,"line_end":485,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":74250,"byte_end":74253,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/ # Failures","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":74258,"byte_end":74272,"line_start":487,"line_end":487,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":74277,"byte_end":74280,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/ - The matrix could not be LUP decomposed.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":74285,"byte_end":74330,"line_start":489,"line_end":489,"column_start":5,"column_end":50}},{"value":"/ - The matrix has zero determinant.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":74335,"byte_end":74373,"line_start":490,"line_end":490,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":625},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":76091,"byte_end":76094,"line_start":547,"line_end":547,"column_start":12,"column_end":15},"name":"det","qualname":"<Matrix<T>>::det","value":"pub fn det(&Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Computes the determinant of the matrix.","sig":null,"attributes":[{"value":"/ Computes the determinant of the matrix.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":75662,"byte_end":75705,"line_start":529,"line_end":529,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":75710,"byte_end":75713,"line_start":530,"line_end":530,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":75718,"byte_end":75732,"line_start":531,"line_end":531,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":75737,"byte_end":75740,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":75745,"byte_end":75752,"line_start":533,"line_end":533,"column_start":5,"column_end":12}},{"value":"/ use rulinalg::matrix::Matrix;","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":75757,"byte_end":75790,"line_start":534,"line_end":534,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":75795,"byte_end":75798,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/ let a = Matrix::new(3,3, vec![1.0,2.0,0.0,","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":75803,"byte_end":75849,"line_start":536,"line_end":536,"column_start":5,"column_end":51}},{"value":"/                               0.0,3.0,4.0,","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":75854,"byte_end":75900,"line_start":537,"line_end":537,"column_start":5,"column_end":51}},{"value":"/                               5.0, 1.0, 2.0]);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":75905,"byte_end":75955,"line_start":538,"line_end":538,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":75960,"byte_end":75963,"line_start":539,"line_end":539,"column_start":5,"column_end":8}},{"value":"/ let det = a.det();","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":75968,"byte_end":75990,"line_start":540,"line_end":540,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":75995,"byte_end":75998,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":76003,"byte_end":76010,"line_start":542,"line_end":542,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":76015,"byte_end":76018,"line_start":543,"line_end":543,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":76023,"byte_end":76035,"line_start":544,"line_end":544,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":76040,"byte_end":76043,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ - The matrix is not square.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":76048,"byte_end":76079,"line_start":546,"line_end":546,"column_start":5,"column_end":36}}]},{"kind":"Mod","id":{"krate":0,"index":651},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\convert.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"convert","qualname":"::convert","value":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\convert.rs","parent":null,"children":[{"krate":0,"index":652},{"krate":0,"index":653},{"krate":0,"index":654},{"krate":0,"index":655},{"krate":0,"index":656},{"krate":0,"index":657},{"krate":0,"index":658},{"krate":0,"index":659},{"krate":0,"index":660},{"krate":0,"index":661},{"krate":0,"index":664},{"krate":0,"index":668},{"krate":0,"index":2608},{"krate":0,"index":2612},{"krate":0,"index":2616},{"krate":0,"index":2618},{"krate":0,"index":2620},{"krate":0,"index":2622},{"krate":0,"index":2624}],"decl_id":null,"docs":" The convert module.","sig":null,"attributes":[{"value":"/ The convert module.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\convert.rs","byte_start":281161,"byte_end":281184,"line_start":1,"line_end":1,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\convert.rs","byte_start":281185,"byte_end":281188,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Contains implementations of `std::convert::From`","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\convert.rs","byte_start":281189,"byte_end":281241,"line_start":3,"line_end":3,"column_start":1,"column_end":53}},{"value":"/ for Matrix and Vector types.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\convert.rs","byte_start":281242,"byte_end":281274,"line_start":4,"line_end":4,"column_start":1,"column_end":33}}]},{"kind":"Mod","id":{"krate":0,"index":673},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\error.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"error","qualname":"::error","value":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\error.rs","parent":null,"children":[{"krate":0,"index":674},{"krate":0,"index":675},{"krate":0,"index":676},{"krate":0,"index":677},{"krate":0,"index":678},{"krate":0,"index":679},{"krate":0,"index":680},{"krate":0,"index":2626},{"krate":0,"index":2629},{"krate":0,"index":2631},{"krate":0,"index":2643},{"krate":0,"index":2640},{"krate":0,"index":2641},{"krate":0,"index":681},{"krate":0,"index":685},{"krate":0,"index":687}],"decl_id":null,"docs":" Error handling for the linalg module.\n","sig":null,"attributes":[{"value":"/ Error handling for the linalg module.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\error.rs","byte_start":284003,"byte_end":284044,"line_start":1,"line_end":1,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":2626},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\error.rs","byte_start":284224,"byte_end":284229,"line_start":11,"line_end":11,"column_start":12,"column_end":17},"name":"Error","qualname":"::error::Error","value":"Error {  }","parent":null,"children":[{"krate":0,"index":2627},{"krate":0,"index":2628}],"decl_id":null,"docs":" An error related to the linalg module.\n","sig":null,"attributes":[{"value":"/ An error related to the linalg module.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\error.rs","byte_start":284153,"byte_end":284195,"line_start":9,"line_end":9,"column_start":1,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2632},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\error.rs","byte_start":284570,"byte_end":284580,"line_start":23,"line_end":23,"column_start":5,"column_end":15},"name":"InvalidArg","qualname":"::error::ErrorKind::InvalidArg","value":"ErrorKind::InvalidArg","parent":{"krate":0,"index":2631},"children":[],"decl_id":null,"docs":" An argument did not uphold a necessary criteria for the function.\n","sig":null,"attributes":[{"value":"/ An argument did not uphold a necessary criteria for the function.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\error.rs","byte_start":284496,"byte_end":284565,"line_start":22,"line_end":22,"column_start":5,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2634},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\error.rs","byte_start":284651,"byte_end":284664,"line_start":25,"line_end":25,"column_start":5,"column_end":18},"name":"DecompFailure","qualname":"::error::ErrorKind::DecompFailure","value":"ErrorKind::DecompFailure","parent":{"krate":0,"index":2631},"children":[],"decl_id":null,"docs":" A failure to decompose due to some property of the data.\n","sig":null,"attributes":[{"value":"/ A failure to decompose due to some property of the data.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\error.rs","byte_start":284586,"byte_end":284646,"line_start":24,"line_end":24,"column_start":5,"column_end":65}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2636},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\error.rs","byte_start":284737,"byte_end":284751,"line_start":27,"line_end":27,"column_start":5,"column_end":19},"name":"AlgebraFailure","qualname":"::error::ErrorKind::AlgebraFailure","value":"ErrorKind::AlgebraFailure","parent":{"krate":0,"index":2631},"children":[],"decl_id":null,"docs":" A failure due to some algebraic constraints not being met.\n","sig":null,"attributes":[{"value":"/ A failure due to some algebraic constraints not being met.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\error.rs","byte_start":284670,"byte_end":284732,"line_start":26,"line_end":26,"column_start":5,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2638},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\error.rs","byte_start":284789,"byte_end":284798,"line_start":29,"line_end":29,"column_start":5,"column_end":14},"name":"DivByZero","qualname":"::error::ErrorKind::DivByZero","value":"ErrorKind::DivByZero","parent":{"krate":0,"index":2631},"children":[],"decl_id":null,"docs":" Tried to divide by zero\n","sig":null,"attributes":[{"value":"/ Tried to divide by zero","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\error.rs","byte_start":284757,"byte_end":284784,"line_start":28,"line_end":28,"column_start":5,"column_end":32}}]},{"kind":"Enum","id":{"krate":0,"index":2631},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\error.rs","byte_start":284480,"byte_end":284489,"line_start":21,"line_end":21,"column_start":10,"column_end":19},"name":"ErrorKind","qualname":"::error::ErrorKind","value":"pub enum ErrorKind {\n\n    /// An argument did not uphold a necessary criteria for the function.\n    InvalidArg,\n\n    /// A failure to decompose due to some property of the data.\n    DecompFailure,\n\n    /// A failure due to some algebraic constraints not being met.\n    AlgebraFailure,\n\n    /// Tried to divide by zero\n    DivByZero,\n}","parent":null,"children":[{"krate":0,"index":2632},{"krate":0,"index":2634},{"krate":0,"index":2636},{"krate":0,"index":2638}],"decl_id":null,"docs":" Types of errors produced in the linalg module.","sig":null,"attributes":[{"value":"/ Types of errors produced in the linalg module.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\error.rs","byte_start":284300,"byte_end":284350,"line_start":16,"line_end":16,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\error.rs","byte_start":284351,"byte_end":284354,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ List intended to grow and so you should","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\error.rs","byte_start":284355,"byte_end":284398,"line_start":18,"line_end":18,"column_start":1,"column_end":44}},{"value":"/ be wary of matching against explicitly.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\error.rs","byte_start":284399,"byte_end":284442,"line_start":19,"line_end":19,"column_start":1,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":682},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\error.rs","byte_start":284887,"byte_end":284890,"line_start":34,"line_end":34,"column_start":12,"column_end":15},"name":"new","qualname":"<Error>::new","value":"pub fn new<E>(ErrorKind, E) -> Error where\nE: Into<Box<error::Error + Send + Sync>>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `Error` of a particular `ErrorKind`.\n","sig":null,"attributes":[{"value":"/ Construct a new `Error` of a particular `ErrorKind`.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\error.rs","byte_start":284819,"byte_end":284875,"line_start":33,"line_end":33,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":684},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\error.rs","byte_start":285130,"byte_end":285134,"line_start":44,"line_end":44,"column_start":12,"column_end":16},"name":"kind","qualname":"<Error>::kind","value":"pub fn kind(&Self) -> &ErrorKind","parent":null,"children":[],"decl_id":null,"docs":" Get the kind of this `Error`.\n","sig":null,"attributes":[{"value":"/ Get the kind of this `Error`.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\error.rs","byte_start":285085,"byte_end":285118,"line_start":43,"line_end":43,"column_start":5,"column_end":38}}]},{"kind":"Mod","id":{"krate":0,"index":689},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"utils","qualname":"::utils","value":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","parent":null,"children":[{"krate":0,"index":690},{"krate":0,"index":691},{"krate":0,"index":692},{"krate":0,"index":693},{"krate":0,"index":694},{"krate":0,"index":695},{"krate":0,"index":696},{"krate":0,"index":697},{"krate":0,"index":699},{"krate":0,"index":701},{"krate":0,"index":704},{"krate":0,"index":707},{"krate":0,"index":710},{"krate":0,"index":713},{"krate":0,"index":716},{"krate":0,"index":719},{"krate":0,"index":721},{"krate":0,"index":723}],"decl_id":null,"docs":" Linear algebra utils module.","sig":null,"attributes":[{"value":"/ Linear algebra utils module.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":285418,"byte_end":285450,"line_start":1,"line_end":1,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":285451,"byte_end":285454,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Contains support methods for linear algebra structs.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":285455,"byte_end":285511,"line_start":3,"line_end":3,"column_start":1,"column_end":57}}]},{"kind":"Function","id":{"krate":0,"index":697},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":285797,"byte_end":285800,"line_start":20,"line_end":20,"column_start":8,"column_end":11},"name":"dot","qualname":"::utils::dot","value":"pub fn dot<T: Copy + Zero + Add<T, Output = T> + Mul<T, Output =\n           T>>(&[T], &[T]) -> T","parent":null,"children":[],"decl_id":null,"docs":" Compute dot product of two slices.","sig":null,"attributes":[{"value":"/ Compute dot product of two slices.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":285582,"byte_end":285620,"line_start":9,"line_end":9,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":285621,"byte_end":285624,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":285625,"byte_end":285639,"line_start":11,"line_end":11,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":285640,"byte_end":285643,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":285644,"byte_end":285651,"line_start":13,"line_end":13,"column_start":1,"column_end":8}},{"value":"/ use rulinalg::utils;","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":285652,"byte_end":285676,"line_start":14,"line_end":14,"column_start":1,"column_end":25}},{"value":"/ let a = vec![1.0,2.0,3.0,4.0];","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":285677,"byte_end":285711,"line_start":15,"line_end":15,"column_start":1,"column_end":35}},{"value":"/ let b = vec![1.0,2.0,3.0,4.0];","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":285712,"byte_end":285746,"line_start":16,"line_end":16,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":285747,"byte_end":285750,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ let c = utils::dot(&a,&b);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":285751,"byte_end":285781,"line_start":18,"line_end":18,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":285782,"byte_end":285789,"line_start":19,"line_end":19,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":699},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":286826,"byte_end":286838,"line_start":58,"line_end":58,"column_start":8,"column_end":20},"name":"unrolled_sum","qualname":"::utils::unrolled_sum","value":"pub fn unrolled_sum<T>(&[T]) -> T where T: Clone + Add<Output = T> + Zero","parent":null,"children":[],"decl_id":null,"docs":" Unrolled sum","sig":null,"attributes":[{"value":"/ Unrolled sum","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":286685,"byte_end":286701,"line_start":53,"line_end":53,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":286702,"byte_end":286705,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ Computes the sum over the slice consuming it in the process.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":286706,"byte_end":286770,"line_start":55,"line_end":55,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":286771,"byte_end":286774,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ Given graciously by bluss from ndarray!","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":286775,"byte_end":286818,"line_start":57,"line_end":57,"column_start":1,"column_end":44}}]},{"kind":"Function","id":{"krate":0,"index":701},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":288226,"byte_end":288245,"line_start":105,"line_end":105,"column_start":8,"column_end":27},"name":"in_place_vec_bin_op","qualname":"::utils::in_place_vec_bin_op","value":"pub fn in_place_vec_bin_op<F, T>(&mut [T], &[T], F) where F: FnMut(&mut T, &T)\n-> (), T: Copy","parent":null,"children":[],"decl_id":null,"docs":" Vectorized binary operation applied to two slices.\n The first argument should be a mutable slice which will\n be modified in place to prevent new memory allocation.","sig":null,"attributes":[{"value":"/ Vectorized binary operation applied to two slices.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":287774,"byte_end":287828,"line_start":88,"line_end":88,"column_start":1,"column_end":55}},{"value":"/ The first argument should be a mutable slice which will","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":287829,"byte_end":287888,"line_start":89,"line_end":89,"column_start":1,"column_end":60}},{"value":"/ be modified in place to prevent new memory allocation.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":287889,"byte_end":287947,"line_start":90,"line_end":90,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":287948,"byte_end":287951,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":287952,"byte_end":287966,"line_start":92,"line_end":92,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":287967,"byte_end":287970,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":287971,"byte_end":287978,"line_start":94,"line_end":94,"column_start":1,"column_end":8}},{"value":"/ use rulinalg::utils;","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":287979,"byte_end":288003,"line_start":95,"line_end":95,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":288004,"byte_end":288007,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ let mut a = vec![2.0; 10];","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":288008,"byte_end":288038,"line_start":97,"line_end":97,"column_start":1,"column_end":31}},{"value":"/ let b = vec![3.0; 10];","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":288039,"byte_end":288065,"line_start":98,"line_end":98,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":288066,"byte_end":288069,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ utils::in_place_vec_bin_op(&mut a, &b, |x, &y| { *x = 1f64 + *x * y });","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":288070,"byte_end":288145,"line_start":100,"line_end":100,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":288146,"byte_end":288149,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ // Will print a vector of `7`s.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":288150,"byte_end":288185,"line_start":102,"line_end":102,"column_start":1,"column_end":36}},{"value":"/ println!(\"{:?}\", a);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":288186,"byte_end":288210,"line_start":103,"line_end":103,"column_start":1,"column_end":25}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":288211,"byte_end":288218,"line_start":104,"line_end":104,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":704},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":288858,"byte_end":288868,"line_start":135,"line_end":135,"column_start":8,"column_end":18},"name":"vec_bin_op","qualname":"::utils::vec_bin_op","value":"pub fn vec_bin_op<F, T>(&[T], &[T], F) -> Vec<T> where F: Fn(T, T) -> T,\nT: Copy","parent":null,"children":[],"decl_id":null,"docs":" Vectorized binary operation applied to two slices.","sig":null,"attributes":[{"value":"/ Vectorized binary operation applied to two slices.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":288537,"byte_end":288591,"line_start":120,"line_end":120,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":288592,"byte_end":288595,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":288596,"byte_end":288610,"line_start":122,"line_end":122,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":288611,"byte_end":288614,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":288615,"byte_end":288622,"line_start":124,"line_end":124,"column_start":1,"column_end":8}},{"value":"/ use rulinalg::utils;","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":288623,"byte_end":288647,"line_start":125,"line_end":125,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":288648,"byte_end":288651,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ let mut a = vec![2.0; 10];","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":288652,"byte_end":288682,"line_start":127,"line_end":127,"column_start":1,"column_end":31}},{"value":"/ let b = vec![3.0; 10];","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":288683,"byte_end":288709,"line_start":128,"line_end":128,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":288710,"byte_end":288713,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ let c = utils::vec_bin_op(&a, &b, |x, y| { 1f64 + x * y });","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":288714,"byte_end":288777,"line_start":130,"line_end":130,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":288778,"byte_end":288781,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ // Will print a vector of `7`s.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":288782,"byte_end":288817,"line_start":132,"line_end":132,"column_start":1,"column_end":36}},{"value":"/ println!(\"{:?}\", a);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":288818,"byte_end":288842,"line_start":133,"line_end":133,"column_start":1,"column_end":25}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":288843,"byte_end":288850,"line_start":134,"line_end":134,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":707},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":289606,"byte_end":289613,"line_start":174,"line_end":174,"column_start":8,"column_end":15},"name":"vec_sum","qualname":"::utils::vec_sum","value":"pub fn vec_sum<T: Copy + Add<T, Output = T>>(&[T], &[T]) -> Vec<T>","parent":null,"children":[],"decl_id":null,"docs":" Compute vector sum of two slices.","sig":null,"attributes":[{"value":"/ Compute vector sum of two slices.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":289340,"byte_end":289377,"line_start":161,"line_end":161,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":289378,"byte_end":289381,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":289382,"byte_end":289396,"line_start":163,"line_end":163,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":289397,"byte_end":289400,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":289401,"byte_end":289408,"line_start":165,"line_end":165,"column_start":1,"column_end":8}},{"value":"/ use rulinalg::utils;","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":289409,"byte_end":289433,"line_start":166,"line_end":166,"column_start":1,"column_end":25}},{"value":"/ let a = vec![1.0,2.0,3.0,4.0];","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":289434,"byte_end":289468,"line_start":167,"line_end":167,"column_start":1,"column_end":35}},{"value":"/ let b = vec![1.0,2.0,3.0,4.0];","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":289469,"byte_end":289503,"line_start":168,"line_end":168,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":289504,"byte_end":289507,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ let c = utils::vec_sum(&a,&b);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":289508,"byte_end":289542,"line_start":170,"line_end":170,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":289543,"byte_end":289546,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(c, vec![2.0,4.0, 6.0, 8.0]);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":289547,"byte_end":289590,"line_start":172,"line_end":172,"column_start":1,"column_end":44}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":289591,"byte_end":289598,"line_start":173,"line_end":173,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":710},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":289972,"byte_end":289979,"line_start":192,"line_end":192,"column_start":8,"column_end":15},"name":"vec_sub","qualname":"::utils::vec_sub","value":"pub fn vec_sub<T: Copy + Sub<T, Output = T>>(&[T], &[T]) -> Vec<T>","parent":null,"children":[],"decl_id":null,"docs":" Compute vector difference two slices.","sig":null,"attributes":[{"value":"/ Compute vector difference two slices.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":289713,"byte_end":289754,"line_start":179,"line_end":179,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":289755,"byte_end":289758,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":289759,"byte_end":289773,"line_start":181,"line_end":181,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":289774,"byte_end":289777,"line_start":182,"line_end":182,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":289778,"byte_end":289785,"line_start":183,"line_end":183,"column_start":1,"column_end":8}},{"value":"/ use rulinalg::utils;","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":289786,"byte_end":289810,"line_start":184,"line_end":184,"column_start":1,"column_end":25}},{"value":"/ let a = vec![1.0,2.0,3.0,4.0];","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":289811,"byte_end":289845,"line_start":185,"line_end":185,"column_start":1,"column_end":35}},{"value":"/ let b = vec![1.0,2.0,3.0,4.0];","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":289846,"byte_end":289880,"line_start":186,"line_end":186,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":289881,"byte_end":289884,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"/ let c = utils::vec_sub(&a,&b);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":289885,"byte_end":289919,"line_start":188,"line_end":188,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":289920,"byte_end":289923,"line_start":189,"line_end":189,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(c, vec![0.0; 4]);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":289924,"byte_end":289956,"line_start":190,"line_end":190,"column_start":1,"column_end":33}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":289957,"byte_end":289964,"line_start":191,"line_end":191,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":713},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":290346,"byte_end":290353,"line_start":209,"line_end":209,"column_start":8,"column_end":15},"name":"ele_mul","qualname":"::utils::ele_mul","value":"pub fn ele_mul<T: Copy + Mul<T, Output = T>>(&[T], &[T]) -> Vec<T>","parent":null,"children":[],"decl_id":null,"docs":" Computes elementwise multiplication.","sig":null,"attributes":[{"value":"/ Computes elementwise multiplication.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":290078,"byte_end":290118,"line_start":196,"line_end":196,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":290119,"byte_end":290122,"line_start":197,"line_end":197,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":290123,"byte_end":290137,"line_start":198,"line_end":198,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":290138,"byte_end":290141,"line_start":199,"line_end":199,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":290142,"byte_end":290149,"line_start":200,"line_end":200,"column_start":1,"column_end":8}},{"value":"/ use rulinalg::utils;","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":290150,"byte_end":290174,"line_start":201,"line_end":201,"column_start":1,"column_end":25}},{"value":"/ let a = vec![1.0,2.0,3.0,4.0];","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":290175,"byte_end":290209,"line_start":202,"line_end":202,"column_start":1,"column_end":35}},{"value":"/ let b = vec![1.0,2.0,3.0,4.0];","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":290210,"byte_end":290244,"line_start":203,"line_end":203,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":290245,"byte_end":290248,"line_start":204,"line_end":204,"column_start":1,"column_end":4}},{"value":"/ let c = utils::ele_mul(&a,&b);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":290249,"byte_end":290283,"line_start":205,"line_end":205,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":290284,"byte_end":290287,"line_start":206,"line_end":206,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(c, vec![1.0,4.0,9.0,16.0]);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":290288,"byte_end":290330,"line_start":207,"line_end":207,"column_start":1,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":290331,"byte_end":290338,"line_start":208,"line_end":208,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":716},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":290704,"byte_end":290711,"line_start":226,"line_end":226,"column_start":8,"column_end":15},"name":"ele_div","qualname":"::utils::ele_div","value":"pub fn ele_div<T: Copy + Div<T, Output = T>>(&[T], &[T]) -> Vec<T>","parent":null,"children":[],"decl_id":null,"docs":" Computes elementwise division.","sig":null,"attributes":[{"value":"/ Computes elementwise division.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":290452,"byte_end":290486,"line_start":213,"line_end":213,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":290487,"byte_end":290490,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":290491,"byte_end":290505,"line_start":215,"line_end":215,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":290506,"byte_end":290509,"line_start":216,"line_end":216,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":290510,"byte_end":290517,"line_start":217,"line_end":217,"column_start":1,"column_end":8}},{"value":"/ use rulinalg::utils;","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":290518,"byte_end":290542,"line_start":218,"line_end":218,"column_start":1,"column_end":25}},{"value":"/ let a = vec![1.0,2.0,3.0,4.0];","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":290543,"byte_end":290577,"line_start":219,"line_end":219,"column_start":1,"column_end":35}},{"value":"/ let b = vec![1.0,2.0,3.0,4.0];","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":290578,"byte_end":290612,"line_start":220,"line_end":220,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":290613,"byte_end":290616,"line_start":221,"line_end":221,"column_start":1,"column_end":4}},{"value":"/ let c = utils::ele_div(&a,&b);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":290617,"byte_end":290651,"line_start":222,"line_end":222,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":290652,"byte_end":290655,"line_start":223,"line_end":223,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(c, vec![1.0; 4]);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":290656,"byte_end":290688,"line_start":224,"line_end":224,"column_start":1,"column_end":33}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":290689,"byte_end":290696,"line_start":225,"line_end":225,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":719},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":291077,"byte_end":291083,"line_start":245,"line_end":245,"column_start":8,"column_end":14},"name":"argmax","qualname":"::utils::argmax","value":"pub fn argmax<T>(&[T]) -> (usize, T) where T: Copy + PartialOrd","parent":null,"children":[],"decl_id":null,"docs":" Find argmax of slice.","sig":null,"attributes":[{"value":"/ Find argmax of slice.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":290811,"byte_end":290836,"line_start":231,"line_end":231,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":290837,"byte_end":290840,"line_start":232,"line_end":232,"column_start":1,"column_end":4}},{"value":"/ Returns index of first occuring maximum.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":290841,"byte_end":290885,"line_start":233,"line_end":233,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":290886,"byte_end":290889,"line_start":234,"line_end":234,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":290890,"byte_end":290904,"line_start":235,"line_end":235,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":290905,"byte_end":290908,"line_start":236,"line_end":236,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":290909,"byte_end":290916,"line_start":237,"line_end":237,"column_start":1,"column_end":8}},{"value":"/ use rulinalg::utils;","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":290917,"byte_end":290941,"line_start":238,"line_end":238,"column_start":1,"column_end":25}},{"value":"/ let a = vec![1.0,2.0,3.0,4.0];","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":290942,"byte_end":290976,"line_start":239,"line_end":239,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":290977,"byte_end":290980,"line_start":240,"line_end":240,"column_start":1,"column_end":4}},{"value":"/ let c = utils::argmax(&a);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":290981,"byte_end":291011,"line_start":241,"line_end":241,"column_start":1,"column_end":31}},{"value":"/ assert_eq!(c.0, 3);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":291012,"byte_end":291035,"line_start":242,"line_end":242,"column_start":1,"column_end":24}},{"value":"/ assert_eq!(c.1, 4.0);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":291036,"byte_end":291061,"line_start":243,"line_end":243,"column_start":1,"column_end":26}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":291062,"byte_end":291069,"line_start":244,"line_end":244,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":721},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":291658,"byte_end":291664,"line_start":277,"line_end":277,"column_start":8,"column_end":14},"name":"argmin","qualname":"::utils::argmin","value":"pub fn argmin<T>(&[T]) -> (usize, T) where T: Copy + PartialOrd","parent":null,"children":[],"decl_id":null,"docs":" Find argmin of slice.","sig":null,"attributes":[{"value":"/ Find argmin of slice.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":291392,"byte_end":291417,"line_start":263,"line_end":263,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":291418,"byte_end":291421,"line_start":264,"line_end":264,"column_start":1,"column_end":4}},{"value":"/ Returns index of first occuring minimum.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":291422,"byte_end":291466,"line_start":265,"line_end":265,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":291467,"byte_end":291470,"line_start":266,"line_end":266,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":291471,"byte_end":291485,"line_start":267,"line_end":267,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":291486,"byte_end":291489,"line_start":268,"line_end":268,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":291490,"byte_end":291497,"line_start":269,"line_end":269,"column_start":1,"column_end":8}},{"value":"/ use rulinalg::utils;","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":291498,"byte_end":291522,"line_start":270,"line_end":270,"column_start":1,"column_end":25}},{"value":"/ let a = vec![5.0,2.0,3.0,4.0];","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":291523,"byte_end":291557,"line_start":271,"line_end":271,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":291558,"byte_end":291561,"line_start":272,"line_end":272,"column_start":1,"column_end":4}},{"value":"/ let c = utils::argmin(&a);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":291562,"byte_end":291592,"line_start":273,"line_end":273,"column_start":1,"column_end":31}},{"value":"/ assert_eq!(c.0, 1);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":291593,"byte_end":291616,"line_start":274,"line_end":274,"column_start":1,"column_end":24}},{"value":"/ assert_eq!(c.1, 2.0);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":291617,"byte_end":291642,"line_start":275,"line_end":275,"column_start":1,"column_end":26}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":291643,"byte_end":291650,"line_start":276,"line_end":276,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":723},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":292220,"byte_end":292224,"line_start":308,"line_end":308,"column_start":8,"column_end":12},"name":"find","qualname":"::utils::find","value":"pub fn find<T>(&[T], T) -> usize where T: PartialOrd","parent":null,"children":[],"decl_id":null,"docs":" Find index of value in slice.","sig":null,"attributes":[{"value":"/ Find index of value in slice.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":291973,"byte_end":292006,"line_start":295,"line_end":295,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":292007,"byte_end":292010,"line_start":296,"line_end":296,"column_start":1,"column_end":4}},{"value":"/ Returns index of first occuring value.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":292011,"byte_end":292053,"line_start":297,"line_end":297,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":292054,"byte_end":292057,"line_start":298,"line_end":298,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":292058,"byte_end":292072,"line_start":299,"line_end":299,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":292073,"byte_end":292076,"line_start":300,"line_end":300,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":292077,"byte_end":292084,"line_start":301,"line_end":301,"column_start":1,"column_end":8}},{"value":"/ use rulinalg::utils;","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":292085,"byte_end":292109,"line_start":302,"line_end":302,"column_start":1,"column_end":25}},{"value":"/ let a = vec![1.0,2.0,3.0,4.0];","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":292110,"byte_end":292144,"line_start":303,"line_end":303,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":292145,"byte_end":292148,"line_start":304,"line_end":304,"column_start":1,"column_end":4}},{"value":"/ let c = utils::find(&a, 3.0);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":292149,"byte_end":292182,"line_start":305,"line_end":305,"column_start":1,"column_end":34}},{"value":"/ assert_eq!(c, 2);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":292183,"byte_end":292204,"line_start":306,"line_end":306,"column_start":1,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\utils.rs","byte_start":292205,"byte_end":292212,"line_start":307,"line_end":307,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":725},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"vector","qualname":"::vector","value":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","parent":null,"children":[{"krate":0,"index":726},{"krate":0,"index":727},{"krate":0,"index":728},{"krate":0,"index":729},{"krate":0,"index":730},{"krate":0,"index":731},{"krate":0,"index":732},{"krate":0,"index":733},{"krate":0,"index":734},{"krate":0,"index":735},{"krate":0,"index":736},{"krate":0,"index":737},{"krate":0,"index":738},{"krate":0,"index":739},{"krate":0,"index":740},{"krate":0,"index":741},{"krate":0,"index":742},{"krate":0,"index":743},{"krate":0,"index":3140},{"krate":0,"index":744},{"krate":0,"index":745},{"krate":0,"index":746},{"krate":0,"index":747},{"krate":0,"index":748},{"krate":0,"index":749},{"krate":0,"index":750},{"krate":0,"index":2645},{"krate":0,"index":2664},{"krate":0,"index":2658},{"krate":0,"index":2660},{"krate":0,"index":2653},{"krate":0,"index":2655},{"krate":0,"index":2649},{"krate":0,"index":751},{"krate":0,"index":761},{"krate":0,"index":764},{"krate":0,"index":769},{"krate":0,"index":775},{"krate":0,"index":778},{"krate":0,"index":781},{"krate":0,"index":784},{"krate":0,"index":789},{"krate":0,"index":792},{"krate":0,"index":795},{"krate":0,"index":798},{"krate":0,"index":801},{"krate":0,"index":804},{"krate":0,"index":807},{"krate":0,"index":811},{"krate":0,"index":815},{"krate":0,"index":820},{"krate":0,"index":825},{"krate":0,"index":832},{"krate":0,"index":836},{"krate":0,"index":841},{"krate":0,"index":846},{"krate":0,"index":853},{"krate":0,"index":857},{"krate":0,"index":862},{"krate":0,"index":867},{"krate":0,"index":874},{"krate":0,"index":878},{"krate":0,"index":883},{"krate":0,"index":889},{"krate":0,"index":895},{"krate":0,"index":899},{"krate":0,"index":904},{"krate":0,"index":909},{"krate":0,"index":916},{"krate":0,"index":920},{"krate":0,"index":926},{"krate":0,"index":932},{"krate":0,"index":938},{"krate":0,"index":942},{"krate":0,"index":948},{"krate":0,"index":952},{"krate":0,"index":955},{"krate":0,"index":2667},{"krate":0,"index":2670},{"krate":0,"index":2674},{"krate":0,"index":2677},{"krate":0,"index":2681},{"krate":0,"index":2684},{"krate":0,"index":2688},{"krate":0,"index":2691},{"krate":0,"index":2695},{"krate":0,"index":2699},{"krate":0,"index":2704},{"krate":0,"index":2708}],"decl_id":null,"docs":" The vector module.","sig":null,"attributes":[{"value":"/ The vector module.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":292413,"byte_end":292435,"line_start":1,"line_end":1,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":292436,"byte_end":292439,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Currently contains all code","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":292440,"byte_end":292471,"line_start":3,"line_end":3,"column_start":1,"column_end":32}},{"value":"/ relating to the vector linear algebra struct.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":292472,"byte_end":292521,"line_start":4,"line_end":4,"column_start":1,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":2645},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":292907,"byte_end":292913,"line_start":19,"line_end":19,"column_start":12,"column_end":18},"name":"Vector","qualname":"::vector::Vector","value":"Vector {  }","parent":null,"children":[{"krate":0,"index":2647},{"krate":0,"index":2648}],"decl_id":null,"docs":" The Vector struct.","sig":null,"attributes":[{"value":"/ The Vector struct.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":292792,"byte_end":292814,"line_start":15,"line_end":15,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":292815,"byte_end":292818,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Can be instantiated with any type.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":292819,"byte_end":292857,"line_start":17,"line_end":17,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":753},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":293228,"byte_end":293231,"line_start":36,"line_end":36,"column_start":12,"column_end":15},"name":"new","qualname":"<Vector<T>>::new","value":"pub fn new<U: Into<Vec<T>>>(U) -> Vector<T>","parent":null,"children":[],"decl_id":null,"docs":" Constructor for Vector struct.","sig":null,"attributes":[{"value":"/ Constructor for Vector struct.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":292981,"byte_end":293015,"line_start":25,"line_end":25,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":293020,"byte_end":293023,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ Requires the vector data.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":293028,"byte_end":293057,"line_start":27,"line_end":27,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":293062,"byte_end":293065,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":293070,"byte_end":293084,"line_start":29,"line_end":29,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":293089,"byte_end":293092,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":293097,"byte_end":293104,"line_start":31,"line_end":31,"column_start":5,"column_end":12}},{"value":"/ use rulinalg::vector::Vector;","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":293109,"byte_end":293142,"line_start":32,"line_end":32,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":293147,"byte_end":293150,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ let vec = Vector::new(vec![1.0,2.0,3.0,4.0]);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":293155,"byte_end":293204,"line_start":34,"line_end":34,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":293209,"byte_end":293216,"line_start":35,"line_end":35,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":755},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":293482,"byte_end":293486,"line_start":47,"line_end":47,"column_start":12,"column_end":16},"name":"size","qualname":"<Vector<T>>::size","value":"pub fn size(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the size of the Vector.\n","sig":null,"attributes":[{"value":"/ Returns the size of the Vector.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":293435,"byte_end":293470,"line_start":46,"line_end":46,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":756},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":293605,"byte_end":293609,"line_start":52,"line_end":52,"column_start":12,"column_end":16},"name":"data","qualname":"<Vector<T>>::data","value":"pub fn data(&Self) -> &Vec<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a non-mutable reference to the underlying data.\n","sig":null,"attributes":[{"value":"/ Returns a non-mutable reference to the underlying data.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":293534,"byte_end":293593,"line_start":51,"line_end":51,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":757},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":293723,"byte_end":293731,"line_start":57,"line_end":57,"column_start":12,"column_end":20},"name":"mut_data","qualname":"<Vector<T>>::mut_data","value":"pub fn mut_data(&mut Self) -> &mut [T]","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable slice of the underlying data.\n","sig":null,"attributes":[{"value":"/ Returns a mutable slice of the underlying data.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":293660,"byte_end":293711,"line_start":56,"line_end":56,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":758},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":293855,"byte_end":293863,"line_start":62,"line_end":62,"column_start":12,"column_end":20},"name":"into_vec","qualname":"<Vector<T>>::into_vec","value":"pub fn into_vec(Self) -> Vec<T>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the Vector and returns the Vec of data.\n","sig":null,"attributes":[{"value":"/ Consumes the Vector and returns the Vec of data.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":293791,"byte_end":293843,"line_start":61,"line_end":61,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":759},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":293970,"byte_end":293974,"line_start":67,"line_end":67,"column_start":12,"column_end":16},"name":"iter","qualname":"<Vector<T>>::iter","value":"pub fn iter(&Self) -> Iter<, T>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the Vector's data.\n","sig":null,"attributes":[{"value":"/ Returns an iterator over the Vector's data.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":293911,"byte_end":293958,"line_start":66,"line_end":66,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":760},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":294112,"byte_end":294120,"line_start":72,"line_end":72,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<Vector<T>>::iter_mut","value":"pub fn iter_mut(&mut Self) -> IterMut<, T>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over mutable references to the Vector's data.\n","sig":null,"attributes":[{"value":"/ Returns an iterator over mutable references to the Vector's data.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":294031,"byte_end":294100,"line_start":71,"line_end":71,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":783},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":295859,"byte_end":295864,"line_start":150,"line_end":150,"column_start":12,"column_end":17},"name":"apply","qualname":"<Vector<T>>::apply","value":"pub fn apply(Self, &Fn(T) -> T) -> Vector<T>","parent":null,"children":[],"decl_id":null,"docs":" Applies a function to each element in the vector.","sig":null,"attributes":[{"value":"/ Applies a function to each element in the vector.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":295482,"byte_end":295535,"line_start":134,"line_end":134,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":295540,"byte_end":295543,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":295548,"byte_end":295562,"line_start":136,"line_end":136,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":295567,"byte_end":295570,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":295575,"byte_end":295582,"line_start":138,"line_end":138,"column_start":5,"column_end":12}},{"value":"/ use rulinalg::vector::Vector;","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":295587,"byte_end":295620,"line_start":139,"line_end":139,"column_start":5,"column_end":38}},{"value":"/ fn add_two(a: f64) -> f64 {","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":295625,"byte_end":295656,"line_start":140,"line_end":140,"column_start":5,"column_end":36}},{"value":"/     a + 2f64","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":295661,"byte_end":295677,"line_start":141,"line_end":141,"column_start":5,"column_end":21}},{"value":"/ }","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":295682,"byte_end":295687,"line_start":142,"line_end":142,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":295692,"byte_end":295695,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ let a = Vector::new(vec![0.;4]);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":295700,"byte_end":295736,"line_start":144,"line_end":144,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":295741,"byte_end":295744,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ let b = a.apply(&add_two);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":295749,"byte_end":295779,"line_start":146,"line_end":146,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":295784,"byte_end":295787,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(b.into_vec(), vec![2.0; 4]);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":295792,"byte_end":295835,"line_start":148,"line_end":148,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":295840,"byte_end":295847,"line_start":149,"line_end":149,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":786},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":296404,"byte_end":296410,"line_start":173,"line_end":173,"column_start":12,"column_end":18},"name":"argmax","qualname":"<Vector<T>>::argmax","value":"pub fn argmax(&Self) -> (usize, T)","parent":null,"children":[],"decl_id":null,"docs":" Find the argmax of the Vector.","sig":null,"attributes":[{"value":"/ Find the argmax of the Vector.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":296045,"byte_end":296079,"line_start":159,"line_end":159,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":296084,"byte_end":296087,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ Returns the index of the largest value in the vector.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":296092,"byte_end":296149,"line_start":161,"line_end":161,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":296154,"byte_end":296157,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":296162,"byte_end":296176,"line_start":163,"line_end":163,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":296181,"byte_end":296184,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":296189,"byte_end":296196,"line_start":165,"line_end":165,"column_start":5,"column_end":12}},{"value":"/ use rulinalg::vector::Vector;","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":296201,"byte_end":296234,"line_start":166,"line_end":166,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":296239,"byte_end":296242,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ let a = Vector::new(vec![1.0,2.0,0.0,5.0]);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":296247,"byte_end":296294,"line_start":168,"line_end":168,"column_start":5,"column_end":52}},{"value":"/ let b = a.argmax();","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":296299,"byte_end":296322,"line_start":169,"line_end":169,"column_start":5,"column_end":28}},{"value":"/ assert_eq!(b.0, 3);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":296327,"byte_end":296350,"line_start":170,"line_end":170,"column_start":5,"column_end":28}},{"value":"/ assert_eq!(b.1, 5.0);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":296355,"byte_end":296380,"line_start":171,"line_end":171,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":296385,"byte_end":296392,"line_start":172,"line_end":172,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":787},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":296839,"byte_end":296845,"line_start":191,"line_end":191,"column_start":12,"column_end":18},"name":"argmin","qualname":"<Vector<T>>::argmin","value":"pub fn argmin(&Self) -> (usize, T)","parent":null,"children":[],"decl_id":null,"docs":" Find the argmin of the Vector.","sig":null,"attributes":[{"value":"/ Find the argmin of the Vector.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":296479,"byte_end":296513,"line_start":177,"line_end":177,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":296518,"byte_end":296521,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ Returns the index of the smallest value in the vector.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":296526,"byte_end":296584,"line_start":179,"line_end":179,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":296589,"byte_end":296592,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":296597,"byte_end":296611,"line_start":181,"line_end":181,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":296616,"byte_end":296619,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":296624,"byte_end":296631,"line_start":183,"line_end":183,"column_start":5,"column_end":12}},{"value":"/ use rulinalg::vector::Vector;","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":296636,"byte_end":296669,"line_start":184,"line_end":184,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":296674,"byte_end":296677,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ let a = Vector::new(vec![1.0,2.0,0.0,5.0]);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":296682,"byte_end":296729,"line_start":186,"line_end":186,"column_start":5,"column_end":52}},{"value":"/ let b = a.argmin();","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":296734,"byte_end":296757,"line_start":187,"line_end":187,"column_start":5,"column_end":28}},{"value":"/ assert_eq!(b.0, 2);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":296762,"byte_end":296785,"line_start":188,"line_end":188,"column_start":5,"column_end":28}},{"value":"/ assert_eq!(b.1, 0.0);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":296790,"byte_end":296815,"line_start":189,"line_end":189,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":296820,"byte_end":296827,"line_start":190,"line_end":190,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":788},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":297281,"byte_end":297287,"line_start":209,"line_end":209,"column_start":12,"column_end":18},"name":"select","qualname":"<Vector<T>>::select","value":"pub fn select(&Self, &[usize]) -> Vector<T>","parent":null,"children":[],"decl_id":null,"docs":" Select elements from the Vector and form a new Vector from them.","sig":null,"attributes":[{"value":"/ Select elements from the Vector and form a new Vector from them.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":296914,"byte_end":296982,"line_start":195,"line_end":195,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":296987,"byte_end":296990,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":296995,"byte_end":297009,"line_start":197,"line_end":197,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":297014,"byte_end":297017,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":297022,"byte_end":297029,"line_start":199,"line_end":199,"column_start":5,"column_end":12}},{"value":"/ use rulinalg::vector::Vector;","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":297034,"byte_end":297067,"line_start":200,"line_end":200,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":297072,"byte_end":297075,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ let a = Vector::new(vec![1.0,2.0,3.0,4.0,5.0]);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":297080,"byte_end":297131,"line_start":202,"line_end":202,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":297136,"byte_end":297139,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ let a_lower = a.select(&[2,3,4]);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":297144,"byte_end":297181,"line_start":204,"line_end":204,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":297186,"byte_end":297189,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ // Prints [3,4,5]","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":297194,"byte_end":297215,"line_start":206,"line_end":206,"column_start":5,"column_end":26}},{"value":"/ println!(\"{:?}\", a_lower.data());","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":297220,"byte_end":297257,"line_start":207,"line_end":207,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":297262,"byte_end":297269,"line_start":208,"line_end":208,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":791},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":297796,"byte_end":297801,"line_start":232,"line_end":232,"column_start":12,"column_end":17},"name":"zeros","qualname":"<Vector<T>>::zeros","value":"pub fn zeros(usize) -> Vector<T>","parent":null,"children":[],"decl_id":null,"docs":" Constructs Vector of all zeros.","sig":null,"attributes":[{"value":"/ Constructs Vector of all zeros.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":297551,"byte_end":297586,"line_start":221,"line_end":221,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":297591,"byte_end":297594,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ Requires the size of the vector.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":297599,"byte_end":297635,"line_start":223,"line_end":223,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":297640,"byte_end":297643,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":297648,"byte_end":297662,"line_start":225,"line_end":225,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":297667,"byte_end":297670,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":297675,"byte_end":297682,"line_start":227,"line_end":227,"column_start":5,"column_end":12}},{"value":"/ use rulinalg::vector::Vector;","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":297687,"byte_end":297720,"line_start":228,"line_end":228,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":297725,"byte_end":297728,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ let vec = Vector::<f64>::zeros(10);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":297733,"byte_end":297772,"line_start":230,"line_end":230,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":297777,"byte_end":297784,"line_start":231,"line_end":231,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":794},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":298211,"byte_end":298215,"line_start":252,"line_end":252,"column_start":12,"column_end":16},"name":"ones","qualname":"<Vector<T>>::ones","value":"pub fn ones(usize) -> Vector<T>","parent":null,"children":[],"decl_id":null,"docs":" Constructs Vector of all ones.","sig":null,"attributes":[{"value":"/ Constructs Vector of all ones.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":297968,"byte_end":298002,"line_start":241,"line_end":241,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":298007,"byte_end":298010,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ Requires the size of the vector.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":298015,"byte_end":298051,"line_start":243,"line_end":243,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":298056,"byte_end":298059,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":298064,"byte_end":298078,"line_start":245,"line_end":245,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":298083,"byte_end":298086,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":298091,"byte_end":298098,"line_start":247,"line_end":247,"column_start":5,"column_end":12}},{"value":"/ use rulinalg::vector::Vector;","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":298103,"byte_end":298136,"line_start":248,"line_end":248,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":298141,"byte_end":298144,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ let vec = Vector::<f64>::ones(10);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":298149,"byte_end":298187,"line_start":250,"line_end":250,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":298192,"byte_end":298199,"line_start":251,"line_end":251,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":797},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":298745,"byte_end":298748,"line_start":274,"line_end":274,"column_start":12,"column_end":15},"name":"dot","qualname":"<Vector<T>>::dot","value":"pub fn dot(&Self, &Vector<T>) -> T","parent":null,"children":[],"decl_id":null,"docs":" Compute dot product with specified Vector.","sig":null,"attributes":[{"value":"/ Compute dot product with specified Vector.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":298423,"byte_end":298469,"line_start":261,"line_end":261,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":298474,"byte_end":298477,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":298482,"byte_end":298496,"line_start":263,"line_end":263,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":298501,"byte_end":298504,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":298509,"byte_end":298516,"line_start":265,"line_end":265,"column_start":5,"column_end":12}},{"value":"/ use rulinalg::vector::Vector;","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":298521,"byte_end":298554,"line_start":266,"line_end":266,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":298559,"byte_end":298562,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ let a = Vector::new(vec![1.0,2.0,3.0,4.0]);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":298567,"byte_end":298614,"line_start":268,"line_end":268,"column_start":5,"column_end":52}},{"value":"/ let b = Vector::new(vec![2.0; 4]);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":298619,"byte_end":298657,"line_start":269,"line_end":269,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":298662,"byte_end":298665,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ let c = a.dot(&b);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":298670,"byte_end":298692,"line_start":271,"line_end":271,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(c, 20.0);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":298697,"byte_end":298721,"line_start":272,"line_end":272,"column_start":5,"column_end":29}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":298726,"byte_end":298733,"line_start":273,"line_end":273,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":800},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":299205,"byte_end":299208,"line_start":294,"line_end":294,"column_start":12,"column_end":15},"name":"sum","qualname":"<Vector<T>>::sum","value":"pub fn sum(&Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" The sum of the vector.","sig":null,"attributes":[{"value":"/ The sum of the vector.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":298885,"byte_end":298911,"line_start":280,"line_end":280,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":298916,"byte_end":298919,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ Returns the sum of all elements in the vector.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":298924,"byte_end":298974,"line_start":282,"line_end":282,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":298979,"byte_end":298982,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":298987,"byte_end":299001,"line_start":284,"line_end":284,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":299006,"byte_end":299009,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":299014,"byte_end":299021,"line_start":286,"line_end":286,"column_start":5,"column_end":12}},{"value":"/ use rulinalg::vector::Vector;","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":299026,"byte_end":299059,"line_start":287,"line_end":287,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":299064,"byte_end":299067,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ let a = Vector::new(vec![1.0,2.0,3.0,4.0]);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":299072,"byte_end":299119,"line_start":289,"line_end":289,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":299124,"byte_end":299127,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ let c = a.sum();","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":299132,"byte_end":299152,"line_start":291,"line_end":291,"column_start":5,"column_end":25}},{"value":"/ assert_eq!(c, 10.0);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":299157,"byte_end":299181,"line_start":292,"line_end":292,"column_start":5,"column_end":29}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":299186,"byte_end":299193,"line_start":293,"line_end":293,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":803},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":299688,"byte_end":299694,"line_start":313,"line_end":313,"column_start":12,"column_end":18},"name":"elemul","qualname":"<Vector<T>>::elemul","value":"pub fn elemul(&Self, &Vector<T>) -> Vector<T>","parent":null,"children":[],"decl_id":null,"docs":" The elementwise product of two vectors.","sig":null,"attributes":[{"value":"/ The elementwise product of two vectors.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":299327,"byte_end":299370,"line_start":300,"line_end":300,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":299375,"byte_end":299378,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":299383,"byte_end":299397,"line_start":302,"line_end":302,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":299402,"byte_end":299405,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":299410,"byte_end":299417,"line_start":304,"line_end":304,"column_start":5,"column_end":12}},{"value":"/ use rulinalg::vector::Vector;","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":299422,"byte_end":299455,"line_start":305,"line_end":305,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":299460,"byte_end":299463,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ let a = Vector::new(vec![1.0,2.0,3.0,4.0]);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":299468,"byte_end":299515,"line_start":307,"line_end":307,"column_start":5,"column_end":52}},{"value":"/ let b = Vector::new(vec![1.0,2.0,3.0,4.0]);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":299520,"byte_end":299567,"line_start":308,"line_end":308,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":299572,"byte_end":299575,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ let c = &a.elemul(&b);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":299580,"byte_end":299606,"line_start":310,"line_end":310,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(*c.data(), vec![1.0, 4.0, 9.0, 16.0]);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":299611,"byte_end":299664,"line_start":311,"line_end":311,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":299669,"byte_end":299676,"line_start":312,"line_end":312,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":806},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":300237,"byte_end":300243,"line_start":333,"line_end":333,"column_start":12,"column_end":18},"name":"elediv","qualname":"<Vector<T>>::elediv","value":"pub fn elediv(&Self, &Vector<T>) -> Vector<T>","parent":null,"children":[],"decl_id":null,"docs":" The elementwise division of two vectors.","sig":null,"attributes":[{"value":"/ The elementwise division of two vectors.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":299888,"byte_end":299932,"line_start":320,"line_end":320,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":299937,"byte_end":299940,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":299945,"byte_end":299959,"line_start":322,"line_end":322,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":299964,"byte_end":299967,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":299972,"byte_end":299979,"line_start":324,"line_end":324,"column_start":5,"column_end":12}},{"value":"/ use rulinalg::vector::Vector;","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":299984,"byte_end":300017,"line_start":325,"line_end":325,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":300022,"byte_end":300025,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ let a = Vector::new(vec![1.0,2.0,3.0,4.0]);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":300030,"byte_end":300077,"line_start":327,"line_end":327,"column_start":5,"column_end":52}},{"value":"/ let b = Vector::new(vec![1.0,2.0,3.0,4.0]);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":300082,"byte_end":300129,"line_start":328,"line_end":328,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":300134,"byte_end":300137,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ let c = &a.elediv(&b);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":300142,"byte_end":300168,"line_start":330,"line_end":330,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(*c.data(), vec![1.0; 4]);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":300173,"byte_end":300213,"line_start":331,"line_end":331,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":300218,"byte_end":300225,"line_start":332,"line_end":332,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":809},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":300757,"byte_end":300761,"line_start":354,"line_end":354,"column_start":12,"column_end":16},"name":"mean","qualname":"<Vector<T>>::mean","value":"pub fn mean(&Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" The mean of the vector.","sig":null,"attributes":[{"value":"/ The mean of the vector.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":300433,"byte_end":300460,"line_start":340,"line_end":340,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":300465,"byte_end":300468,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ Returns the arithmetic mean of the vector.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":300473,"byte_end":300519,"line_start":342,"line_end":342,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":300524,"byte_end":300527,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":300532,"byte_end":300546,"line_start":344,"line_end":344,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":300551,"byte_end":300554,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":300559,"byte_end":300566,"line_start":346,"line_end":346,"column_start":5,"column_end":12}},{"value":"/ use rulinalg::vector::Vector;","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":300571,"byte_end":300604,"line_start":347,"line_end":347,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":300609,"byte_end":300612,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ let a = Vector::<f32>::new(vec![1.0,2.0,3.0,4.0]);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":300617,"byte_end":300671,"line_start":349,"line_end":349,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":300676,"byte_end":300679,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ let c = a.mean();","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":300684,"byte_end":300705,"line_start":351,"line_end":351,"column_start":5,"column_end":26}},{"value":"/ assert_eq!(c, 2.5);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":300710,"byte_end":300733,"line_start":352,"line_end":352,"column_start":5,"column_end":28}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":300738,"byte_end":300745,"line_start":353,"line_end":353,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":810},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":301224,"byte_end":301232,"line_start":373,"line_end":373,"column_start":12,"column_end":20},"name":"variance","qualname":"<Vector<T>>::variance","value":"pub fn variance(&Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" The variance of the vector.","sig":null,"attributes":[{"value":"/ The variance of the vector.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":300879,"byte_end":300910,"line_start":359,"line_end":359,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":300915,"byte_end":300918,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ Returns the unbiased sample variance of the vector.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":300923,"byte_end":300978,"line_start":361,"line_end":361,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":300983,"byte_end":300986,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":300991,"byte_end":301005,"line_start":363,"line_end":363,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":301010,"byte_end":301013,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":301018,"byte_end":301025,"line_start":365,"line_end":365,"column_start":5,"column_end":12}},{"value":"/ use rulinalg::vector::Vector;","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":301030,"byte_end":301063,"line_start":366,"line_end":366,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":301068,"byte_end":301071,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ let a = Vector::<f32>::new(vec![1.0,2.0,3.0,4.0]);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":301076,"byte_end":301130,"line_start":368,"line_end":368,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":301135,"byte_end":301138,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ let c = a.variance();","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":301143,"byte_end":301168,"line_start":370,"line_end":370,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(c, 5.0/3.0);","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":301173,"byte_end":301200,"line_start":371,"line_end":371,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":301205,"byte_end":301212,"line_start":372,"line_end":372,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":960},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\ulp.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ulp","qualname":"::ulp","value":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\ulp.rs","parent":null,"children":[{"krate":0,"index":961},{"krate":0,"index":2713},{"krate":0,"index":2730},{"krate":0,"index":2729},{"krate":0,"index":2727},{"krate":0,"index":2723},{"krate":0,"index":2724},{"krate":0,"index":962},{"krate":0,"index":2732},{"krate":0,"index":2734}],"decl_id":null,"docs":" Tools for ULP-based comparison of floating point numbers.\n","sig":null,"attributes":[{"value":"/ Tools for ULP-based comparison of floating point numbers.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\ulp.rs","byte_start":320125,"byte_end":320186,"line_start":1,"line_end":1,"column_start":1,"column_end":62}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2714},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\ulp.rs","byte_start":320436,"byte_end":320446,"line_start":9,"line_end":9,"column_start":5,"column_end":15},"name":"ExactMatch","qualname":"::ulp::UlpComparisonResult::ExactMatch","value":"UlpComparisonResult::ExactMatch","parent":{"krate":0,"index":2713},"children":[],"decl_id":null,"docs":" Signifies an exact match between two floating point numbers.\n","sig":null,"attributes":[{"value":"/ Signifies an exact match between two floating point numbers.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\ulp.rs","byte_start":320367,"byte_end":320431,"line_start":8,"line_end":8,"column_start":5,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2716},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\ulp.rs","byte_start":320518,"byte_end":320528,"line_start":11,"line_end":11,"column_start":5,"column_end":15},"name":"Difference","qualname":"::ulp::UlpComparisonResult::Difference","value":"UlpComparisonResult::Difference(u64)","parent":{"krate":0,"index":2713},"children":[],"decl_id":null,"docs":" The difference in ULP between two floating point numbers.\n","sig":null,"attributes":[{"value":"/ The difference in ULP between two floating point numbers.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\ulp.rs","byte_start":320452,"byte_end":320513,"line_start":10,"line_end":10,"column_start":5,"column_end":66}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2719},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\ulp.rs","byte_start":320652,"byte_end":320669,"line_start":14,"line_end":14,"column_start":5,"column_end":22},"name":"IncompatibleSigns","qualname":"::ulp::UlpComparisonResult::IncompatibleSigns","value":"UlpComparisonResult::IncompatibleSigns","parent":{"krate":0,"index":2713},"children":[],"decl_id":null,"docs":" The two floating point numbers have different signs,\n and cannot be compared in a meaningful way.\n","sig":null,"attributes":[{"value":"/ The two floating point numbers have different signs,","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\ulp.rs","byte_start":320539,"byte_end":320595,"line_start":12,"line_end":12,"column_start":5,"column_end":61}},{"value":"/ and cannot be compared in a meaningful way.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\ulp.rs","byte_start":320600,"byte_end":320647,"line_start":13,"line_end":13,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2721},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\ulp.rs","byte_start":320799,"byte_end":320802,"line_start":17,"line_end":17,"column_start":5,"column_end":8},"name":"Nan","qualname":"::ulp::UlpComparisonResult::Nan","value":"UlpComparisonResult::Nan","parent":{"krate":0,"index":2713},"children":[],"decl_id":null,"docs":" One or both of the two floating point numbers is a NaN,\n in which case the ULP comparison is not meaningful.\n","sig":null,"attributes":[{"value":"/ One or both of the two floating point numbers is a NaN,","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\ulp.rs","byte_start":320675,"byte_end":320734,"line_start":15,"line_end":15,"column_start":5,"column_end":64}},{"value":"/ in which case the ULP comparison is not meaningful.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\ulp.rs","byte_start":320739,"byte_end":320794,"line_start":16,"line_end":16,"column_start":5,"column_end":60}}]},{"kind":"Enum","id":{"krate":0,"index":2713},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\ulp.rs","byte_start":320341,"byte_end":320360,"line_start":6,"line_end":6,"column_start":10,"column_end":29},"name":"UlpComparisonResult","qualname":"::ulp::UlpComparisonResult","value":"pub enum UlpComparisonResult {\n\n    /// Signifies an exact match between two floating point numbers.\n    ExactMatch,\n\n    /// The difference in ULP between two floating point numbers.\n    Difference(u64),\n\n    /// The two floating point numbers have different signs,\n    /// and cannot be compared in a meaningful way.\n    IncompatibleSigns,\n\n    /// One or both of the two floating point numbers is a NaN,\n    /// in which case the ULP comparison is not meaningful.\n    Nan,\n}","parent":null,"children":[{"krate":0,"index":2714},{"krate":0,"index":2716},{"krate":0,"index":2719},{"krate":0,"index":2721}],"decl_id":null,"docs":" Represents the result of an ULP-based comparison between two floating point numbers.\n","sig":null,"attributes":[{"value":"/ Represents the result of an ULP-based comparison between two floating point numbers.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\ulp.rs","byte_start":320202,"byte_end":320290,"line_start":4,"line_end":4,"column_start":1,"column_end":89}}]},{"kind":"Trait","id":{"krate":0,"index":962},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\ulp.rs","byte_start":321876,"byte_end":321879,"line_start":36,"line_end":36,"column_start":11,"column_end":14},"name":"Ulp","qualname":"::ulp::Ulp","value":"Ulp","parent":null,"children":[{"krate":0,"index":963}],"decl_id":null,"docs":" Floating point types for which two instances can be compared for Unit in the Last Place (ULP) difference.","sig":null,"attributes":[{"value":"/ Floating point types for which two instances can be compared for Unit in the Last Place (ULP) difference.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\ulp.rs","byte_start":320806,"byte_end":320915,"line_start":20,"line_end":20,"column_start":1,"column_end":110}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\ulp.rs","byte_start":320916,"byte_end":320919,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Implementing this trait enables the usage of the `ulp` comparator in","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\ulp.rs","byte_start":320920,"byte_end":320992,"line_start":22,"line_end":22,"column_start":1,"column_end":73}},{"value":"/ [assert_matrix_eq!](../macro.assert_matrix_eq!.html) for the given type.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\ulp.rs","byte_start":320993,"byte_end":321069,"line_start":23,"line_end":23,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\ulp.rs","byte_start":321070,"byte_end":321073,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ The definition here leverages the fact that for two adjacent floating point numbers,","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\ulp.rs","byte_start":321074,"byte_end":321162,"line_start":25,"line_end":25,"column_start":1,"column_end":89}},{"value":"/ their integer representations are also adjacent.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\ulp.rs","byte_start":321163,"byte_end":321215,"line_start":26,"line_end":26,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\ulp.rs","byte_start":321216,"byte_end":321219,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ A somewhat accessible (but not exhaustive) guide on the topic is available in the popular article","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\ulp.rs","byte_start":321220,"byte_end":321321,"line_start":28,"line_end":28,"column_start":1,"column_end":102}},{"value":"/ [Comparing Floating Point Numbers, 2012 Edition]","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\ulp.rs","byte_start":321322,"byte_end":321374,"line_start":29,"line_end":29,"column_start":1,"column_end":53}},{"value":"/ (https://randomascii.wordpress.com/2012/02/25/comparing-floating-point-numbers-2012-edition/).","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\ulp.rs","byte_start":321375,"byte_end":321473,"line_start":30,"line_end":30,"column_start":1,"column_end":99}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\ulp.rs","byte_start":321474,"byte_end":321477,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ Implementations for `f32` and `f64` are already available, and so users should not normally","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\ulp.rs","byte_start":321478,"byte_end":321573,"line_start":32,"line_end":32,"column_start":1,"column_end":96}},{"value":"/ need to implement this. In the case when a custom implementation is necessary,","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\ulp.rs","byte_start":321574,"byte_end":321656,"line_start":33,"line_end":33,"column_start":1,"column_end":83}},{"value":"/ please see the possible return values for [UlpComparisonResult](ulp/enum.UlpComparisonResult.html).","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\ulp.rs","byte_start":321657,"byte_end":321760,"line_start":34,"line_end":34,"column_start":1,"column_end":104}},{"value":"/ Otherwise, we can recommend to read the source code of the included `f32` and `f64` implementations.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\ulp.rs","byte_start":321761,"byte_end":321865,"line_start":35,"line_end":35,"column_start":1,"column_end":105}}]},{"kind":"Method","id":{"krate":0,"index":963},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\ulp.rs","byte_start":321973,"byte_end":321981,"line_start":38,"line_end":38,"column_start":8,"column_end":16},"name":"ulp_diff","qualname":"::ulp::Ulp::ulp_diff","value":"pub fn ulp_diff(&Self, &Self) -> UlpComparisonResult","parent":{"krate":0,"index":962},"children":[],"decl_id":null,"docs":" Returns the difference between two floating point numbers, measured in ULP.\n","sig":null,"attributes":[{"value":"/ Returns the difference between two floating point numbers, measured in ULP.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\ulp.rs","byte_start":321886,"byte_end":321965,"line_start":37,"line_end":37,"column_start":5,"column_end":84}}]},{"kind":"Trait","id":{"krate":0,"index":965},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\lib.rs","byte_start":3218,"byte_end":3224,"line_start":109,"line_end":109,"column_start":11,"column_end":17},"name":"Metric","qualname":"::Metric","value":"Metric<T>","parent":null,"children":[{"krate":0,"index":967}],"decl_id":null,"docs":" Trait for linear algebra metrics.","sig":null,"attributes":[{"value":"/ Trait for linear algebra metrics.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\lib.rs","byte_start":3114,"byte_end":3151,"line_start":106,"line_end":106,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\lib.rs","byte_start":3152,"byte_end":3155,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ Currently only implements basic euclidean norm.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\lib.rs","byte_start":3156,"byte_end":3207,"line_start":108,"line_end":108,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":967},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\lib.rs","byte_start":3274,"byte_end":3278,"line_start":111,"line_end":111,"column_start":8,"column_end":12},"name":"norm","qualname":"::Metric::norm","value":"pub fn norm(&Self) -> T","parent":{"krate":0,"index":965},"children":[],"decl_id":null,"docs":" Computes the euclidean norm.\n","sig":null,"attributes":[{"value":"/ Computes the euclidean norm.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\lib.rs","byte_start":3234,"byte_end":3266,"line_start":110,"line_end":110,"column_start":5,"column_end":37}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\macros\\matrix_eq.rs","byte_start":7605,"byte_end":7635,"line_start":26,"line_end":26,"column_start":29,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":22}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\macros\\matrix_eq.rs","byte_start":9182,"byte_end":9204,"line_start":68,"line_end":68,"column_start":15,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":32}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\macros\\matrix_eq.rs","byte_start":11541,"byte_end":11571,"line_start":133,"line_end":133,"column_start":29,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":36}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\macros\\matrix_eq.rs","byte_start":12499,"byte_end":12521,"line_start":165,"line_end":165,"column_start":16,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":41}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\macros\\matrix_eq.rs","byte_start":17665,"byte_end":17678,"line_start":312,"line_end":312,"column_start":31,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":53}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\macros\\matrix_eq.rs","byte_start":17907,"byte_end":17936,"line_start":320,"line_end":320,"column_start":56,"column_end":85},"value":"","parent":null,"children":[{"krate":0,"index":56},{"krate":0,"index":57}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\macros\\matrix_eq.rs","byte_start":18962,"byte_end":18972,"line_start":355,"line_end":355,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":59}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\macros\\matrix_eq.rs","byte_start":19083,"byte_end":19109,"line_start":359,"line_end":359,"column_start":50,"column_end":76},"value":"","parent":null,"children":[{"krate":0,"index":62},{"krate":0,"index":63}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\macros\\matrix_eq.rs","byte_start":19803,"byte_end":19811,"line_start":386,"line_end":386,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":65}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\macros\\matrix_eq.rs","byte_start":20255,"byte_end":20279,"line_start":399,"line_end":399,"column_start":48,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":69},{"krate":0,"index":70}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\macros\\matrix_eq.rs","byte_start":21015,"byte_end":21041,"line_start":425,"line_end":425,"column_start":9,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":75}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\macros\\matrix_eq.rs","byte_start":21690,"byte_end":21716,"line_start":448,"line_end":448,"column_start":48,"column_end":74},"value":"","parent":null,"children":[{"krate":0,"index":78},{"krate":0,"index":79}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\qr.rs","byte_start":95015,"byte_end":95021,"line_start":8,"line_end":8,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":118}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\cholesky.rs","byte_start":97270,"byte_end":97276,"line_start":8,"line_end":8,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":130}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\bidiagonal.rs","byte_start":99445,"byte_end":99451,"line_start":9,"line_end":9,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":146}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\svd.rs","byte_start":108773,"byte_end":108779,"line_start":95,"line_end":95,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":171},{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":174}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\hessenberg.rs","byte_start":123598,"byte_end":123604,"line_start":8,"line_end":8,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":190},{"krate":0,"index":191}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\lu.rs","byte_start":128549,"byte_end":128555,"line_start":8,"line_end":8,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":203}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\eigen.rs","byte_start":131496,"byte_end":131502,"line_start":11,"line_end":11,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":224},{"krate":0,"index":225},{"krate":0,"index":226},{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":229},{"krate":0,"index":230}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\mod.rs","byte_start":92729,"byte_end":92735,"line_start":31,"line_end":31,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":244},{"krate":0,"index":245},{"krate":0,"index":247}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\impl_ops.rs","byte_start":148079,"byte_end":148085,"line_start":16,"line_end":16,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":275},{"krate":0,"index":276}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\impl_ops.rs","byte_start":149183,"byte_end":149197,"line_start":57,"line_end":57,"column_start":38,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":283}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\impl_ops.rs","byte_start":149667,"byte_end":149673,"line_start":71,"line_end":71,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":288}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\impl_ops.rs","byte_start":153409,"byte_end":153415,"line_start":226,"line_end":226,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":294},{"krate":0,"index":295}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\impl_ops.rs","byte_start":153916,"byte_end":153922,"line_start":248,"line_end":248,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":304},{"krate":0,"index":305}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\impl_ops.rs","byte_start":170328,"byte_end":170334,"line_start":809,"line_end":809,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":324},{"krate":0,"index":325}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mat_mul.rs","byte_start":196724,"byte_end":196730,"line_start":106,"line_end":106,"column_start":89,"column_end":95},"value":"","parent":null,"children":[{"krate":0,"index":353},{"krate":0,"index":354}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mat_mul.rs","byte_start":196921,"byte_end":196927,"line_start":115,"line_end":115,"column_start":40,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":359},{"krate":0,"index":360}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\iter.rs","byte_start":209072,"byte_end":209076,"line_start":144,"line_end":144,"column_start":35,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\iter.rs","byte_start":209121,"byte_end":209128,"line_start":145,"line_end":145,"column_start":35,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\iter.rs","byte_start":210171,"byte_end":210177,"line_start":185,"line_end":185,"column_start":50,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":403}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\iter.rs","byte_start":211372,"byte_end":211383,"line_start":228,"line_end":228,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":408},{"krate":0,"index":409},{"krate":0,"index":410}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\iter.rs","byte_start":211936,"byte_end":211950,"line_start":255,"line_end":255,"column_start":30,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":426},{"krate":0,"index":427},{"krate":0,"index":428}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":262229,"byte_end":262235,"line_start":1223,"line_end":1223,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":543},{"krate":0,"index":544},{"krate":0,"index":545},{"krate":0,"index":546},{"krate":0,"index":547},{"krate":0,"index":548},{"krate":0,"index":549},{"krate":0,"index":550},{"krate":0,"index":551},{"krate":0,"index":552}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":264093,"byte_end":264104,"line_start":1294,"line_end":1294,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":557},{"krate":0,"index":558},{"krate":0,"index":559},{"krate":0,"index":560}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":264379,"byte_end":264393,"line_start":1309,"line_end":1309,"column_start":31,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":564},{"krate":0,"index":565},{"krate":0,"index":566},{"krate":0,"index":567}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":264679,"byte_end":264685,"line_start":1324,"line_end":1324,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":570}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":264842,"byte_end":264856,"line_start":1331,"line_end":1331,"column_start":34,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":574}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":264982,"byte_end":264993,"line_start":1338,"line_end":1338,"column_start":13,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":578},{"krate":0,"index":580},{"krate":0,"index":581}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":267969,"byte_end":267983,"line_start":1425,"line_end":1425,"column_start":13,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":586},{"krate":0,"index":588},{"krate":0,"index":589}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Inherent","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":64779,"byte_end":64785,"line_start":127,"line_end":127,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":597},{"krate":0,"index":599},{"krate":0,"index":601},{"krate":0,"index":602},{"krate":0,"index":603}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":67279,"byte_end":67285,"line_start":213,"line_end":213,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":606}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":67506,"byte_end":67512,"line_start":224,"line_end":224,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":609},{"krate":0,"index":610}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":68614,"byte_end":68620,"line_start":271,"line_end":271,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":613}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":69093,"byte_end":69099,"line_start":292,"line_end":292,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":616}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":69678,"byte_end":69684,"line_start":319,"line_end":319,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":619},{"krate":0,"index":620}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":72845,"byte_end":72851,"line_start":433,"line_end":433,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":623},{"krate":0,"index":624},{"krate":0,"index":625}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":77526,"byte_end":77532,"line_start":596,"line_end":596,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":628}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":77965,"byte_end":77976,"line_start":617,"line_end":617,"column_start":34,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":632}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":78556,"byte_end":78570,"line_start":642,"line_end":642,"column_start":34,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":636}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":79170,"byte_end":79176,"line_start":667,"line_end":667,"column_start":40,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":639}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\convert.rs","byte_start":281455,"byte_end":281461,"line_start":13,"line_end":13,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":663}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\convert.rs","byte_start":281566,"byte_end":281572,"line_start":19,"line_end":19,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":667}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\convert.rs","byte_start":281706,"byte_end":281712,"line_start":25,"line_end":25,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":670}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\error.rs","byte_start":284807,"byte_end":284812,"line_start":32,"line_end":32,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":682},{"krate":0,"index":684}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\error.rs","byte_start":285208,"byte_end":285213,"line_start":49,"line_end":49,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":686}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\error.rs","byte_start":285316,"byte_end":285321,"line_start":55,"line_end":55,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":688}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":292965,"byte_end":292971,"line_start":24,"line_end":24,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":753},{"krate":0,"index":755},{"krate":0,"index":756},{"krate":0,"index":757},{"krate":0,"index":758},{"krate":0,"index":759},{"krate":0,"index":760}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":294218,"byte_end":294224,"line_start":78,"line_end":78,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":763}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":294312,"byte_end":294318,"line_start":84,"line_end":84,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":766},{"krate":0,"index":767},{"krate":0,"index":768}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":294672,"byte_end":294678,"line_start":102,"line_end":102,"column_start":40,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":777}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":295276,"byte_end":295282,"line_start":123,"line_end":123,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":780}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Inherent","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":295466,"byte_end":295472,"line_start":133,"line_end":133,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":783}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Inherent","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":296029,"byte_end":296035,"line_start":158,"line_end":158,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":786},{"krate":0,"index":787},{"krate":0,"index":788}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":297535,"byte_end":297541,"line_start":220,"line_end":220,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":791}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":297952,"byte_end":297958,"line_start":240,"line_end":240,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":794}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":298407,"byte_end":298413,"line_start":260,"line_end":260,"column_start":64,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":797}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":298869,"byte_end":298875,"line_start":279,"line_end":279,"column_start":43,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":800}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":299311,"byte_end":299317,"line_start":299,"line_end":299,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":803}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":299872,"byte_end":299878,"line_start":319,"line_end":319,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":806}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":300417,"byte_end":300423,"line_start":339,"line_end":339,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":809},{"krate":0,"index":810}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":301550,"byte_end":301556,"line_start":386,"line_end":386,"column_start":47,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":813},{"krate":0,"index":814}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":301940,"byte_end":301946,"line_start":404,"line_end":404,"column_start":55,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":823},{"krate":0,"index":824}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":302561,"byte_end":302567,"line_start":431,"line_end":431,"column_start":66,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":834},{"krate":0,"index":835}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":302981,"byte_end":302987,"line_start":449,"line_end":449,"column_start":74,"column_end":80},"value":"","parent":null,"children":[{"krate":0,"index":844},{"krate":0,"index":845}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":303661,"byte_end":303667,"line_start":479,"line_end":479,"column_start":47,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":855},{"krate":0,"index":856}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":304037,"byte_end":304043,"line_start":497,"line_end":497,"column_start":55,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":865},{"krate":0,"index":866}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":304634,"byte_end":304640,"line_start":524,"line_end":524,"column_start":55,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":876},{"krate":0,"index":877}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":305041,"byte_end":305047,"line_start":542,"line_end":542,"column_start":63,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":886},{"krate":0,"index":887}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":305698,"byte_end":305704,"line_start":569,"line_end":569,"column_start":47,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":897},{"krate":0,"index":898}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":306088,"byte_end":306094,"line_start":587,"line_end":587,"column_start":55,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":907},{"krate":0,"index":908}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":306699,"byte_end":306705,"line_start":614,"line_end":614,"column_start":55,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":918},{"krate":0,"index":919}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":307200,"byte_end":307206,"line_start":634,"line_end":634,"column_start":63,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":929},{"krate":0,"index":930}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":307853,"byte_end":307859,"line_start":661,"line_end":661,"column_start":41,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":940},{"krate":0,"index":941}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":308336,"byte_end":308342,"line_start":685,"line_end":685,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":950},{"krate":0,"index":951}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":308557,"byte_end":308563,"line_start":695,"line_end":695,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":954}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":308745,"byte_end":308751,"line_start":702,"line_end":702,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":957}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\lib.rs","byte_start":2961,"byte_end":2967,"line_start":94,"line_end":94,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":5}},{"kind":"Mod","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\lib.rs","byte_start":2977,"byte_end":2983,"line_start":95,"line_end":95,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":90}},{"kind":"Mod","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":62479,"byte_end":62484,"line_start":23,"line_end":23,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":441}},{"kind":"Mod","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\lib.rs","byte_start":2993,"byte_end":3000,"line_start":96,"line_end":96,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":651}},{"kind":"Mod","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\lib.rs","byte_start":3010,"byte_end":3015,"line_start":97,"line_end":97,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":673}},{"kind":"Mod","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\lib.rs","byte_start":3025,"byte_end":3030,"line_start":98,"line_end":98,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":689}},{"kind":"Mod","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\lib.rs","byte_start":3040,"byte_end":3046,"line_start":99,"line_end":99,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":725}},{"kind":"Mod","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\lib.rs","byte_start":3056,"byte_end":3059,"line_start":100,"line_end":100,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":960}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\macros\\matrix_eq.rs","byte_start":7605,"byte_end":7635,"line_start":26,"line_end":26,"column_start":29,"column_end":59},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":968},"to":{"krate":2,"index":6611}},{"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\macros\\matrix_eq.rs","byte_start":9182,"byte_end":9204,"line_start":68,"line_end":68,"column_start":15,"column_end":37},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":996},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\macros\\matrix_eq.rs","byte_start":11541,"byte_end":11571,"line_start":133,"line_end":133,"column_start":29,"column_end":59},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1023},"to":{"krate":2,"index":6611}},{"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\macros\\matrix_eq.rs","byte_start":12499,"byte_end":12521,"line_start":165,"line_end":165,"column_start":16,"column_end":38},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1050},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\macros\\matrix_eq.rs","byte_start":17665,"byte_end":17678,"line_start":312,"line_end":312,"column_start":31,"column_end":44},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":1077},"to":{"krate":0,"index":17}},{"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\macros\\matrix_eq.rs","byte_start":17907,"byte_end":17936,"line_start":320,"line_end":320,"column_start":56,"column_end":85},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":1095},"to":{"krate":0,"index":23}},{"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\macros\\matrix_eq.rs","byte_start":18962,"byte_end":18972,"line_start":355,"line_end":355,"column_start":28,"column_end":38},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":1122},"to":{"krate":0,"index":17}},{"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\macros\\matrix_eq.rs","byte_start":19083,"byte_end":19109,"line_start":359,"line_end":359,"column_start":50,"column_end":76},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":1112},"to":{"krate":0,"index":23}},{"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\macros\\matrix_eq.rs","byte_start":19803,"byte_end":19811,"line_start":386,"line_end":386,"column_start":28,"column_end":36},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1143},"to":{"krate":0,"index":17}},{"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\macros\\matrix_eq.rs","byte_start":20255,"byte_end":20279,"line_start":399,"line_end":399,"column_start":48,"column_end":72},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1132},"to":{"krate":0,"index":23}},{"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\macros\\matrix_eq.rs","byte_start":21015,"byte_end":21041,"line_start":425,"line_end":425,"column_start":9,"column_end":35},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1155},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\macros\\matrix_eq.rs","byte_start":21690,"byte_end":21716,"line_start":448,"line_end":448,"column_start":48,"column_end":74},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1155},"to":{"krate":0,"index":23}},{"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\qr.rs","byte_start":95015,"byte_end":95021,"line_start":8,"line_end":8,"column_start":9,"column_end":15},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":2486},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\cholesky.rs","byte_start":97270,"byte_end":97276,"line_start":8,"line_end":8,"column_start":9,"column_end":15},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":2486},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\bidiagonal.rs","byte_start":99445,"byte_end":99451,"line_start":9,"line_end":9,"column_start":9,"column_end":15},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":2486},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\svd.rs","byte_start":108773,"byte_end":108779,"line_start":95,"line_end":95,"column_start":31,"column_end":37},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":2486},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\hessenberg.rs","byte_start":123598,"byte_end":123604,"line_start":8,"line_end":8,"column_start":22,"column_end":28},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":2486},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\lu.rs","byte_start":128549,"byte_end":128555,"line_start":8,"line_end":8,"column_start":9,"column_end":15},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":2486},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\eigen.rs","byte_start":131496,"byte_end":131502,"line_start":11,"line_end":11,"column_start":31,"column_end":37},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":2486},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\decomposition\\mod.rs","byte_start":92729,"byte_end":92735,"line_start":31,"line_end":31,"column_start":9,"column_end":15},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":2486},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\impl_ops.rs","byte_start":148079,"byte_end":148085,"line_start":16,"line_end":16,"column_start":31,"column_end":37},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":2486},"to":{"krate":2,"index":2323}},{"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\impl_ops.rs","byte_start":149183,"byte_end":149197,"line_start":57,"line_end":57,"column_start":38,"column_end":52},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":2528},"to":{"krate":2,"index":2327}},{"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\impl_ops.rs","byte_start":149667,"byte_end":149673,"line_start":71,"line_end":71,"column_start":34,"column_end":40},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":2486},"to":{"krate":2,"index":2327}},{"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\impl_ops.rs","byte_start":153409,"byte_end":153415,"line_start":226,"line_end":226,"column_start":28,"column_end":34},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":2486},"to":{"krate":2,"index":2120}},{"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\impl_ops.rs","byte_start":153916,"byte_end":153922,"line_start":248,"line_end":248,"column_start":36,"column_end":42},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":2486},"to":{"krate":2,"index":2120}},{"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\impl_ops.rs","byte_start":170328,"byte_end":170334,"line_start":809,"line_end":809,"column_start":17,"column_end":23},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":2486},"to":{"krate":2,"index":2137}},{"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mat_mul.rs","byte_start":196724,"byte_end":196730,"line_start":106,"line_end":106,"column_start":89,"column_end":95},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":2486},"to":{"krate":2,"index":2120}},{"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mat_mul.rs","byte_start":196921,"byte_end":196927,"line_start":115,"line_end":115,"column_start":40,"column_end":46},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":2486},"to":{"krate":2,"index":2120}},{"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\iter.rs","byte_start":209072,"byte_end":209076,"line_start":144,"line_end":144,"column_start":35,"column_end":39},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":2540},"to":{"krate":2,"index":5265}},{"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\iter.rs","byte_start":209121,"byte_end":209128,"line_start":145,"line_end":145,"column_start":35,"column_end":42},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":2553},"to":{"krate":2,"index":5265}},{"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\iter.rs","byte_start":210171,"byte_end":210177,"line_start":185,"line_end":185,"column_start":50,"column_end":56},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":2486},"to":{"krate":2,"index":5213}},{"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\iter.rs","byte_start":211372,"byte_end":211383,"line_start":228,"line_end":228,"column_start":30,"column_end":41},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":2509},"to":{"krate":2,"index":5217}},{"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\iter.rs","byte_start":211936,"byte_end":211950,"line_start":255,"line_end":255,"column_start":30,"column_end":44},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":2528},"to":{"krate":2,"index":5217}},{"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":225395,"byte_end":225400,"line_start":39,"line_end":39,"column_start":26,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":2050},"to":{"krate":0,"index":472}},{"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":249151,"byte_end":249161,"line_start":828,"line_end":828,"column_start":29,"column_end":39},"kind":"SuperTrait","from":{"krate":0,"index":472},"to":{"krate":0,"index":519}},{"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":262229,"byte_end":262235,"line_start":1223,"line_end":1223,"column_start":27,"column_end":33},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":2486},"to":{"krate":0,"index":472}},{"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":264093,"byte_end":264104,"line_start":1294,"line_end":1294,"column_start":31,"column_end":42},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":2509},"to":{"krate":0,"index":472}},{"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":264379,"byte_end":264393,"line_start":1309,"line_end":1309,"column_start":31,"column_end":45},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":2528},"to":{"krate":0,"index":472}},{"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":264679,"byte_end":264685,"line_start":1324,"line_end":1324,"column_start":30,"column_end":36},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":2486},"to":{"krate":0,"index":519}},{"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":264842,"byte_end":264856,"line_start":1331,"line_end":1331,"column_start":34,"column_end":48},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":2528},"to":{"krate":0,"index":519}},{"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":264982,"byte_end":264993,"line_start":1338,"line_end":1338,"column_start":13,"column_end":24},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":2509},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\slice.rs","byte_start":267969,"byte_end":267983,"line_start":1425,"line_end":1425,"column_start":13,"column_end":27},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":2528},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":64779,"byte_end":64785,"line_start":127,"line_end":127,"column_start":9,"column_end":15},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":2486},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":67279,"byte_end":67285,"line_start":213,"line_end":213,"column_start":26,"column_end":32},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":2486},"to":{"krate":2,"index":1742}},{"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":67506,"byte_end":67512,"line_start":224,"line_end":224,"column_start":23,"column_end":29},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":2486},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":68614,"byte_end":68620,"line_start":271,"line_end":271,"column_start":22,"column_end":28},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":2486},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":69093,"byte_end":69099,"line_start":292,"line_end":292,"column_start":29,"column_end":35},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":2486},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":69678,"byte_end":69684,"line_start":319,"line_end":319,"column_start":32,"column_end":38},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":2486},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":72845,"byte_end":72851,"line_start":433,"line_end":433,"column_start":22,"column_end":28},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":2486},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":77526,"byte_end":77532,"line_start":596,"line_end":596,"column_start":30,"column_end":36},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":2486},"to":{"krate":0,"index":965}},{"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":77965,"byte_end":77976,"line_start":617,"line_end":617,"column_start":34,"column_end":45},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":2509},"to":{"krate":0,"index":965}},{"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":78556,"byte_end":78570,"line_start":642,"line_end":642,"column_start":34,"column_end":48},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":2528},"to":{"krate":0,"index":965}},{"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\matrix\\mod.rs","byte_start":79170,"byte_end":79176,"line_start":667,"line_end":667,"column_start":40,"column_end":46},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":2486},"to":{"krate":2,"index":6611}},{"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\convert.rs","byte_start":281455,"byte_end":281461,"line_start":13,"line_end":13,"column_start":26,"column_end":32},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":2645},"to":{"krate":2,"index":1963}},{"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\convert.rs","byte_start":281566,"byte_end":281572,"line_start":19,"line_end":19,"column_start":31,"column_end":37},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":2645},"to":{"krate":2,"index":1963}},{"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\convert.rs","byte_start":281706,"byte_end":281712,"line_start":25,"line_end":25,"column_start":29,"column_end":35},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":2486},"to":{"krate":2,"index":1963}},{"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\error.rs","byte_start":284807,"byte_end":284812,"line_start":32,"line_end":32,"column_start":6,"column_end":11},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":2626},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\error.rs","byte_start":285208,"byte_end":285213,"line_start":49,"line_end":49,"column_start":23,"column_end":28},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":2626},"to":{"krate":1,"index":1725}},{"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\error.rs","byte_start":285316,"byte_end":285321,"line_start":55,"line_end":55,"column_start":23,"column_end":28},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":2626},"to":{"krate":2,"index":6611}},{"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":292965,"byte_end":292971,"line_start":24,"line_end":24,"column_start":9,"column_end":15},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":2645},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":294218,"byte_end":294224,"line_start":78,"line_end":78,"column_start":26,"column_end":32},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":2645},"to":{"krate":2,"index":1960}},{"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":294312,"byte_end":294318,"line_start":84,"line_end":84,"column_start":26,"column_end":32},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":2645},"to":{"krate":2,"index":5217}},{"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":294672,"byte_end":294678,"line_start":102,"line_end":102,"column_start":40,"column_end":46},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":2645},"to":{"krate":2,"index":6611}},{"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":295276,"byte_end":295282,"line_start":123,"line_end":123,"column_start":26,"column_end":32},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":2645},"to":{"krate":2,"index":1742}},{"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":295466,"byte_end":295472,"line_start":133,"line_end":133,"column_start":15,"column_end":21},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":2645},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":296029,"byte_end":296035,"line_start":158,"line_end":158,"column_start":28,"column_end":34},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":2645},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":297535,"byte_end":297541,"line_start":220,"line_end":220,"column_start":23,"column_end":29},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":2645},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":297952,"byte_end":297958,"line_start":240,"line_end":240,"column_start":22,"column_end":28},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":2645},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":298407,"byte_end":298413,"line_start":260,"line_end":260,"column_start":64,"column_end":70},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":2645},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":298869,"byte_end":298875,"line_start":279,"line_end":279,"column_start":43,"column_end":49},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":2645},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":299311,"byte_end":299317,"line_start":299,"line_end":299,"column_start":36,"column_end":42},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":2645},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":299872,"byte_end":299878,"line_start":319,"line_end":319,"column_start":36,"column_end":42},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":2645},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":300417,"byte_end":300423,"line_start":339,"line_end":339,"column_start":32,"column_end":38},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":2645},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":301550,"byte_end":301556,"line_start":386,"line_end":386,"column_start":47,"column_end":53},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":2645},"to":{"krate":2,"index":2120}},{"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":301940,"byte_end":301946,"line_start":404,"line_end":404,"column_start":55,"column_end":61},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":2645},"to":{"krate":2,"index":2120}},{"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":302561,"byte_end":302567,"line_start":431,"line_end":431,"column_start":66,"column_end":72},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":2645},"to":{"krate":2,"index":2125}},{"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":302981,"byte_end":302987,"line_start":449,"line_end":449,"column_start":74,"column_end":80},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":2645},"to":{"krate":2,"index":2125}},{"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":303661,"byte_end":303667,"line_start":479,"line_end":479,"column_start":47,"column_end":53},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":2645},"to":{"krate":2,"index":2110}},{"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":304037,"byte_end":304043,"line_start":497,"line_end":497,"column_start":55,"column_end":61},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":2645},"to":{"krate":2,"index":2110}},{"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":304634,"byte_end":304640,"line_start":524,"line_end":524,"column_start":55,"column_end":61},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":2645},"to":{"krate":2,"index":2110}},{"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":305041,"byte_end":305047,"line_start":542,"line_end":542,"column_start":63,"column_end":69},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":2645},"to":{"krate":2,"index":2110}},{"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":305698,"byte_end":305704,"line_start":569,"line_end":569,"column_start":47,"column_end":53},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":2645},"to":{"krate":2,"index":2115}},{"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":306088,"byte_end":306094,"line_start":587,"line_end":587,"column_start":55,"column_end":61},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":2645},"to":{"krate":2,"index":2115}},{"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":306699,"byte_end":306705,"line_start":614,"line_end":614,"column_start":55,"column_end":61},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":2645},"to":{"krate":2,"index":2115}},{"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":307200,"byte_end":307206,"line_start":634,"line_end":634,"column_start":63,"column_end":69},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":2645},"to":{"krate":2,"index":2115}},{"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":307853,"byte_end":307859,"line_start":661,"line_end":661,"column_start":41,"column_end":47},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":2645},"to":{"krate":2,"index":2137}},{"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":308336,"byte_end":308342,"line_start":685,"line_end":685,"column_start":26,"column_end":32},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":2645},"to":{"krate":2,"index":2323}},{"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":308557,"byte_end":308563,"line_start":695,"line_end":695,"column_start":29,"column_end":35},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":2645},"to":{"krate":2,"index":2327}},{"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rulinalg-0.3.7\\src\\vector.rs","byte_start":308745,"byte_end":308751,"line_start":702,"line_end":702,"column_start":30,"column_end":36},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":2645},"to":{"krate":0,"index":965}}]}